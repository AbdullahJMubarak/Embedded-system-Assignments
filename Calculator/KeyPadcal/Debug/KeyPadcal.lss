
KeyPadcal.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000291a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000042  00800060  0000291a  0000298e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001a10  00000000  00000000  000029d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00001281  00000000  00000000  000043e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00005661  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  000057a1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00005911  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000755a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  00008445  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  000091f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  00009354  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  000095e1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00009daf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 30 00 	jmp	0x60	; 0x60 <__ctors_end>
       4:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
       8:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
       c:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
      10:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
      14:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
      18:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
      1c:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
      20:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
      24:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
      28:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
      2c:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
      30:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
      34:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
      38:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
      3c:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
      40:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
      44:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
      48:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
      4c:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
      50:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>

00000054 <__c.1988>:
      54:	63 64 69 6e 6f 70 73 75 78 58 5b 00                 cdinopsuxX[.

00000060 <__ctors_end>:
      60:	11 24       	eor	r1, r1
      62:	1f be       	out	0x3f, r1	; 63
      64:	cf e5       	ldi	r28, 0x5F	; 95
      66:	d8 e0       	ldi	r29, 0x08	; 8
      68:	de bf       	out	0x3e, r29	; 62
      6a:	cd bf       	out	0x3d, r28	; 61

0000006c <__do_copy_data>:
      6c:	10 e0       	ldi	r17, 0x00	; 0
      6e:	a0 e6       	ldi	r26, 0x60	; 96
      70:	b0 e0       	ldi	r27, 0x00	; 0
      72:	ea e1       	ldi	r30, 0x1A	; 26
      74:	f9 e2       	ldi	r31, 0x29	; 41
      76:	02 c0       	rjmp	.+4      	; 0x7c <.do_copy_data_start>

00000078 <.do_copy_data_loop>:
      78:	05 90       	lpm	r0, Z+
      7a:	0d 92       	st	X+, r0

0000007c <.do_copy_data_start>:
      7c:	a2 3a       	cpi	r26, 0xA2	; 162
      7e:	b1 07       	cpc	r27, r17
      80:	d9 f7       	brne	.-10     	; 0x78 <.do_copy_data_loop>
      82:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <main>
      86:	0c 94 8b 14 	jmp	0x2916	; 0x2916 <_exit>

0000008a <__bad_interrupt>:
      8a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000008e <__fixunssfsi>:
      8e:	ef 92       	push	r14
      90:	ff 92       	push	r15
      92:	0f 93       	push	r16
      94:	1f 93       	push	r17
      96:	7b 01       	movw	r14, r22
      98:	8c 01       	movw	r16, r24
      9a:	20 e0       	ldi	r18, 0x00	; 0
      9c:	30 e0       	ldi	r19, 0x00	; 0
      9e:	40 e0       	ldi	r20, 0x00	; 0
      a0:	5f e4       	ldi	r21, 0x4F	; 79
      a2:	0e 94 47 03 	call	0x68e	; 0x68e <__gesf2>
      a6:	88 23       	and	r24, r24
      a8:	8c f0       	brlt	.+34     	; 0xcc <__fixunssfsi+0x3e>
      aa:	c8 01       	movw	r24, r16
      ac:	b7 01       	movw	r22, r14
      ae:	20 e0       	ldi	r18, 0x00	; 0
      b0:	30 e0       	ldi	r19, 0x00	; 0
      b2:	40 e0       	ldi	r20, 0x00	; 0
      b4:	5f e4       	ldi	r21, 0x4F	; 79
      b6:	0e 94 bf 01 	call	0x37e	; 0x37e <__subsf3>
      ba:	0e 94 a7 03 	call	0x74e	; 0x74e <__fixsfsi>
      be:	9b 01       	movw	r18, r22
      c0:	ac 01       	movw	r20, r24
      c2:	20 50       	subi	r18, 0x00	; 0
      c4:	30 40       	sbci	r19, 0x00	; 0
      c6:	40 40       	sbci	r20, 0x00	; 0
      c8:	50 48       	sbci	r21, 0x80	; 128
      ca:	06 c0       	rjmp	.+12     	; 0xd8 <__fixunssfsi+0x4a>
      cc:	c8 01       	movw	r24, r16
      ce:	b7 01       	movw	r22, r14
      d0:	0e 94 a7 03 	call	0x74e	; 0x74e <__fixsfsi>
      d4:	9b 01       	movw	r18, r22
      d6:	ac 01       	movw	r20, r24
      d8:	b9 01       	movw	r22, r18
      da:	ca 01       	movw	r24, r20
      dc:	1f 91       	pop	r17
      de:	0f 91       	pop	r16
      e0:	ff 90       	pop	r15
      e2:	ef 90       	pop	r14
      e4:	08 95       	ret

000000e6 <_fpadd_parts>:
      e6:	a0 e0       	ldi	r26, 0x00	; 0
      e8:	b0 e0       	ldi	r27, 0x00	; 0
      ea:	e9 e7       	ldi	r30, 0x79	; 121
      ec:	f0 e0       	ldi	r31, 0x00	; 0
      ee:	0c 94 61 0e 	jmp	0x1cc2	; 0x1cc2 <__prologue_saves__>
      f2:	dc 01       	movw	r26, r24
      f4:	2b 01       	movw	r4, r22
      f6:	fa 01       	movw	r30, r20
      f8:	9c 91       	ld	r25, X
      fa:	92 30       	cpi	r25, 0x02	; 2
      fc:	08 f4       	brcc	.+2      	; 0x100 <_fpadd_parts+0x1a>
      fe:	39 c1       	rjmp	.+626    	; 0x372 <_fpadd_parts+0x28c>
     100:	eb 01       	movw	r28, r22
     102:	88 81       	ld	r24, Y
     104:	82 30       	cpi	r24, 0x02	; 2
     106:	08 f4       	brcc	.+2      	; 0x10a <_fpadd_parts+0x24>
     108:	33 c1       	rjmp	.+614    	; 0x370 <_fpadd_parts+0x28a>
     10a:	94 30       	cpi	r25, 0x04	; 4
     10c:	69 f4       	brne	.+26     	; 0x128 <_fpadd_parts+0x42>
     10e:	84 30       	cpi	r24, 0x04	; 4
     110:	09 f0       	breq	.+2      	; 0x114 <_fpadd_parts+0x2e>
     112:	2f c1       	rjmp	.+606    	; 0x372 <_fpadd_parts+0x28c>
     114:	11 96       	adiw	r26, 0x01	; 1
     116:	9c 91       	ld	r25, X
     118:	11 97       	sbiw	r26, 0x01	; 1
     11a:	89 81       	ldd	r24, Y+1	; 0x01
     11c:	98 17       	cp	r25, r24
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x3c>
     120:	28 c1       	rjmp	.+592    	; 0x372 <_fpadd_parts+0x28c>
     122:	a9 e8       	ldi	r26, 0x89	; 137
     124:	b0 e0       	ldi	r27, 0x00	; 0
     126:	25 c1       	rjmp	.+586    	; 0x372 <_fpadd_parts+0x28c>
     128:	84 30       	cpi	r24, 0x04	; 4
     12a:	09 f4       	brne	.+2      	; 0x12e <_fpadd_parts+0x48>
     12c:	21 c1       	rjmp	.+578    	; 0x370 <_fpadd_parts+0x28a>
     12e:	82 30       	cpi	r24, 0x02	; 2
     130:	a9 f4       	brne	.+42     	; 0x15c <_fpadd_parts+0x76>
     132:	92 30       	cpi	r25, 0x02	; 2
     134:	09 f0       	breq	.+2      	; 0x138 <_fpadd_parts+0x52>
     136:	1d c1       	rjmp	.+570    	; 0x372 <_fpadd_parts+0x28c>
     138:	9a 01       	movw	r18, r20
     13a:	ad 01       	movw	r20, r26
     13c:	88 e0       	ldi	r24, 0x08	; 8
     13e:	ea 01       	movw	r28, r20
     140:	09 90       	ld	r0, Y+
     142:	ae 01       	movw	r20, r28
     144:	e9 01       	movw	r28, r18
     146:	09 92       	st	Y+, r0
     148:	9e 01       	movw	r18, r28
     14a:	81 50       	subi	r24, 0x01	; 1
     14c:	c1 f7       	brne	.-16     	; 0x13e <_fpadd_parts+0x58>
     14e:	e2 01       	movw	r28, r4
     150:	89 81       	ldd	r24, Y+1	; 0x01
     152:	11 96       	adiw	r26, 0x01	; 1
     154:	9c 91       	ld	r25, X
     156:	89 23       	and	r24, r25
     158:	81 83       	std	Z+1, r24	; 0x01
     15a:	08 c1       	rjmp	.+528    	; 0x36c <_fpadd_parts+0x286>
     15c:	92 30       	cpi	r25, 0x02	; 2
     15e:	09 f4       	brne	.+2      	; 0x162 <_fpadd_parts+0x7c>
     160:	07 c1       	rjmp	.+526    	; 0x370 <_fpadd_parts+0x28a>
     162:	12 96       	adiw	r26, 0x02	; 2
     164:	2d 90       	ld	r2, X+
     166:	3c 90       	ld	r3, X
     168:	13 97       	sbiw	r26, 0x03	; 3
     16a:	eb 01       	movw	r28, r22
     16c:	8a 81       	ldd	r24, Y+2	; 0x02
     16e:	9b 81       	ldd	r25, Y+3	; 0x03
     170:	14 96       	adiw	r26, 0x04	; 4
     172:	ad 90       	ld	r10, X+
     174:	bd 90       	ld	r11, X+
     176:	cd 90       	ld	r12, X+
     178:	dc 90       	ld	r13, X
     17a:	17 97       	sbiw	r26, 0x07	; 7
     17c:	ec 80       	ldd	r14, Y+4	; 0x04
     17e:	fd 80       	ldd	r15, Y+5	; 0x05
     180:	0e 81       	ldd	r16, Y+6	; 0x06
     182:	1f 81       	ldd	r17, Y+7	; 0x07
     184:	91 01       	movw	r18, r2
     186:	28 1b       	sub	r18, r24
     188:	39 0b       	sbc	r19, r25
     18a:	b9 01       	movw	r22, r18
     18c:	37 ff       	sbrs	r19, 7
     18e:	04 c0       	rjmp	.+8      	; 0x198 <_fpadd_parts+0xb2>
     190:	66 27       	eor	r22, r22
     192:	77 27       	eor	r23, r23
     194:	62 1b       	sub	r22, r18
     196:	73 0b       	sbc	r23, r19
     198:	60 32       	cpi	r22, 0x20	; 32
     19a:	71 05       	cpc	r23, r1
     19c:	0c f0       	brlt	.+2      	; 0x1a0 <_fpadd_parts+0xba>
     19e:	61 c0       	rjmp	.+194    	; 0x262 <_fpadd_parts+0x17c>
     1a0:	12 16       	cp	r1, r18
     1a2:	13 06       	cpc	r1, r19
     1a4:	6c f5       	brge	.+90     	; 0x200 <_fpadd_parts+0x11a>
     1a6:	37 01       	movw	r6, r14
     1a8:	48 01       	movw	r8, r16
     1aa:	06 2e       	mov	r0, r22
     1ac:	04 c0       	rjmp	.+8      	; 0x1b6 <_fpadd_parts+0xd0>
     1ae:	96 94       	lsr	r9
     1b0:	87 94       	ror	r8
     1b2:	77 94       	ror	r7
     1b4:	67 94       	ror	r6
     1b6:	0a 94       	dec	r0
     1b8:	d2 f7       	brpl	.-12     	; 0x1ae <_fpadd_parts+0xc8>
     1ba:	21 e0       	ldi	r18, 0x01	; 1
     1bc:	30 e0       	ldi	r19, 0x00	; 0
     1be:	40 e0       	ldi	r20, 0x00	; 0
     1c0:	50 e0       	ldi	r21, 0x00	; 0
     1c2:	04 c0       	rjmp	.+8      	; 0x1cc <_fpadd_parts+0xe6>
     1c4:	22 0f       	add	r18, r18
     1c6:	33 1f       	adc	r19, r19
     1c8:	44 1f       	adc	r20, r20
     1ca:	55 1f       	adc	r21, r21
     1cc:	6a 95       	dec	r22
     1ce:	d2 f7       	brpl	.-12     	; 0x1c4 <_fpadd_parts+0xde>
     1d0:	21 50       	subi	r18, 0x01	; 1
     1d2:	30 40       	sbci	r19, 0x00	; 0
     1d4:	40 40       	sbci	r20, 0x00	; 0
     1d6:	50 40       	sbci	r21, 0x00	; 0
     1d8:	2e 21       	and	r18, r14
     1da:	3f 21       	and	r19, r15
     1dc:	40 23       	and	r20, r16
     1de:	51 23       	and	r21, r17
     1e0:	21 15       	cp	r18, r1
     1e2:	31 05       	cpc	r19, r1
     1e4:	41 05       	cpc	r20, r1
     1e6:	51 05       	cpc	r21, r1
     1e8:	21 f0       	breq	.+8      	; 0x1f2 <_fpadd_parts+0x10c>
     1ea:	21 e0       	ldi	r18, 0x01	; 1
     1ec:	30 e0       	ldi	r19, 0x00	; 0
     1ee:	40 e0       	ldi	r20, 0x00	; 0
     1f0:	50 e0       	ldi	r21, 0x00	; 0
     1f2:	79 01       	movw	r14, r18
     1f4:	8a 01       	movw	r16, r20
     1f6:	e6 28       	or	r14, r6
     1f8:	f7 28       	or	r15, r7
     1fa:	08 29       	or	r16, r8
     1fc:	19 29       	or	r17, r9
     1fe:	3c c0       	rjmp	.+120    	; 0x278 <_fpadd_parts+0x192>
     200:	23 2b       	or	r18, r19
     202:	d1 f1       	breq	.+116    	; 0x278 <_fpadd_parts+0x192>
     204:	26 0e       	add	r2, r22
     206:	37 1e       	adc	r3, r23
     208:	35 01       	movw	r6, r10
     20a:	46 01       	movw	r8, r12
     20c:	06 2e       	mov	r0, r22
     20e:	04 c0       	rjmp	.+8      	; 0x218 <_fpadd_parts+0x132>
     210:	96 94       	lsr	r9
     212:	87 94       	ror	r8
     214:	77 94       	ror	r7
     216:	67 94       	ror	r6
     218:	0a 94       	dec	r0
     21a:	d2 f7       	brpl	.-12     	; 0x210 <_fpadd_parts+0x12a>
     21c:	21 e0       	ldi	r18, 0x01	; 1
     21e:	30 e0       	ldi	r19, 0x00	; 0
     220:	40 e0       	ldi	r20, 0x00	; 0
     222:	50 e0       	ldi	r21, 0x00	; 0
     224:	04 c0       	rjmp	.+8      	; 0x22e <_fpadd_parts+0x148>
     226:	22 0f       	add	r18, r18
     228:	33 1f       	adc	r19, r19
     22a:	44 1f       	adc	r20, r20
     22c:	55 1f       	adc	r21, r21
     22e:	6a 95       	dec	r22
     230:	d2 f7       	brpl	.-12     	; 0x226 <_fpadd_parts+0x140>
     232:	21 50       	subi	r18, 0x01	; 1
     234:	30 40       	sbci	r19, 0x00	; 0
     236:	40 40       	sbci	r20, 0x00	; 0
     238:	50 40       	sbci	r21, 0x00	; 0
     23a:	2a 21       	and	r18, r10
     23c:	3b 21       	and	r19, r11
     23e:	4c 21       	and	r20, r12
     240:	5d 21       	and	r21, r13
     242:	21 15       	cp	r18, r1
     244:	31 05       	cpc	r19, r1
     246:	41 05       	cpc	r20, r1
     248:	51 05       	cpc	r21, r1
     24a:	21 f0       	breq	.+8      	; 0x254 <_fpadd_parts+0x16e>
     24c:	21 e0       	ldi	r18, 0x01	; 1
     24e:	30 e0       	ldi	r19, 0x00	; 0
     250:	40 e0       	ldi	r20, 0x00	; 0
     252:	50 e0       	ldi	r21, 0x00	; 0
     254:	59 01       	movw	r10, r18
     256:	6a 01       	movw	r12, r20
     258:	a6 28       	or	r10, r6
     25a:	b7 28       	or	r11, r7
     25c:	c8 28       	or	r12, r8
     25e:	d9 28       	or	r13, r9
     260:	0b c0       	rjmp	.+22     	; 0x278 <_fpadd_parts+0x192>
     262:	82 15       	cp	r24, r2
     264:	93 05       	cpc	r25, r3
     266:	2c f0       	brlt	.+10     	; 0x272 <_fpadd_parts+0x18c>
     268:	1c 01       	movw	r2, r24
     26a:	aa 24       	eor	r10, r10
     26c:	bb 24       	eor	r11, r11
     26e:	65 01       	movw	r12, r10
     270:	03 c0       	rjmp	.+6      	; 0x278 <_fpadd_parts+0x192>
     272:	ee 24       	eor	r14, r14
     274:	ff 24       	eor	r15, r15
     276:	87 01       	movw	r16, r14
     278:	11 96       	adiw	r26, 0x01	; 1
     27a:	9c 91       	ld	r25, X
     27c:	d2 01       	movw	r26, r4
     27e:	11 96       	adiw	r26, 0x01	; 1
     280:	8c 91       	ld	r24, X
     282:	98 17       	cp	r25, r24
     284:	09 f4       	brne	.+2      	; 0x288 <_fpadd_parts+0x1a2>
     286:	45 c0       	rjmp	.+138    	; 0x312 <_fpadd_parts+0x22c>
     288:	99 23       	and	r25, r25
     28a:	39 f0       	breq	.+14     	; 0x29a <_fpadd_parts+0x1b4>
     28c:	a8 01       	movw	r20, r16
     28e:	97 01       	movw	r18, r14
     290:	2a 19       	sub	r18, r10
     292:	3b 09       	sbc	r19, r11
     294:	4c 09       	sbc	r20, r12
     296:	5d 09       	sbc	r21, r13
     298:	06 c0       	rjmp	.+12     	; 0x2a6 <_fpadd_parts+0x1c0>
     29a:	a6 01       	movw	r20, r12
     29c:	95 01       	movw	r18, r10
     29e:	2e 19       	sub	r18, r14
     2a0:	3f 09       	sbc	r19, r15
     2a2:	40 0b       	sbc	r20, r16
     2a4:	51 0b       	sbc	r21, r17
     2a6:	57 fd       	sbrc	r21, 7
     2a8:	08 c0       	rjmp	.+16     	; 0x2ba <_fpadd_parts+0x1d4>
     2aa:	11 82       	std	Z+1, r1	; 0x01
     2ac:	33 82       	std	Z+3, r3	; 0x03
     2ae:	22 82       	std	Z+2, r2	; 0x02
     2b0:	24 83       	std	Z+4, r18	; 0x04
     2b2:	35 83       	std	Z+5, r19	; 0x05
     2b4:	46 83       	std	Z+6, r20	; 0x06
     2b6:	57 83       	std	Z+7, r21	; 0x07
     2b8:	1d c0       	rjmp	.+58     	; 0x2f4 <_fpadd_parts+0x20e>
     2ba:	81 e0       	ldi	r24, 0x01	; 1
     2bc:	81 83       	std	Z+1, r24	; 0x01
     2be:	33 82       	std	Z+3, r3	; 0x03
     2c0:	22 82       	std	Z+2, r2	; 0x02
     2c2:	88 27       	eor	r24, r24
     2c4:	99 27       	eor	r25, r25
     2c6:	dc 01       	movw	r26, r24
     2c8:	82 1b       	sub	r24, r18
     2ca:	93 0b       	sbc	r25, r19
     2cc:	a4 0b       	sbc	r26, r20
     2ce:	b5 0b       	sbc	r27, r21
     2d0:	84 83       	std	Z+4, r24	; 0x04
     2d2:	95 83       	std	Z+5, r25	; 0x05
     2d4:	a6 83       	std	Z+6, r26	; 0x06
     2d6:	b7 83       	std	Z+7, r27	; 0x07
     2d8:	0d c0       	rjmp	.+26     	; 0x2f4 <_fpadd_parts+0x20e>
     2da:	22 0f       	add	r18, r18
     2dc:	33 1f       	adc	r19, r19
     2de:	44 1f       	adc	r20, r20
     2e0:	55 1f       	adc	r21, r21
     2e2:	24 83       	std	Z+4, r18	; 0x04
     2e4:	35 83       	std	Z+5, r19	; 0x05
     2e6:	46 83       	std	Z+6, r20	; 0x06
     2e8:	57 83       	std	Z+7, r21	; 0x07
     2ea:	82 81       	ldd	r24, Z+2	; 0x02
     2ec:	93 81       	ldd	r25, Z+3	; 0x03
     2ee:	01 97       	sbiw	r24, 0x01	; 1
     2f0:	93 83       	std	Z+3, r25	; 0x03
     2f2:	82 83       	std	Z+2, r24	; 0x02
     2f4:	24 81       	ldd	r18, Z+4	; 0x04
     2f6:	35 81       	ldd	r19, Z+5	; 0x05
     2f8:	46 81       	ldd	r20, Z+6	; 0x06
     2fa:	57 81       	ldd	r21, Z+7	; 0x07
     2fc:	da 01       	movw	r26, r20
     2fe:	c9 01       	movw	r24, r18
     300:	01 97       	sbiw	r24, 0x01	; 1
     302:	a1 09       	sbc	r26, r1
     304:	b1 09       	sbc	r27, r1
     306:	8f 5f       	subi	r24, 0xFF	; 255
     308:	9f 4f       	sbci	r25, 0xFF	; 255
     30a:	af 4f       	sbci	r26, 0xFF	; 255
     30c:	bf 43       	sbci	r27, 0x3F	; 63
     30e:	28 f3       	brcs	.-54     	; 0x2da <_fpadd_parts+0x1f4>
     310:	0b c0       	rjmp	.+22     	; 0x328 <_fpadd_parts+0x242>
     312:	91 83       	std	Z+1, r25	; 0x01
     314:	33 82       	std	Z+3, r3	; 0x03
     316:	22 82       	std	Z+2, r2	; 0x02
     318:	ea 0c       	add	r14, r10
     31a:	fb 1c       	adc	r15, r11
     31c:	0c 1d       	adc	r16, r12
     31e:	1d 1d       	adc	r17, r13
     320:	e4 82       	std	Z+4, r14	; 0x04
     322:	f5 82       	std	Z+5, r15	; 0x05
     324:	06 83       	std	Z+6, r16	; 0x06
     326:	17 83       	std	Z+7, r17	; 0x07
     328:	83 e0       	ldi	r24, 0x03	; 3
     32a:	80 83       	st	Z, r24
     32c:	24 81       	ldd	r18, Z+4	; 0x04
     32e:	35 81       	ldd	r19, Z+5	; 0x05
     330:	46 81       	ldd	r20, Z+6	; 0x06
     332:	57 81       	ldd	r21, Z+7	; 0x07
     334:	57 ff       	sbrs	r21, 7
     336:	1a c0       	rjmp	.+52     	; 0x36c <_fpadd_parts+0x286>
     338:	c9 01       	movw	r24, r18
     33a:	aa 27       	eor	r26, r26
     33c:	97 fd       	sbrc	r25, 7
     33e:	a0 95       	com	r26
     340:	ba 2f       	mov	r27, r26
     342:	81 70       	andi	r24, 0x01	; 1
     344:	90 70       	andi	r25, 0x00	; 0
     346:	a0 70       	andi	r26, 0x00	; 0
     348:	b0 70       	andi	r27, 0x00	; 0
     34a:	56 95       	lsr	r21
     34c:	47 95       	ror	r20
     34e:	37 95       	ror	r19
     350:	27 95       	ror	r18
     352:	82 2b       	or	r24, r18
     354:	93 2b       	or	r25, r19
     356:	a4 2b       	or	r26, r20
     358:	b5 2b       	or	r27, r21
     35a:	84 83       	std	Z+4, r24	; 0x04
     35c:	95 83       	std	Z+5, r25	; 0x05
     35e:	a6 83       	std	Z+6, r26	; 0x06
     360:	b7 83       	std	Z+7, r27	; 0x07
     362:	82 81       	ldd	r24, Z+2	; 0x02
     364:	93 81       	ldd	r25, Z+3	; 0x03
     366:	01 96       	adiw	r24, 0x01	; 1
     368:	93 83       	std	Z+3, r25	; 0x03
     36a:	82 83       	std	Z+2, r24	; 0x02
     36c:	df 01       	movw	r26, r30
     36e:	01 c0       	rjmp	.+2      	; 0x372 <_fpadd_parts+0x28c>
     370:	d2 01       	movw	r26, r4
     372:	cd 01       	movw	r24, r26
     374:	cd b7       	in	r28, 0x3d	; 61
     376:	de b7       	in	r29, 0x3e	; 62
     378:	e2 e1       	ldi	r30, 0x12	; 18
     37a:	0c 94 7d 0e 	jmp	0x1cfa	; 0x1cfa <__epilogue_restores__>

0000037e <__subsf3>:
     37e:	a0 e2       	ldi	r26, 0x20	; 32
     380:	b0 e0       	ldi	r27, 0x00	; 0
     382:	e5 ec       	ldi	r30, 0xC5	; 197
     384:	f1 e0       	ldi	r31, 0x01	; 1
     386:	0c 94 6d 0e 	jmp	0x1cda	; 0x1cda <__prologue_saves__+0x18>
     38a:	69 83       	std	Y+1, r22	; 0x01
     38c:	7a 83       	std	Y+2, r23	; 0x02
     38e:	8b 83       	std	Y+3, r24	; 0x03
     390:	9c 83       	std	Y+4, r25	; 0x04
     392:	2d 83       	std	Y+5, r18	; 0x05
     394:	3e 83       	std	Y+6, r19	; 0x06
     396:	4f 83       	std	Y+7, r20	; 0x07
     398:	58 87       	std	Y+8, r21	; 0x08
     39a:	e9 e0       	ldi	r30, 0x09	; 9
     39c:	ee 2e       	mov	r14, r30
     39e:	f1 2c       	mov	r15, r1
     3a0:	ec 0e       	add	r14, r28
     3a2:	fd 1e       	adc	r15, r29
     3a4:	ce 01       	movw	r24, r28
     3a6:	01 96       	adiw	r24, 0x01	; 1
     3a8:	b7 01       	movw	r22, r14
     3aa:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <__unpack_f>
     3ae:	8e 01       	movw	r16, r28
     3b0:	0f 5e       	subi	r16, 0xEF	; 239
     3b2:	1f 4f       	sbci	r17, 0xFF	; 255
     3b4:	ce 01       	movw	r24, r28
     3b6:	05 96       	adiw	r24, 0x05	; 5
     3b8:	b8 01       	movw	r22, r16
     3ba:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <__unpack_f>
     3be:	8a 89       	ldd	r24, Y+18	; 0x12
     3c0:	91 e0       	ldi	r25, 0x01	; 1
     3c2:	89 27       	eor	r24, r25
     3c4:	8a 8b       	std	Y+18, r24	; 0x12
     3c6:	c7 01       	movw	r24, r14
     3c8:	b8 01       	movw	r22, r16
     3ca:	ae 01       	movw	r20, r28
     3cc:	47 5e       	subi	r20, 0xE7	; 231
     3ce:	5f 4f       	sbci	r21, 0xFF	; 255
     3d0:	0e 94 73 00 	call	0xe6	; 0xe6 <_fpadd_parts>
     3d4:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <__pack_f>
     3d8:	a0 96       	adiw	r28, 0x20	; 32
     3da:	e6 e0       	ldi	r30, 0x06	; 6
     3dc:	0c 94 89 0e 	jmp	0x1d12	; 0x1d12 <__epilogue_restores__+0x18>

000003e0 <__addsf3>:
     3e0:	a0 e2       	ldi	r26, 0x20	; 32
     3e2:	b0 e0       	ldi	r27, 0x00	; 0
     3e4:	e6 ef       	ldi	r30, 0xF6	; 246
     3e6:	f1 e0       	ldi	r31, 0x01	; 1
     3e8:	0c 94 6d 0e 	jmp	0x1cda	; 0x1cda <__prologue_saves__+0x18>
     3ec:	69 83       	std	Y+1, r22	; 0x01
     3ee:	7a 83       	std	Y+2, r23	; 0x02
     3f0:	8b 83       	std	Y+3, r24	; 0x03
     3f2:	9c 83       	std	Y+4, r25	; 0x04
     3f4:	2d 83       	std	Y+5, r18	; 0x05
     3f6:	3e 83       	std	Y+6, r19	; 0x06
     3f8:	4f 83       	std	Y+7, r20	; 0x07
     3fa:	58 87       	std	Y+8, r21	; 0x08
     3fc:	f9 e0       	ldi	r31, 0x09	; 9
     3fe:	ef 2e       	mov	r14, r31
     400:	f1 2c       	mov	r15, r1
     402:	ec 0e       	add	r14, r28
     404:	fd 1e       	adc	r15, r29
     406:	ce 01       	movw	r24, r28
     408:	01 96       	adiw	r24, 0x01	; 1
     40a:	b7 01       	movw	r22, r14
     40c:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <__unpack_f>
     410:	8e 01       	movw	r16, r28
     412:	0f 5e       	subi	r16, 0xEF	; 239
     414:	1f 4f       	sbci	r17, 0xFF	; 255
     416:	ce 01       	movw	r24, r28
     418:	05 96       	adiw	r24, 0x05	; 5
     41a:	b8 01       	movw	r22, r16
     41c:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <__unpack_f>
     420:	c7 01       	movw	r24, r14
     422:	b8 01       	movw	r22, r16
     424:	ae 01       	movw	r20, r28
     426:	47 5e       	subi	r20, 0xE7	; 231
     428:	5f 4f       	sbci	r21, 0xFF	; 255
     42a:	0e 94 73 00 	call	0xe6	; 0xe6 <_fpadd_parts>
     42e:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <__pack_f>
     432:	a0 96       	adiw	r28, 0x20	; 32
     434:	e6 e0       	ldi	r30, 0x06	; 6
     436:	0c 94 89 0e 	jmp	0x1d12	; 0x1d12 <__epilogue_restores__+0x18>

0000043a <__mulsf3>:
     43a:	a0 e2       	ldi	r26, 0x20	; 32
     43c:	b0 e0       	ldi	r27, 0x00	; 0
     43e:	e3 e2       	ldi	r30, 0x23	; 35
     440:	f2 e0       	ldi	r31, 0x02	; 2
     442:	0c 94 61 0e 	jmp	0x1cc2	; 0x1cc2 <__prologue_saves__>
     446:	69 83       	std	Y+1, r22	; 0x01
     448:	7a 83       	std	Y+2, r23	; 0x02
     44a:	8b 83       	std	Y+3, r24	; 0x03
     44c:	9c 83       	std	Y+4, r25	; 0x04
     44e:	2d 83       	std	Y+5, r18	; 0x05
     450:	3e 83       	std	Y+6, r19	; 0x06
     452:	4f 83       	std	Y+7, r20	; 0x07
     454:	58 87       	std	Y+8, r21	; 0x08
     456:	ce 01       	movw	r24, r28
     458:	01 96       	adiw	r24, 0x01	; 1
     45a:	be 01       	movw	r22, r28
     45c:	67 5f       	subi	r22, 0xF7	; 247
     45e:	7f 4f       	sbci	r23, 0xFF	; 255
     460:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <__unpack_f>
     464:	ce 01       	movw	r24, r28
     466:	05 96       	adiw	r24, 0x05	; 5
     468:	be 01       	movw	r22, r28
     46a:	6f 5e       	subi	r22, 0xEF	; 239
     46c:	7f 4f       	sbci	r23, 0xFF	; 255
     46e:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <__unpack_f>
     472:	99 85       	ldd	r25, Y+9	; 0x09
     474:	92 30       	cpi	r25, 0x02	; 2
     476:	88 f0       	brcs	.+34     	; 0x49a <__mulsf3+0x60>
     478:	89 89       	ldd	r24, Y+17	; 0x11
     47a:	82 30       	cpi	r24, 0x02	; 2
     47c:	c8 f0       	brcs	.+50     	; 0x4b0 <__mulsf3+0x76>
     47e:	94 30       	cpi	r25, 0x04	; 4
     480:	19 f4       	brne	.+6      	; 0x488 <__mulsf3+0x4e>
     482:	82 30       	cpi	r24, 0x02	; 2
     484:	51 f4       	brne	.+20     	; 0x49a <__mulsf3+0x60>
     486:	04 c0       	rjmp	.+8      	; 0x490 <__mulsf3+0x56>
     488:	84 30       	cpi	r24, 0x04	; 4
     48a:	29 f4       	brne	.+10     	; 0x496 <__mulsf3+0x5c>
     48c:	92 30       	cpi	r25, 0x02	; 2
     48e:	81 f4       	brne	.+32     	; 0x4b0 <__mulsf3+0x76>
     490:	89 e8       	ldi	r24, 0x89	; 137
     492:	90 e0       	ldi	r25, 0x00	; 0
     494:	c6 c0       	rjmp	.+396    	; 0x622 <__mulsf3+0x1e8>
     496:	92 30       	cpi	r25, 0x02	; 2
     498:	49 f4       	brne	.+18     	; 0x4ac <__mulsf3+0x72>
     49a:	20 e0       	ldi	r18, 0x00	; 0
     49c:	9a 85       	ldd	r25, Y+10	; 0x0a
     49e:	8a 89       	ldd	r24, Y+18	; 0x12
     4a0:	98 13       	cpse	r25, r24
     4a2:	21 e0       	ldi	r18, 0x01	; 1
     4a4:	2a 87       	std	Y+10, r18	; 0x0a
     4a6:	ce 01       	movw	r24, r28
     4a8:	09 96       	adiw	r24, 0x09	; 9
     4aa:	bb c0       	rjmp	.+374    	; 0x622 <__mulsf3+0x1e8>
     4ac:	82 30       	cpi	r24, 0x02	; 2
     4ae:	49 f4       	brne	.+18     	; 0x4c2 <__mulsf3+0x88>
     4b0:	20 e0       	ldi	r18, 0x00	; 0
     4b2:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b4:	8a 89       	ldd	r24, Y+18	; 0x12
     4b6:	98 13       	cpse	r25, r24
     4b8:	21 e0       	ldi	r18, 0x01	; 1
     4ba:	2a 8b       	std	Y+18, r18	; 0x12
     4bc:	ce 01       	movw	r24, r28
     4be:	41 96       	adiw	r24, 0x11	; 17
     4c0:	b0 c0       	rjmp	.+352    	; 0x622 <__mulsf3+0x1e8>
     4c2:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c4:	3e 84       	ldd	r3, Y+14	; 0x0e
     4c6:	4f 84       	ldd	r4, Y+15	; 0x0f
     4c8:	58 88       	ldd	r5, Y+16	; 0x10
     4ca:	6d 88       	ldd	r6, Y+21	; 0x15
     4cc:	7e 88       	ldd	r7, Y+22	; 0x16
     4ce:	8f 88       	ldd	r8, Y+23	; 0x17
     4d0:	98 8c       	ldd	r9, Y+24	; 0x18
     4d2:	ee 24       	eor	r14, r14
     4d4:	ff 24       	eor	r15, r15
     4d6:	87 01       	movw	r16, r14
     4d8:	aa 24       	eor	r10, r10
     4da:	bb 24       	eor	r11, r11
     4dc:	65 01       	movw	r12, r10
     4de:	40 e0       	ldi	r20, 0x00	; 0
     4e0:	50 e0       	ldi	r21, 0x00	; 0
     4e2:	60 e0       	ldi	r22, 0x00	; 0
     4e4:	70 e0       	ldi	r23, 0x00	; 0
     4e6:	e0 e0       	ldi	r30, 0x00	; 0
     4e8:	f0 e0       	ldi	r31, 0x00	; 0
     4ea:	c1 01       	movw	r24, r2
     4ec:	81 70       	andi	r24, 0x01	; 1
     4ee:	90 70       	andi	r25, 0x00	; 0
     4f0:	89 2b       	or	r24, r25
     4f2:	e9 f0       	breq	.+58     	; 0x52e <__mulsf3+0xf4>
     4f4:	e6 0c       	add	r14, r6
     4f6:	f7 1c       	adc	r15, r7
     4f8:	08 1d       	adc	r16, r8
     4fa:	19 1d       	adc	r17, r9
     4fc:	9a 01       	movw	r18, r20
     4fe:	ab 01       	movw	r20, r22
     500:	2a 0d       	add	r18, r10
     502:	3b 1d       	adc	r19, r11
     504:	4c 1d       	adc	r20, r12
     506:	5d 1d       	adc	r21, r13
     508:	80 e0       	ldi	r24, 0x00	; 0
     50a:	90 e0       	ldi	r25, 0x00	; 0
     50c:	a0 e0       	ldi	r26, 0x00	; 0
     50e:	b0 e0       	ldi	r27, 0x00	; 0
     510:	e6 14       	cp	r14, r6
     512:	f7 04       	cpc	r15, r7
     514:	08 05       	cpc	r16, r8
     516:	19 05       	cpc	r17, r9
     518:	20 f4       	brcc	.+8      	; 0x522 <__mulsf3+0xe8>
     51a:	81 e0       	ldi	r24, 0x01	; 1
     51c:	90 e0       	ldi	r25, 0x00	; 0
     51e:	a0 e0       	ldi	r26, 0x00	; 0
     520:	b0 e0       	ldi	r27, 0x00	; 0
     522:	ba 01       	movw	r22, r20
     524:	a9 01       	movw	r20, r18
     526:	48 0f       	add	r20, r24
     528:	59 1f       	adc	r21, r25
     52a:	6a 1f       	adc	r22, r26
     52c:	7b 1f       	adc	r23, r27
     52e:	aa 0c       	add	r10, r10
     530:	bb 1c       	adc	r11, r11
     532:	cc 1c       	adc	r12, r12
     534:	dd 1c       	adc	r13, r13
     536:	97 fe       	sbrs	r9, 7
     538:	08 c0       	rjmp	.+16     	; 0x54a <__mulsf3+0x110>
     53a:	81 e0       	ldi	r24, 0x01	; 1
     53c:	90 e0       	ldi	r25, 0x00	; 0
     53e:	a0 e0       	ldi	r26, 0x00	; 0
     540:	b0 e0       	ldi	r27, 0x00	; 0
     542:	a8 2a       	or	r10, r24
     544:	b9 2a       	or	r11, r25
     546:	ca 2a       	or	r12, r26
     548:	db 2a       	or	r13, r27
     54a:	31 96       	adiw	r30, 0x01	; 1
     54c:	e0 32       	cpi	r30, 0x20	; 32
     54e:	f1 05       	cpc	r31, r1
     550:	49 f0       	breq	.+18     	; 0x564 <__mulsf3+0x12a>
     552:	66 0c       	add	r6, r6
     554:	77 1c       	adc	r7, r7
     556:	88 1c       	adc	r8, r8
     558:	99 1c       	adc	r9, r9
     55a:	56 94       	lsr	r5
     55c:	47 94       	ror	r4
     55e:	37 94       	ror	r3
     560:	27 94       	ror	r2
     562:	c3 cf       	rjmp	.-122    	; 0x4ea <__mulsf3+0xb0>
     564:	fa 85       	ldd	r31, Y+10	; 0x0a
     566:	ea 89       	ldd	r30, Y+18	; 0x12
     568:	2b 89       	ldd	r18, Y+19	; 0x13
     56a:	3c 89       	ldd	r19, Y+20	; 0x14
     56c:	8b 85       	ldd	r24, Y+11	; 0x0b
     56e:	9c 85       	ldd	r25, Y+12	; 0x0c
     570:	28 0f       	add	r18, r24
     572:	39 1f       	adc	r19, r25
     574:	2e 5f       	subi	r18, 0xFE	; 254
     576:	3f 4f       	sbci	r19, 0xFF	; 255
     578:	17 c0       	rjmp	.+46     	; 0x5a8 <__mulsf3+0x16e>
     57a:	ca 01       	movw	r24, r20
     57c:	81 70       	andi	r24, 0x01	; 1
     57e:	90 70       	andi	r25, 0x00	; 0
     580:	89 2b       	or	r24, r25
     582:	61 f0       	breq	.+24     	; 0x59c <__mulsf3+0x162>
     584:	16 95       	lsr	r17
     586:	07 95       	ror	r16
     588:	f7 94       	ror	r15
     58a:	e7 94       	ror	r14
     58c:	80 e0       	ldi	r24, 0x00	; 0
     58e:	90 e0       	ldi	r25, 0x00	; 0
     590:	a0 e0       	ldi	r26, 0x00	; 0
     592:	b0 e8       	ldi	r27, 0x80	; 128
     594:	e8 2a       	or	r14, r24
     596:	f9 2a       	or	r15, r25
     598:	0a 2b       	or	r16, r26
     59a:	1b 2b       	or	r17, r27
     59c:	76 95       	lsr	r23
     59e:	67 95       	ror	r22
     5a0:	57 95       	ror	r21
     5a2:	47 95       	ror	r20
     5a4:	2f 5f       	subi	r18, 0xFF	; 255
     5a6:	3f 4f       	sbci	r19, 0xFF	; 255
     5a8:	77 fd       	sbrc	r23, 7
     5aa:	e7 cf       	rjmp	.-50     	; 0x57a <__mulsf3+0x140>
     5ac:	0c c0       	rjmp	.+24     	; 0x5c6 <__mulsf3+0x18c>
     5ae:	44 0f       	add	r20, r20
     5b0:	55 1f       	adc	r21, r21
     5b2:	66 1f       	adc	r22, r22
     5b4:	77 1f       	adc	r23, r23
     5b6:	17 fd       	sbrc	r17, 7
     5b8:	41 60       	ori	r20, 0x01	; 1
     5ba:	ee 0c       	add	r14, r14
     5bc:	ff 1c       	adc	r15, r15
     5be:	00 1f       	adc	r16, r16
     5c0:	11 1f       	adc	r17, r17
     5c2:	21 50       	subi	r18, 0x01	; 1
     5c4:	30 40       	sbci	r19, 0x00	; 0
     5c6:	40 30       	cpi	r20, 0x00	; 0
     5c8:	90 e0       	ldi	r25, 0x00	; 0
     5ca:	59 07       	cpc	r21, r25
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	69 07       	cpc	r22, r25
     5d0:	90 e4       	ldi	r25, 0x40	; 64
     5d2:	79 07       	cpc	r23, r25
     5d4:	60 f3       	brcs	.-40     	; 0x5ae <__mulsf3+0x174>
     5d6:	2b 8f       	std	Y+27, r18	; 0x1b
     5d8:	3c 8f       	std	Y+28, r19	; 0x1c
     5da:	db 01       	movw	r26, r22
     5dc:	ca 01       	movw	r24, r20
     5de:	8f 77       	andi	r24, 0x7F	; 127
     5e0:	90 70       	andi	r25, 0x00	; 0
     5e2:	a0 70       	andi	r26, 0x00	; 0
     5e4:	b0 70       	andi	r27, 0x00	; 0
     5e6:	80 34       	cpi	r24, 0x40	; 64
     5e8:	91 05       	cpc	r25, r1
     5ea:	a1 05       	cpc	r26, r1
     5ec:	b1 05       	cpc	r27, r1
     5ee:	61 f4       	brne	.+24     	; 0x608 <__mulsf3+0x1ce>
     5f0:	47 fd       	sbrc	r20, 7
     5f2:	0a c0       	rjmp	.+20     	; 0x608 <__mulsf3+0x1ce>
     5f4:	e1 14       	cp	r14, r1
     5f6:	f1 04       	cpc	r15, r1
     5f8:	01 05       	cpc	r16, r1
     5fa:	11 05       	cpc	r17, r1
     5fc:	29 f0       	breq	.+10     	; 0x608 <__mulsf3+0x1ce>
     5fe:	40 5c       	subi	r20, 0xC0	; 192
     600:	5f 4f       	sbci	r21, 0xFF	; 255
     602:	6f 4f       	sbci	r22, 0xFF	; 255
     604:	7f 4f       	sbci	r23, 0xFF	; 255
     606:	40 78       	andi	r20, 0x80	; 128
     608:	1a 8e       	std	Y+26, r1	; 0x1a
     60a:	fe 17       	cp	r31, r30
     60c:	11 f0       	breq	.+4      	; 0x612 <__mulsf3+0x1d8>
     60e:	81 e0       	ldi	r24, 0x01	; 1
     610:	8a 8f       	std	Y+26, r24	; 0x1a
     612:	4d 8f       	std	Y+29, r20	; 0x1d
     614:	5e 8f       	std	Y+30, r21	; 0x1e
     616:	6f 8f       	std	Y+31, r22	; 0x1f
     618:	78 a3       	std	Y+32, r23	; 0x20
     61a:	83 e0       	ldi	r24, 0x03	; 3
     61c:	89 8f       	std	Y+25, r24	; 0x19
     61e:	ce 01       	movw	r24, r28
     620:	49 96       	adiw	r24, 0x19	; 25
     622:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <__pack_f>
     626:	a0 96       	adiw	r28, 0x20	; 32
     628:	e2 e1       	ldi	r30, 0x12	; 18
     62a:	0c 94 7d 0e 	jmp	0x1cfa	; 0x1cfa <__epilogue_restores__>

0000062e <__gtsf2>:
     62e:	a8 e1       	ldi	r26, 0x18	; 24
     630:	b0 e0       	ldi	r27, 0x00	; 0
     632:	ed e1       	ldi	r30, 0x1D	; 29
     634:	f3 e0       	ldi	r31, 0x03	; 3
     636:	0c 94 6d 0e 	jmp	0x1cda	; 0x1cda <__prologue_saves__+0x18>
     63a:	69 83       	std	Y+1, r22	; 0x01
     63c:	7a 83       	std	Y+2, r23	; 0x02
     63e:	8b 83       	std	Y+3, r24	; 0x03
     640:	9c 83       	std	Y+4, r25	; 0x04
     642:	2d 83       	std	Y+5, r18	; 0x05
     644:	3e 83       	std	Y+6, r19	; 0x06
     646:	4f 83       	std	Y+7, r20	; 0x07
     648:	58 87       	std	Y+8, r21	; 0x08
     64a:	89 e0       	ldi	r24, 0x09	; 9
     64c:	e8 2e       	mov	r14, r24
     64e:	f1 2c       	mov	r15, r1
     650:	ec 0e       	add	r14, r28
     652:	fd 1e       	adc	r15, r29
     654:	ce 01       	movw	r24, r28
     656:	01 96       	adiw	r24, 0x01	; 1
     658:	b7 01       	movw	r22, r14
     65a:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <__unpack_f>
     65e:	8e 01       	movw	r16, r28
     660:	0f 5e       	subi	r16, 0xEF	; 239
     662:	1f 4f       	sbci	r17, 0xFF	; 255
     664:	ce 01       	movw	r24, r28
     666:	05 96       	adiw	r24, 0x05	; 5
     668:	b8 01       	movw	r22, r16
     66a:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <__unpack_f>
     66e:	89 85       	ldd	r24, Y+9	; 0x09
     670:	82 30       	cpi	r24, 0x02	; 2
     672:	40 f0       	brcs	.+16     	; 0x684 <__gtsf2+0x56>
     674:	89 89       	ldd	r24, Y+17	; 0x11
     676:	82 30       	cpi	r24, 0x02	; 2
     678:	28 f0       	brcs	.+10     	; 0x684 <__gtsf2+0x56>
     67a:	c7 01       	movw	r24, r14
     67c:	b8 01       	movw	r22, r16
     67e:	0e 94 48 05 	call	0xa90	; 0xa90 <__fpcmp_parts_f>
     682:	01 c0       	rjmp	.+2      	; 0x686 <__gtsf2+0x58>
     684:	8f ef       	ldi	r24, 0xFF	; 255
     686:	68 96       	adiw	r28, 0x18	; 24
     688:	e6 e0       	ldi	r30, 0x06	; 6
     68a:	0c 94 89 0e 	jmp	0x1d12	; 0x1d12 <__epilogue_restores__+0x18>

0000068e <__gesf2>:
     68e:	a8 e1       	ldi	r26, 0x18	; 24
     690:	b0 e0       	ldi	r27, 0x00	; 0
     692:	ed e4       	ldi	r30, 0x4D	; 77
     694:	f3 e0       	ldi	r31, 0x03	; 3
     696:	0c 94 6d 0e 	jmp	0x1cda	; 0x1cda <__prologue_saves__+0x18>
     69a:	69 83       	std	Y+1, r22	; 0x01
     69c:	7a 83       	std	Y+2, r23	; 0x02
     69e:	8b 83       	std	Y+3, r24	; 0x03
     6a0:	9c 83       	std	Y+4, r25	; 0x04
     6a2:	2d 83       	std	Y+5, r18	; 0x05
     6a4:	3e 83       	std	Y+6, r19	; 0x06
     6a6:	4f 83       	std	Y+7, r20	; 0x07
     6a8:	58 87       	std	Y+8, r21	; 0x08
     6aa:	89 e0       	ldi	r24, 0x09	; 9
     6ac:	e8 2e       	mov	r14, r24
     6ae:	f1 2c       	mov	r15, r1
     6b0:	ec 0e       	add	r14, r28
     6b2:	fd 1e       	adc	r15, r29
     6b4:	ce 01       	movw	r24, r28
     6b6:	01 96       	adiw	r24, 0x01	; 1
     6b8:	b7 01       	movw	r22, r14
     6ba:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <__unpack_f>
     6be:	8e 01       	movw	r16, r28
     6c0:	0f 5e       	subi	r16, 0xEF	; 239
     6c2:	1f 4f       	sbci	r17, 0xFF	; 255
     6c4:	ce 01       	movw	r24, r28
     6c6:	05 96       	adiw	r24, 0x05	; 5
     6c8:	b8 01       	movw	r22, r16
     6ca:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <__unpack_f>
     6ce:	89 85       	ldd	r24, Y+9	; 0x09
     6d0:	82 30       	cpi	r24, 0x02	; 2
     6d2:	40 f0       	brcs	.+16     	; 0x6e4 <__gesf2+0x56>
     6d4:	89 89       	ldd	r24, Y+17	; 0x11
     6d6:	82 30       	cpi	r24, 0x02	; 2
     6d8:	28 f0       	brcs	.+10     	; 0x6e4 <__gesf2+0x56>
     6da:	c7 01       	movw	r24, r14
     6dc:	b8 01       	movw	r22, r16
     6de:	0e 94 48 05 	call	0xa90	; 0xa90 <__fpcmp_parts_f>
     6e2:	01 c0       	rjmp	.+2      	; 0x6e6 <__gesf2+0x58>
     6e4:	8f ef       	ldi	r24, 0xFF	; 255
     6e6:	68 96       	adiw	r28, 0x18	; 24
     6e8:	e6 e0       	ldi	r30, 0x06	; 6
     6ea:	0c 94 89 0e 	jmp	0x1d12	; 0x1d12 <__epilogue_restores__+0x18>

000006ee <__ltsf2>:
     6ee:	a8 e1       	ldi	r26, 0x18	; 24
     6f0:	b0 e0       	ldi	r27, 0x00	; 0
     6f2:	ed e7       	ldi	r30, 0x7D	; 125
     6f4:	f3 e0       	ldi	r31, 0x03	; 3
     6f6:	0c 94 6d 0e 	jmp	0x1cda	; 0x1cda <__prologue_saves__+0x18>
     6fa:	69 83       	std	Y+1, r22	; 0x01
     6fc:	7a 83       	std	Y+2, r23	; 0x02
     6fe:	8b 83       	std	Y+3, r24	; 0x03
     700:	9c 83       	std	Y+4, r25	; 0x04
     702:	2d 83       	std	Y+5, r18	; 0x05
     704:	3e 83       	std	Y+6, r19	; 0x06
     706:	4f 83       	std	Y+7, r20	; 0x07
     708:	58 87       	std	Y+8, r21	; 0x08
     70a:	89 e0       	ldi	r24, 0x09	; 9
     70c:	e8 2e       	mov	r14, r24
     70e:	f1 2c       	mov	r15, r1
     710:	ec 0e       	add	r14, r28
     712:	fd 1e       	adc	r15, r29
     714:	ce 01       	movw	r24, r28
     716:	01 96       	adiw	r24, 0x01	; 1
     718:	b7 01       	movw	r22, r14
     71a:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <__unpack_f>
     71e:	8e 01       	movw	r16, r28
     720:	0f 5e       	subi	r16, 0xEF	; 239
     722:	1f 4f       	sbci	r17, 0xFF	; 255
     724:	ce 01       	movw	r24, r28
     726:	05 96       	adiw	r24, 0x05	; 5
     728:	b8 01       	movw	r22, r16
     72a:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <__unpack_f>
     72e:	89 85       	ldd	r24, Y+9	; 0x09
     730:	82 30       	cpi	r24, 0x02	; 2
     732:	40 f0       	brcs	.+16     	; 0x744 <__ltsf2+0x56>
     734:	89 89       	ldd	r24, Y+17	; 0x11
     736:	82 30       	cpi	r24, 0x02	; 2
     738:	28 f0       	brcs	.+10     	; 0x744 <__ltsf2+0x56>
     73a:	c7 01       	movw	r24, r14
     73c:	b8 01       	movw	r22, r16
     73e:	0e 94 48 05 	call	0xa90	; 0xa90 <__fpcmp_parts_f>
     742:	01 c0       	rjmp	.+2      	; 0x746 <__ltsf2+0x58>
     744:	81 e0       	ldi	r24, 0x01	; 1
     746:	68 96       	adiw	r28, 0x18	; 24
     748:	e6 e0       	ldi	r30, 0x06	; 6
     74a:	0c 94 89 0e 	jmp	0x1d12	; 0x1d12 <__epilogue_restores__+0x18>

0000074e <__fixsfsi>:
     74e:	ac e0       	ldi	r26, 0x0C	; 12
     750:	b0 e0       	ldi	r27, 0x00	; 0
     752:	ed ea       	ldi	r30, 0xAD	; 173
     754:	f3 e0       	ldi	r31, 0x03	; 3
     756:	0c 94 71 0e 	jmp	0x1ce2	; 0x1ce2 <__prologue_saves__+0x20>
     75a:	69 83       	std	Y+1, r22	; 0x01
     75c:	7a 83       	std	Y+2, r23	; 0x02
     75e:	8b 83       	std	Y+3, r24	; 0x03
     760:	9c 83       	std	Y+4, r25	; 0x04
     762:	ce 01       	movw	r24, r28
     764:	01 96       	adiw	r24, 0x01	; 1
     766:	be 01       	movw	r22, r28
     768:	6b 5f       	subi	r22, 0xFB	; 251
     76a:	7f 4f       	sbci	r23, 0xFF	; 255
     76c:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <__unpack_f>
     770:	8d 81       	ldd	r24, Y+5	; 0x05
     772:	82 30       	cpi	r24, 0x02	; 2
     774:	61 f1       	breq	.+88     	; 0x7ce <__fixsfsi+0x80>
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	50 f1       	brcs	.+84     	; 0x7ce <__fixsfsi+0x80>
     77a:	84 30       	cpi	r24, 0x04	; 4
     77c:	21 f4       	brne	.+8      	; 0x786 <__fixsfsi+0x38>
     77e:	8e 81       	ldd	r24, Y+6	; 0x06
     780:	88 23       	and	r24, r24
     782:	51 f1       	breq	.+84     	; 0x7d8 <__fixsfsi+0x8a>
     784:	2e c0       	rjmp	.+92     	; 0x7e2 <__fixsfsi+0x94>
     786:	2f 81       	ldd	r18, Y+7	; 0x07
     788:	38 85       	ldd	r19, Y+8	; 0x08
     78a:	37 fd       	sbrc	r19, 7
     78c:	20 c0       	rjmp	.+64     	; 0x7ce <__fixsfsi+0x80>
     78e:	6e 81       	ldd	r22, Y+6	; 0x06
     790:	2f 31       	cpi	r18, 0x1F	; 31
     792:	31 05       	cpc	r19, r1
     794:	1c f0       	brlt	.+6      	; 0x79c <__fixsfsi+0x4e>
     796:	66 23       	and	r22, r22
     798:	f9 f0       	breq	.+62     	; 0x7d8 <__fixsfsi+0x8a>
     79a:	23 c0       	rjmp	.+70     	; 0x7e2 <__fixsfsi+0x94>
     79c:	8e e1       	ldi	r24, 0x1E	; 30
     79e:	90 e0       	ldi	r25, 0x00	; 0
     7a0:	82 1b       	sub	r24, r18
     7a2:	93 0b       	sbc	r25, r19
     7a4:	29 85       	ldd	r18, Y+9	; 0x09
     7a6:	3a 85       	ldd	r19, Y+10	; 0x0a
     7a8:	4b 85       	ldd	r20, Y+11	; 0x0b
     7aa:	5c 85       	ldd	r21, Y+12	; 0x0c
     7ac:	04 c0       	rjmp	.+8      	; 0x7b6 <__fixsfsi+0x68>
     7ae:	56 95       	lsr	r21
     7b0:	47 95       	ror	r20
     7b2:	37 95       	ror	r19
     7b4:	27 95       	ror	r18
     7b6:	8a 95       	dec	r24
     7b8:	d2 f7       	brpl	.-12     	; 0x7ae <__fixsfsi+0x60>
     7ba:	66 23       	and	r22, r22
     7bc:	b1 f0       	breq	.+44     	; 0x7ea <__fixsfsi+0x9c>
     7be:	50 95       	com	r21
     7c0:	40 95       	com	r20
     7c2:	30 95       	com	r19
     7c4:	21 95       	neg	r18
     7c6:	3f 4f       	sbci	r19, 0xFF	; 255
     7c8:	4f 4f       	sbci	r20, 0xFF	; 255
     7ca:	5f 4f       	sbci	r21, 0xFF	; 255
     7cc:	0e c0       	rjmp	.+28     	; 0x7ea <__fixsfsi+0x9c>
     7ce:	20 e0       	ldi	r18, 0x00	; 0
     7d0:	30 e0       	ldi	r19, 0x00	; 0
     7d2:	40 e0       	ldi	r20, 0x00	; 0
     7d4:	50 e0       	ldi	r21, 0x00	; 0
     7d6:	09 c0       	rjmp	.+18     	; 0x7ea <__fixsfsi+0x9c>
     7d8:	2f ef       	ldi	r18, 0xFF	; 255
     7da:	3f ef       	ldi	r19, 0xFF	; 255
     7dc:	4f ef       	ldi	r20, 0xFF	; 255
     7de:	5f e7       	ldi	r21, 0x7F	; 127
     7e0:	04 c0       	rjmp	.+8      	; 0x7ea <__fixsfsi+0x9c>
     7e2:	20 e0       	ldi	r18, 0x00	; 0
     7e4:	30 e0       	ldi	r19, 0x00	; 0
     7e6:	40 e0       	ldi	r20, 0x00	; 0
     7e8:	50 e8       	ldi	r21, 0x80	; 128
     7ea:	b9 01       	movw	r22, r18
     7ec:	ca 01       	movw	r24, r20
     7ee:	2c 96       	adiw	r28, 0x0c	; 12
     7f0:	e2 e0       	ldi	r30, 0x02	; 2
     7f2:	0c 94 8d 0e 	jmp	0x1d1a	; 0x1d1a <__epilogue_restores__+0x20>

000007f6 <__pack_f>:
     7f6:	df 92       	push	r13
     7f8:	ef 92       	push	r14
     7fa:	ff 92       	push	r15
     7fc:	0f 93       	push	r16
     7fe:	1f 93       	push	r17
     800:	fc 01       	movw	r30, r24
     802:	e4 80       	ldd	r14, Z+4	; 0x04
     804:	f5 80       	ldd	r15, Z+5	; 0x05
     806:	06 81       	ldd	r16, Z+6	; 0x06
     808:	17 81       	ldd	r17, Z+7	; 0x07
     80a:	d1 80       	ldd	r13, Z+1	; 0x01
     80c:	80 81       	ld	r24, Z
     80e:	82 30       	cpi	r24, 0x02	; 2
     810:	48 f4       	brcc	.+18     	; 0x824 <__pack_f+0x2e>
     812:	80 e0       	ldi	r24, 0x00	; 0
     814:	90 e0       	ldi	r25, 0x00	; 0
     816:	a0 e1       	ldi	r26, 0x10	; 16
     818:	b0 e0       	ldi	r27, 0x00	; 0
     81a:	e8 2a       	or	r14, r24
     81c:	f9 2a       	or	r15, r25
     81e:	0a 2b       	or	r16, r26
     820:	1b 2b       	or	r17, r27
     822:	a5 c0       	rjmp	.+330    	; 0x96e <__stack+0x10f>
     824:	84 30       	cpi	r24, 0x04	; 4
     826:	09 f4       	brne	.+2      	; 0x82a <__pack_f+0x34>
     828:	9f c0       	rjmp	.+318    	; 0x968 <__stack+0x109>
     82a:	82 30       	cpi	r24, 0x02	; 2
     82c:	21 f4       	brne	.+8      	; 0x836 <__pack_f+0x40>
     82e:	ee 24       	eor	r14, r14
     830:	ff 24       	eor	r15, r15
     832:	87 01       	movw	r16, r14
     834:	05 c0       	rjmp	.+10     	; 0x840 <__pack_f+0x4a>
     836:	e1 14       	cp	r14, r1
     838:	f1 04       	cpc	r15, r1
     83a:	01 05       	cpc	r16, r1
     83c:	11 05       	cpc	r17, r1
     83e:	19 f4       	brne	.+6      	; 0x846 <__pack_f+0x50>
     840:	e0 e0       	ldi	r30, 0x00	; 0
     842:	f0 e0       	ldi	r31, 0x00	; 0
     844:	96 c0       	rjmp	.+300    	; 0x972 <__stack+0x113>
     846:	62 81       	ldd	r22, Z+2	; 0x02
     848:	73 81       	ldd	r23, Z+3	; 0x03
     84a:	9f ef       	ldi	r25, 0xFF	; 255
     84c:	62 38       	cpi	r22, 0x82	; 130
     84e:	79 07       	cpc	r23, r25
     850:	0c f0       	brlt	.+2      	; 0x854 <__pack_f+0x5e>
     852:	5b c0       	rjmp	.+182    	; 0x90a <__stack+0xab>
     854:	22 e8       	ldi	r18, 0x82	; 130
     856:	3f ef       	ldi	r19, 0xFF	; 255
     858:	26 1b       	sub	r18, r22
     85a:	37 0b       	sbc	r19, r23
     85c:	2a 31       	cpi	r18, 0x1A	; 26
     85e:	31 05       	cpc	r19, r1
     860:	2c f0       	brlt	.+10     	; 0x86c <__stack+0xd>
     862:	20 e0       	ldi	r18, 0x00	; 0
     864:	30 e0       	ldi	r19, 0x00	; 0
     866:	40 e0       	ldi	r20, 0x00	; 0
     868:	50 e0       	ldi	r21, 0x00	; 0
     86a:	2a c0       	rjmp	.+84     	; 0x8c0 <__stack+0x61>
     86c:	b8 01       	movw	r22, r16
     86e:	a7 01       	movw	r20, r14
     870:	02 2e       	mov	r0, r18
     872:	04 c0       	rjmp	.+8      	; 0x87c <__stack+0x1d>
     874:	76 95       	lsr	r23
     876:	67 95       	ror	r22
     878:	57 95       	ror	r21
     87a:	47 95       	ror	r20
     87c:	0a 94       	dec	r0
     87e:	d2 f7       	brpl	.-12     	; 0x874 <__stack+0x15>
     880:	81 e0       	ldi	r24, 0x01	; 1
     882:	90 e0       	ldi	r25, 0x00	; 0
     884:	a0 e0       	ldi	r26, 0x00	; 0
     886:	b0 e0       	ldi	r27, 0x00	; 0
     888:	04 c0       	rjmp	.+8      	; 0x892 <__stack+0x33>
     88a:	88 0f       	add	r24, r24
     88c:	99 1f       	adc	r25, r25
     88e:	aa 1f       	adc	r26, r26
     890:	bb 1f       	adc	r27, r27
     892:	2a 95       	dec	r18
     894:	d2 f7       	brpl	.-12     	; 0x88a <__stack+0x2b>
     896:	01 97       	sbiw	r24, 0x01	; 1
     898:	a1 09       	sbc	r26, r1
     89a:	b1 09       	sbc	r27, r1
     89c:	8e 21       	and	r24, r14
     89e:	9f 21       	and	r25, r15
     8a0:	a0 23       	and	r26, r16
     8a2:	b1 23       	and	r27, r17
     8a4:	00 97       	sbiw	r24, 0x00	; 0
     8a6:	a1 05       	cpc	r26, r1
     8a8:	b1 05       	cpc	r27, r1
     8aa:	21 f0       	breq	.+8      	; 0x8b4 <__stack+0x55>
     8ac:	81 e0       	ldi	r24, 0x01	; 1
     8ae:	90 e0       	ldi	r25, 0x00	; 0
     8b0:	a0 e0       	ldi	r26, 0x00	; 0
     8b2:	b0 e0       	ldi	r27, 0x00	; 0
     8b4:	9a 01       	movw	r18, r20
     8b6:	ab 01       	movw	r20, r22
     8b8:	28 2b       	or	r18, r24
     8ba:	39 2b       	or	r19, r25
     8bc:	4a 2b       	or	r20, r26
     8be:	5b 2b       	or	r21, r27
     8c0:	da 01       	movw	r26, r20
     8c2:	c9 01       	movw	r24, r18
     8c4:	8f 77       	andi	r24, 0x7F	; 127
     8c6:	90 70       	andi	r25, 0x00	; 0
     8c8:	a0 70       	andi	r26, 0x00	; 0
     8ca:	b0 70       	andi	r27, 0x00	; 0
     8cc:	80 34       	cpi	r24, 0x40	; 64
     8ce:	91 05       	cpc	r25, r1
     8d0:	a1 05       	cpc	r26, r1
     8d2:	b1 05       	cpc	r27, r1
     8d4:	39 f4       	brne	.+14     	; 0x8e4 <__stack+0x85>
     8d6:	27 ff       	sbrs	r18, 7
     8d8:	09 c0       	rjmp	.+18     	; 0x8ec <__stack+0x8d>
     8da:	20 5c       	subi	r18, 0xC0	; 192
     8dc:	3f 4f       	sbci	r19, 0xFF	; 255
     8de:	4f 4f       	sbci	r20, 0xFF	; 255
     8e0:	5f 4f       	sbci	r21, 0xFF	; 255
     8e2:	04 c0       	rjmp	.+8      	; 0x8ec <__stack+0x8d>
     8e4:	21 5c       	subi	r18, 0xC1	; 193
     8e6:	3f 4f       	sbci	r19, 0xFF	; 255
     8e8:	4f 4f       	sbci	r20, 0xFF	; 255
     8ea:	5f 4f       	sbci	r21, 0xFF	; 255
     8ec:	e0 e0       	ldi	r30, 0x00	; 0
     8ee:	f0 e0       	ldi	r31, 0x00	; 0
     8f0:	20 30       	cpi	r18, 0x00	; 0
     8f2:	a0 e0       	ldi	r26, 0x00	; 0
     8f4:	3a 07       	cpc	r19, r26
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	4a 07       	cpc	r20, r26
     8fa:	a0 e4       	ldi	r26, 0x40	; 64
     8fc:	5a 07       	cpc	r21, r26
     8fe:	10 f0       	brcs	.+4      	; 0x904 <__stack+0xa5>
     900:	e1 e0       	ldi	r30, 0x01	; 1
     902:	f0 e0       	ldi	r31, 0x00	; 0
     904:	79 01       	movw	r14, r18
     906:	8a 01       	movw	r16, r20
     908:	27 c0       	rjmp	.+78     	; 0x958 <__stack+0xf9>
     90a:	60 38       	cpi	r22, 0x80	; 128
     90c:	71 05       	cpc	r23, r1
     90e:	64 f5       	brge	.+88     	; 0x968 <__stack+0x109>
     910:	fb 01       	movw	r30, r22
     912:	e1 58       	subi	r30, 0x81	; 129
     914:	ff 4f       	sbci	r31, 0xFF	; 255
     916:	d8 01       	movw	r26, r16
     918:	c7 01       	movw	r24, r14
     91a:	8f 77       	andi	r24, 0x7F	; 127
     91c:	90 70       	andi	r25, 0x00	; 0
     91e:	a0 70       	andi	r26, 0x00	; 0
     920:	b0 70       	andi	r27, 0x00	; 0
     922:	80 34       	cpi	r24, 0x40	; 64
     924:	91 05       	cpc	r25, r1
     926:	a1 05       	cpc	r26, r1
     928:	b1 05       	cpc	r27, r1
     92a:	39 f4       	brne	.+14     	; 0x93a <__stack+0xdb>
     92c:	e7 fe       	sbrs	r14, 7
     92e:	0d c0       	rjmp	.+26     	; 0x94a <__stack+0xeb>
     930:	80 e4       	ldi	r24, 0x40	; 64
     932:	90 e0       	ldi	r25, 0x00	; 0
     934:	a0 e0       	ldi	r26, 0x00	; 0
     936:	b0 e0       	ldi	r27, 0x00	; 0
     938:	04 c0       	rjmp	.+8      	; 0x942 <__stack+0xe3>
     93a:	8f e3       	ldi	r24, 0x3F	; 63
     93c:	90 e0       	ldi	r25, 0x00	; 0
     93e:	a0 e0       	ldi	r26, 0x00	; 0
     940:	b0 e0       	ldi	r27, 0x00	; 0
     942:	e8 0e       	add	r14, r24
     944:	f9 1e       	adc	r15, r25
     946:	0a 1f       	adc	r16, r26
     948:	1b 1f       	adc	r17, r27
     94a:	17 ff       	sbrs	r17, 7
     94c:	05 c0       	rjmp	.+10     	; 0x958 <__stack+0xf9>
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	31 96       	adiw	r30, 0x01	; 1
     958:	87 e0       	ldi	r24, 0x07	; 7
     95a:	16 95       	lsr	r17
     95c:	07 95       	ror	r16
     95e:	f7 94       	ror	r15
     960:	e7 94       	ror	r14
     962:	8a 95       	dec	r24
     964:	d1 f7       	brne	.-12     	; 0x95a <__stack+0xfb>
     966:	05 c0       	rjmp	.+10     	; 0x972 <__stack+0x113>
     968:	ee 24       	eor	r14, r14
     96a:	ff 24       	eor	r15, r15
     96c:	87 01       	movw	r16, r14
     96e:	ef ef       	ldi	r30, 0xFF	; 255
     970:	f0 e0       	ldi	r31, 0x00	; 0
     972:	6e 2f       	mov	r22, r30
     974:	67 95       	ror	r22
     976:	66 27       	eor	r22, r22
     978:	67 95       	ror	r22
     97a:	90 2f       	mov	r25, r16
     97c:	9f 77       	andi	r25, 0x7F	; 127
     97e:	d7 94       	ror	r13
     980:	dd 24       	eor	r13, r13
     982:	d7 94       	ror	r13
     984:	8e 2f       	mov	r24, r30
     986:	86 95       	lsr	r24
     988:	49 2f       	mov	r20, r25
     98a:	46 2b       	or	r20, r22
     98c:	58 2f       	mov	r21, r24
     98e:	5d 29       	or	r21, r13
     990:	b7 01       	movw	r22, r14
     992:	ca 01       	movw	r24, r20
     994:	1f 91       	pop	r17
     996:	0f 91       	pop	r16
     998:	ff 90       	pop	r15
     99a:	ef 90       	pop	r14
     99c:	df 90       	pop	r13
     99e:	08 95       	ret

000009a0 <__unpack_f>:
     9a0:	fc 01       	movw	r30, r24
     9a2:	db 01       	movw	r26, r22
     9a4:	40 81       	ld	r20, Z
     9a6:	51 81       	ldd	r21, Z+1	; 0x01
     9a8:	22 81       	ldd	r18, Z+2	; 0x02
     9aa:	62 2f       	mov	r22, r18
     9ac:	6f 77       	andi	r22, 0x7F	; 127
     9ae:	70 e0       	ldi	r23, 0x00	; 0
     9b0:	22 1f       	adc	r18, r18
     9b2:	22 27       	eor	r18, r18
     9b4:	22 1f       	adc	r18, r18
     9b6:	93 81       	ldd	r25, Z+3	; 0x03
     9b8:	89 2f       	mov	r24, r25
     9ba:	88 0f       	add	r24, r24
     9bc:	82 2b       	or	r24, r18
     9be:	28 2f       	mov	r18, r24
     9c0:	30 e0       	ldi	r19, 0x00	; 0
     9c2:	99 1f       	adc	r25, r25
     9c4:	99 27       	eor	r25, r25
     9c6:	99 1f       	adc	r25, r25
     9c8:	11 96       	adiw	r26, 0x01	; 1
     9ca:	9c 93       	st	X, r25
     9cc:	11 97       	sbiw	r26, 0x01	; 1
     9ce:	21 15       	cp	r18, r1
     9d0:	31 05       	cpc	r19, r1
     9d2:	a9 f5       	brne	.+106    	; 0xa3e <__unpack_f+0x9e>
     9d4:	41 15       	cp	r20, r1
     9d6:	51 05       	cpc	r21, r1
     9d8:	61 05       	cpc	r22, r1
     9da:	71 05       	cpc	r23, r1
     9dc:	11 f4       	brne	.+4      	; 0x9e2 <__unpack_f+0x42>
     9de:	82 e0       	ldi	r24, 0x02	; 2
     9e0:	37 c0       	rjmp	.+110    	; 0xa50 <__unpack_f+0xb0>
     9e2:	82 e8       	ldi	r24, 0x82	; 130
     9e4:	9f ef       	ldi	r25, 0xFF	; 255
     9e6:	13 96       	adiw	r26, 0x03	; 3
     9e8:	9c 93       	st	X, r25
     9ea:	8e 93       	st	-X, r24
     9ec:	12 97       	sbiw	r26, 0x02	; 2
     9ee:	9a 01       	movw	r18, r20
     9f0:	ab 01       	movw	r20, r22
     9f2:	67 e0       	ldi	r22, 0x07	; 7
     9f4:	22 0f       	add	r18, r18
     9f6:	33 1f       	adc	r19, r19
     9f8:	44 1f       	adc	r20, r20
     9fa:	55 1f       	adc	r21, r21
     9fc:	6a 95       	dec	r22
     9fe:	d1 f7       	brne	.-12     	; 0x9f4 <__unpack_f+0x54>
     a00:	83 e0       	ldi	r24, 0x03	; 3
     a02:	8c 93       	st	X, r24
     a04:	0d c0       	rjmp	.+26     	; 0xa20 <__unpack_f+0x80>
     a06:	22 0f       	add	r18, r18
     a08:	33 1f       	adc	r19, r19
     a0a:	44 1f       	adc	r20, r20
     a0c:	55 1f       	adc	r21, r21
     a0e:	12 96       	adiw	r26, 0x02	; 2
     a10:	8d 91       	ld	r24, X+
     a12:	9c 91       	ld	r25, X
     a14:	13 97       	sbiw	r26, 0x03	; 3
     a16:	01 97       	sbiw	r24, 0x01	; 1
     a18:	13 96       	adiw	r26, 0x03	; 3
     a1a:	9c 93       	st	X, r25
     a1c:	8e 93       	st	-X, r24
     a1e:	12 97       	sbiw	r26, 0x02	; 2
     a20:	20 30       	cpi	r18, 0x00	; 0
     a22:	80 e0       	ldi	r24, 0x00	; 0
     a24:	38 07       	cpc	r19, r24
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	48 07       	cpc	r20, r24
     a2a:	80 e4       	ldi	r24, 0x40	; 64
     a2c:	58 07       	cpc	r21, r24
     a2e:	58 f3       	brcs	.-42     	; 0xa06 <__unpack_f+0x66>
     a30:	14 96       	adiw	r26, 0x04	; 4
     a32:	2d 93       	st	X+, r18
     a34:	3d 93       	st	X+, r19
     a36:	4d 93       	st	X+, r20
     a38:	5c 93       	st	X, r21
     a3a:	17 97       	sbiw	r26, 0x07	; 7
     a3c:	08 95       	ret
     a3e:	2f 3f       	cpi	r18, 0xFF	; 255
     a40:	31 05       	cpc	r19, r1
     a42:	79 f4       	brne	.+30     	; 0xa62 <__unpack_f+0xc2>
     a44:	41 15       	cp	r20, r1
     a46:	51 05       	cpc	r21, r1
     a48:	61 05       	cpc	r22, r1
     a4a:	71 05       	cpc	r23, r1
     a4c:	19 f4       	brne	.+6      	; 0xa54 <__unpack_f+0xb4>
     a4e:	84 e0       	ldi	r24, 0x04	; 4
     a50:	8c 93       	st	X, r24
     a52:	08 95       	ret
     a54:	64 ff       	sbrs	r22, 4
     a56:	03 c0       	rjmp	.+6      	; 0xa5e <__unpack_f+0xbe>
     a58:	81 e0       	ldi	r24, 0x01	; 1
     a5a:	8c 93       	st	X, r24
     a5c:	12 c0       	rjmp	.+36     	; 0xa82 <__unpack_f+0xe2>
     a5e:	1c 92       	st	X, r1
     a60:	10 c0       	rjmp	.+32     	; 0xa82 <__unpack_f+0xe2>
     a62:	2f 57       	subi	r18, 0x7F	; 127
     a64:	30 40       	sbci	r19, 0x00	; 0
     a66:	13 96       	adiw	r26, 0x03	; 3
     a68:	3c 93       	st	X, r19
     a6a:	2e 93       	st	-X, r18
     a6c:	12 97       	sbiw	r26, 0x02	; 2
     a6e:	83 e0       	ldi	r24, 0x03	; 3
     a70:	8c 93       	st	X, r24
     a72:	87 e0       	ldi	r24, 0x07	; 7
     a74:	44 0f       	add	r20, r20
     a76:	55 1f       	adc	r21, r21
     a78:	66 1f       	adc	r22, r22
     a7a:	77 1f       	adc	r23, r23
     a7c:	8a 95       	dec	r24
     a7e:	d1 f7       	brne	.-12     	; 0xa74 <__unpack_f+0xd4>
     a80:	70 64       	ori	r23, 0x40	; 64
     a82:	14 96       	adiw	r26, 0x04	; 4
     a84:	4d 93       	st	X+, r20
     a86:	5d 93       	st	X+, r21
     a88:	6d 93       	st	X+, r22
     a8a:	7c 93       	st	X, r23
     a8c:	17 97       	sbiw	r26, 0x07	; 7
     a8e:	08 95       	ret

00000a90 <__fpcmp_parts_f>:
     a90:	1f 93       	push	r17
     a92:	dc 01       	movw	r26, r24
     a94:	fb 01       	movw	r30, r22
     a96:	9c 91       	ld	r25, X
     a98:	92 30       	cpi	r25, 0x02	; 2
     a9a:	08 f4       	brcc	.+2      	; 0xa9e <__fpcmp_parts_f+0xe>
     a9c:	47 c0       	rjmp	.+142    	; 0xb2c <__fpcmp_parts_f+0x9c>
     a9e:	80 81       	ld	r24, Z
     aa0:	82 30       	cpi	r24, 0x02	; 2
     aa2:	08 f4       	brcc	.+2      	; 0xaa6 <__fpcmp_parts_f+0x16>
     aa4:	43 c0       	rjmp	.+134    	; 0xb2c <__fpcmp_parts_f+0x9c>
     aa6:	94 30       	cpi	r25, 0x04	; 4
     aa8:	51 f4       	brne	.+20     	; 0xabe <__fpcmp_parts_f+0x2e>
     aaa:	11 96       	adiw	r26, 0x01	; 1
     aac:	1c 91       	ld	r17, X
     aae:	84 30       	cpi	r24, 0x04	; 4
     ab0:	99 f5       	brne	.+102    	; 0xb18 <__fpcmp_parts_f+0x88>
     ab2:	81 81       	ldd	r24, Z+1	; 0x01
     ab4:	68 2f       	mov	r22, r24
     ab6:	70 e0       	ldi	r23, 0x00	; 0
     ab8:	61 1b       	sub	r22, r17
     aba:	71 09       	sbc	r23, r1
     abc:	3f c0       	rjmp	.+126    	; 0xb3c <__fpcmp_parts_f+0xac>
     abe:	84 30       	cpi	r24, 0x04	; 4
     ac0:	21 f0       	breq	.+8      	; 0xaca <__fpcmp_parts_f+0x3a>
     ac2:	92 30       	cpi	r25, 0x02	; 2
     ac4:	31 f4       	brne	.+12     	; 0xad2 <__fpcmp_parts_f+0x42>
     ac6:	82 30       	cpi	r24, 0x02	; 2
     ac8:	b9 f1       	breq	.+110    	; 0xb38 <__fpcmp_parts_f+0xa8>
     aca:	81 81       	ldd	r24, Z+1	; 0x01
     acc:	88 23       	and	r24, r24
     ace:	89 f1       	breq	.+98     	; 0xb32 <__fpcmp_parts_f+0xa2>
     ad0:	2d c0       	rjmp	.+90     	; 0xb2c <__fpcmp_parts_f+0x9c>
     ad2:	11 96       	adiw	r26, 0x01	; 1
     ad4:	1c 91       	ld	r17, X
     ad6:	11 97       	sbiw	r26, 0x01	; 1
     ad8:	82 30       	cpi	r24, 0x02	; 2
     ada:	f1 f0       	breq	.+60     	; 0xb18 <__fpcmp_parts_f+0x88>
     adc:	81 81       	ldd	r24, Z+1	; 0x01
     ade:	18 17       	cp	r17, r24
     ae0:	d9 f4       	brne	.+54     	; 0xb18 <__fpcmp_parts_f+0x88>
     ae2:	12 96       	adiw	r26, 0x02	; 2
     ae4:	2d 91       	ld	r18, X+
     ae6:	3c 91       	ld	r19, X
     ae8:	13 97       	sbiw	r26, 0x03	; 3
     aea:	82 81       	ldd	r24, Z+2	; 0x02
     aec:	93 81       	ldd	r25, Z+3	; 0x03
     aee:	82 17       	cp	r24, r18
     af0:	93 07       	cpc	r25, r19
     af2:	94 f0       	brlt	.+36     	; 0xb18 <__fpcmp_parts_f+0x88>
     af4:	28 17       	cp	r18, r24
     af6:	39 07       	cpc	r19, r25
     af8:	bc f0       	brlt	.+46     	; 0xb28 <__fpcmp_parts_f+0x98>
     afa:	14 96       	adiw	r26, 0x04	; 4
     afc:	8d 91       	ld	r24, X+
     afe:	9d 91       	ld	r25, X+
     b00:	0d 90       	ld	r0, X+
     b02:	bc 91       	ld	r27, X
     b04:	a0 2d       	mov	r26, r0
     b06:	24 81       	ldd	r18, Z+4	; 0x04
     b08:	35 81       	ldd	r19, Z+5	; 0x05
     b0a:	46 81       	ldd	r20, Z+6	; 0x06
     b0c:	57 81       	ldd	r21, Z+7	; 0x07
     b0e:	28 17       	cp	r18, r24
     b10:	39 07       	cpc	r19, r25
     b12:	4a 07       	cpc	r20, r26
     b14:	5b 07       	cpc	r21, r27
     b16:	18 f4       	brcc	.+6      	; 0xb1e <__fpcmp_parts_f+0x8e>
     b18:	11 23       	and	r17, r17
     b1a:	41 f0       	breq	.+16     	; 0xb2c <__fpcmp_parts_f+0x9c>
     b1c:	0a c0       	rjmp	.+20     	; 0xb32 <__fpcmp_parts_f+0xa2>
     b1e:	82 17       	cp	r24, r18
     b20:	93 07       	cpc	r25, r19
     b22:	a4 07       	cpc	r26, r20
     b24:	b5 07       	cpc	r27, r21
     b26:	40 f4       	brcc	.+16     	; 0xb38 <__fpcmp_parts_f+0xa8>
     b28:	11 23       	and	r17, r17
     b2a:	19 f0       	breq	.+6      	; 0xb32 <__fpcmp_parts_f+0xa2>
     b2c:	61 e0       	ldi	r22, 0x01	; 1
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	05 c0       	rjmp	.+10     	; 0xb3c <__fpcmp_parts_f+0xac>
     b32:	6f ef       	ldi	r22, 0xFF	; 255
     b34:	7f ef       	ldi	r23, 0xFF	; 255
     b36:	02 c0       	rjmp	.+4      	; 0xb3c <__fpcmp_parts_f+0xac>
     b38:	60 e0       	ldi	r22, 0x00	; 0
     b3a:	70 e0       	ldi	r23, 0x00	; 0
     b3c:	cb 01       	movw	r24, r22
     b3e:	1f 91       	pop	r17
     b40:	08 95       	ret

00000b42 <GIE_voidEnableGlobalInterrupt>:
#include "../../LIB/BIT_MATH.h"
#include "../../LIB/STD_TYPES.h"
#include "GIE_interface.h"

void GIE_voidEnableGlobalInterrupt()
{
     b42:	df 93       	push	r29
     b44:	cf 93       	push	r28
     b46:	cd b7       	in	r28, 0x3d	; 61
     b48:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(SREG,7);
     b4a:	af e5       	ldi	r26, 0x5F	; 95
     b4c:	b0 e0       	ldi	r27, 0x00	; 0
     b4e:	ef e5       	ldi	r30, 0x5F	; 95
     b50:	f0 e0       	ldi	r31, 0x00	; 0
     b52:	80 81       	ld	r24, Z
     b54:	80 68       	ori	r24, 0x80	; 128
     b56:	8c 93       	st	X, r24
}
     b58:	cf 91       	pop	r28
     b5a:	df 91       	pop	r29
     b5c:	08 95       	ret

00000b5e <GIE_voidDisableGlobalInterrupt>:

void GIE_voidDisableGlobalInterrupt()
{
     b5e:	df 93       	push	r29
     b60:	cf 93       	push	r28
     b62:	cd b7       	in	r28, 0x3d	; 61
     b64:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(SREG,7);
     b66:	af e5       	ldi	r26, 0x5F	; 95
     b68:	b0 e0       	ldi	r27, 0x00	; 0
     b6a:	ef e5       	ldi	r30, 0x5F	; 95
     b6c:	f0 e0       	ldi	r31, 0x00	; 0
     b6e:	80 81       	ld	r24, Z
     b70:	8f 77       	andi	r24, 0x7F	; 127
     b72:	8c 93       	st	X, r24


}
     b74:	cf 91       	pop	r28
     b76:	df 91       	pop	r29
     b78:	08 95       	ret

00000b7a <DIO_voidSetPinDirection>:
#include "DIO_interface.h"



void DIO_voidSetPinDirection(u8 Copy_u8portName,u8 Copy_u8PinNumber,u8 Copy_pinstate)
{
     b7a:	df 93       	push	r29
     b7c:	cf 93       	push	r28
     b7e:	cd b7       	in	r28, 0x3d	; 61
     b80:	de b7       	in	r29, 0x3e	; 62
     b82:	2d 97       	sbiw	r28, 0x0d	; 13
     b84:	0f b6       	in	r0, 0x3f	; 63
     b86:	f8 94       	cli
     b88:	de bf       	out	0x3e, r29	; 62
     b8a:	0f be       	out	0x3f, r0	; 63
     b8c:	cd bf       	out	0x3d, r28	; 61
     b8e:	89 83       	std	Y+1, r24	; 0x01
     b90:	6a 83       	std	Y+2, r22	; 0x02
     b92:	4b 83       	std	Y+3, r20	; 0x03
switch(Copy_u8portName)
     b94:	89 81       	ldd	r24, Y+1	; 0x01
     b96:	28 2f       	mov	r18, r24
     b98:	30 e0       	ldi	r19, 0x00	; 0
     b9a:	3d 87       	std	Y+13, r19	; 0x0d
     b9c:	2c 87       	std	Y+12, r18	; 0x0c
     b9e:	8c 85       	ldd	r24, Y+12	; 0x0c
     ba0:	9d 85       	ldd	r25, Y+13	; 0x0d
     ba2:	81 30       	cpi	r24, 0x01	; 1
     ba4:	91 05       	cpc	r25, r1
     ba6:	09 f4       	brne	.+2      	; 0xbaa <DIO_voidSetPinDirection+0x30>
     ba8:	4f c0       	rjmp	.+158    	; 0xc48 <DIO_voidSetPinDirection+0xce>
     baa:	2c 85       	ldd	r18, Y+12	; 0x0c
     bac:	3d 85       	ldd	r19, Y+13	; 0x0d
     bae:	22 30       	cpi	r18, 0x02	; 2
     bb0:	31 05       	cpc	r19, r1
     bb2:	2c f4       	brge	.+10     	; 0xbbe <DIO_voidSetPinDirection+0x44>
     bb4:	8c 85       	ldd	r24, Y+12	; 0x0c
     bb6:	9d 85       	ldd	r25, Y+13	; 0x0d
     bb8:	00 97       	sbiw	r24, 0x00	; 0
     bba:	71 f0       	breq	.+28     	; 0xbd8 <DIO_voidSetPinDirection+0x5e>
     bbc:	eb c0       	rjmp	.+470    	; 0xd94 <DIO_voidSetPinDirection+0x21a>
     bbe:	2c 85       	ldd	r18, Y+12	; 0x0c
     bc0:	3d 85       	ldd	r19, Y+13	; 0x0d
     bc2:	22 30       	cpi	r18, 0x02	; 2
     bc4:	31 05       	cpc	r19, r1
     bc6:	09 f4       	brne	.+2      	; 0xbca <DIO_voidSetPinDirection+0x50>
     bc8:	77 c0       	rjmp	.+238    	; 0xcb8 <DIO_voidSetPinDirection+0x13e>
     bca:	8c 85       	ldd	r24, Y+12	; 0x0c
     bcc:	9d 85       	ldd	r25, Y+13	; 0x0d
     bce:	83 30       	cpi	r24, 0x03	; 3
     bd0:	91 05       	cpc	r25, r1
     bd2:	09 f4       	brne	.+2      	; 0xbd6 <DIO_voidSetPinDirection+0x5c>
     bd4:	a9 c0       	rjmp	.+338    	; 0xd28 <DIO_voidSetPinDirection+0x1ae>
     bd6:	de c0       	rjmp	.+444    	; 0xd94 <DIO_voidSetPinDirection+0x21a>
{

case DIO_PORTA:
	switch(Copy_pinstate)
     bd8:	8b 81       	ldd	r24, Y+3	; 0x03
     bda:	28 2f       	mov	r18, r24
     bdc:	30 e0       	ldi	r19, 0x00	; 0
     bde:	3b 87       	std	Y+11, r19	; 0x0b
     be0:	2a 87       	std	Y+10, r18	; 0x0a
     be2:	8a 85       	ldd	r24, Y+10	; 0x0a
     be4:	9b 85       	ldd	r25, Y+11	; 0x0b
     be6:	00 97       	sbiw	r24, 0x00	; 0
     be8:	d1 f0       	breq	.+52     	; 0xc1e <DIO_voidSetPinDirection+0xa4>
     bea:	2a 85       	ldd	r18, Y+10	; 0x0a
     bec:	3b 85       	ldd	r19, Y+11	; 0x0b
     bee:	21 30       	cpi	r18, 0x01	; 1
     bf0:	31 05       	cpc	r19, r1
     bf2:	09 f0       	breq	.+2      	; 0xbf6 <DIO_voidSetPinDirection+0x7c>
     bf4:	cf c0       	rjmp	.+414    	; 0xd94 <DIO_voidSetPinDirection+0x21a>
	{
		case OUTPUT:
			SET_BIT(DDRA,Copy_u8PinNumber);
     bf6:	aa e3       	ldi	r26, 0x3A	; 58
     bf8:	b0 e0       	ldi	r27, 0x00	; 0
     bfa:	ea e3       	ldi	r30, 0x3A	; 58
     bfc:	f0 e0       	ldi	r31, 0x00	; 0
     bfe:	80 81       	ld	r24, Z
     c00:	48 2f       	mov	r20, r24
     c02:	8a 81       	ldd	r24, Y+2	; 0x02
     c04:	28 2f       	mov	r18, r24
     c06:	30 e0       	ldi	r19, 0x00	; 0
     c08:	81 e0       	ldi	r24, 0x01	; 1
     c0a:	90 e0       	ldi	r25, 0x00	; 0
     c0c:	02 2e       	mov	r0, r18
     c0e:	02 c0       	rjmp	.+4      	; 0xc14 <DIO_voidSetPinDirection+0x9a>
     c10:	88 0f       	add	r24, r24
     c12:	99 1f       	adc	r25, r25
     c14:	0a 94       	dec	r0
     c16:	e2 f7       	brpl	.-8      	; 0xc10 <DIO_voidSetPinDirection+0x96>
     c18:	84 2b       	or	r24, r20
     c1a:	8c 93       	st	X, r24
     c1c:	bb c0       	rjmp	.+374    	; 0xd94 <DIO_voidSetPinDirection+0x21a>

			break;
		case INPUT:
			CLR_BIT(DDRA,Copy_u8PinNumber);
     c1e:	aa e3       	ldi	r26, 0x3A	; 58
     c20:	b0 e0       	ldi	r27, 0x00	; 0
     c22:	ea e3       	ldi	r30, 0x3A	; 58
     c24:	f0 e0       	ldi	r31, 0x00	; 0
     c26:	80 81       	ld	r24, Z
     c28:	48 2f       	mov	r20, r24
     c2a:	8a 81       	ldd	r24, Y+2	; 0x02
     c2c:	28 2f       	mov	r18, r24
     c2e:	30 e0       	ldi	r19, 0x00	; 0
     c30:	81 e0       	ldi	r24, 0x01	; 1
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	02 2e       	mov	r0, r18
     c36:	02 c0       	rjmp	.+4      	; 0xc3c <DIO_voidSetPinDirection+0xc2>
     c38:	88 0f       	add	r24, r24
     c3a:	99 1f       	adc	r25, r25
     c3c:	0a 94       	dec	r0
     c3e:	e2 f7       	brpl	.-8      	; 0xc38 <DIO_voidSetPinDirection+0xbe>
     c40:	80 95       	com	r24
     c42:	84 23       	and	r24, r20
     c44:	8c 93       	st	X, r24
     c46:	a6 c0       	rjmp	.+332    	; 0xd94 <DIO_voidSetPinDirection+0x21a>
	}
	break;
case DIO_PORTB:


	switch(Copy_pinstate)
     c48:	8b 81       	ldd	r24, Y+3	; 0x03
     c4a:	28 2f       	mov	r18, r24
     c4c:	30 e0       	ldi	r19, 0x00	; 0
     c4e:	39 87       	std	Y+9, r19	; 0x09
     c50:	28 87       	std	Y+8, r18	; 0x08
     c52:	88 85       	ldd	r24, Y+8	; 0x08
     c54:	99 85       	ldd	r25, Y+9	; 0x09
     c56:	00 97       	sbiw	r24, 0x00	; 0
     c58:	d1 f0       	breq	.+52     	; 0xc8e <DIO_voidSetPinDirection+0x114>
     c5a:	28 85       	ldd	r18, Y+8	; 0x08
     c5c:	39 85       	ldd	r19, Y+9	; 0x09
     c5e:	21 30       	cpi	r18, 0x01	; 1
     c60:	31 05       	cpc	r19, r1
     c62:	09 f0       	breq	.+2      	; 0xc66 <DIO_voidSetPinDirection+0xec>
     c64:	97 c0       	rjmp	.+302    	; 0xd94 <DIO_voidSetPinDirection+0x21a>
	{
		case OUTPUT:
			SET_BIT(DDRB,Copy_u8PinNumber);
     c66:	a7 e3       	ldi	r26, 0x37	; 55
     c68:	b0 e0       	ldi	r27, 0x00	; 0
     c6a:	e7 e3       	ldi	r30, 0x37	; 55
     c6c:	f0 e0       	ldi	r31, 0x00	; 0
     c6e:	80 81       	ld	r24, Z
     c70:	48 2f       	mov	r20, r24
     c72:	8a 81       	ldd	r24, Y+2	; 0x02
     c74:	28 2f       	mov	r18, r24
     c76:	30 e0       	ldi	r19, 0x00	; 0
     c78:	81 e0       	ldi	r24, 0x01	; 1
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	02 2e       	mov	r0, r18
     c7e:	02 c0       	rjmp	.+4      	; 0xc84 <DIO_voidSetPinDirection+0x10a>
     c80:	88 0f       	add	r24, r24
     c82:	99 1f       	adc	r25, r25
     c84:	0a 94       	dec	r0
     c86:	e2 f7       	brpl	.-8      	; 0xc80 <DIO_voidSetPinDirection+0x106>
     c88:	84 2b       	or	r24, r20
     c8a:	8c 93       	st	X, r24
     c8c:	83 c0       	rjmp	.+262    	; 0xd94 <DIO_voidSetPinDirection+0x21a>

			break;
		case INPUT:
			CLR_BIT(DDRB,Copy_u8PinNumber);
     c8e:	a7 e3       	ldi	r26, 0x37	; 55
     c90:	b0 e0       	ldi	r27, 0x00	; 0
     c92:	e7 e3       	ldi	r30, 0x37	; 55
     c94:	f0 e0       	ldi	r31, 0x00	; 0
     c96:	80 81       	ld	r24, Z
     c98:	48 2f       	mov	r20, r24
     c9a:	8a 81       	ldd	r24, Y+2	; 0x02
     c9c:	28 2f       	mov	r18, r24
     c9e:	30 e0       	ldi	r19, 0x00	; 0
     ca0:	81 e0       	ldi	r24, 0x01	; 1
     ca2:	90 e0       	ldi	r25, 0x00	; 0
     ca4:	02 2e       	mov	r0, r18
     ca6:	02 c0       	rjmp	.+4      	; 0xcac <DIO_voidSetPinDirection+0x132>
     ca8:	88 0f       	add	r24, r24
     caa:	99 1f       	adc	r25, r25
     cac:	0a 94       	dec	r0
     cae:	e2 f7       	brpl	.-8      	; 0xca8 <DIO_voidSetPinDirection+0x12e>
     cb0:	80 95       	com	r24
     cb2:	84 23       	and	r24, r20
     cb4:	8c 93       	st	X, r24
     cb6:	6e c0       	rjmp	.+220    	; 0xd94 <DIO_voidSetPinDirection+0x21a>
	}

	break;
case DIO_PORTC:

	switch(Copy_pinstate)
     cb8:	8b 81       	ldd	r24, Y+3	; 0x03
     cba:	28 2f       	mov	r18, r24
     cbc:	30 e0       	ldi	r19, 0x00	; 0
     cbe:	3f 83       	std	Y+7, r19	; 0x07
     cc0:	2e 83       	std	Y+6, r18	; 0x06
     cc2:	8e 81       	ldd	r24, Y+6	; 0x06
     cc4:	9f 81       	ldd	r25, Y+7	; 0x07
     cc6:	00 97       	sbiw	r24, 0x00	; 0
     cc8:	d1 f0       	breq	.+52     	; 0xcfe <DIO_voidSetPinDirection+0x184>
     cca:	2e 81       	ldd	r18, Y+6	; 0x06
     ccc:	3f 81       	ldd	r19, Y+7	; 0x07
     cce:	21 30       	cpi	r18, 0x01	; 1
     cd0:	31 05       	cpc	r19, r1
     cd2:	09 f0       	breq	.+2      	; 0xcd6 <DIO_voidSetPinDirection+0x15c>
     cd4:	5f c0       	rjmp	.+190    	; 0xd94 <DIO_voidSetPinDirection+0x21a>
	{
		case OUTPUT:
			SET_BIT(DDRC,Copy_u8PinNumber);
     cd6:	a4 e3       	ldi	r26, 0x34	; 52
     cd8:	b0 e0       	ldi	r27, 0x00	; 0
     cda:	e4 e3       	ldi	r30, 0x34	; 52
     cdc:	f0 e0       	ldi	r31, 0x00	; 0
     cde:	80 81       	ld	r24, Z
     ce0:	48 2f       	mov	r20, r24
     ce2:	8a 81       	ldd	r24, Y+2	; 0x02
     ce4:	28 2f       	mov	r18, r24
     ce6:	30 e0       	ldi	r19, 0x00	; 0
     ce8:	81 e0       	ldi	r24, 0x01	; 1
     cea:	90 e0       	ldi	r25, 0x00	; 0
     cec:	02 2e       	mov	r0, r18
     cee:	02 c0       	rjmp	.+4      	; 0xcf4 <DIO_voidSetPinDirection+0x17a>
     cf0:	88 0f       	add	r24, r24
     cf2:	99 1f       	adc	r25, r25
     cf4:	0a 94       	dec	r0
     cf6:	e2 f7       	brpl	.-8      	; 0xcf0 <DIO_voidSetPinDirection+0x176>
     cf8:	84 2b       	or	r24, r20
     cfa:	8c 93       	st	X, r24
     cfc:	4b c0       	rjmp	.+150    	; 0xd94 <DIO_voidSetPinDirection+0x21a>

			break;
		case INPUT:
			CLR_BIT(DDRC,Copy_u8PinNumber);
     cfe:	a4 e3       	ldi	r26, 0x34	; 52
     d00:	b0 e0       	ldi	r27, 0x00	; 0
     d02:	e4 e3       	ldi	r30, 0x34	; 52
     d04:	f0 e0       	ldi	r31, 0x00	; 0
     d06:	80 81       	ld	r24, Z
     d08:	48 2f       	mov	r20, r24
     d0a:	8a 81       	ldd	r24, Y+2	; 0x02
     d0c:	28 2f       	mov	r18, r24
     d0e:	30 e0       	ldi	r19, 0x00	; 0
     d10:	81 e0       	ldi	r24, 0x01	; 1
     d12:	90 e0       	ldi	r25, 0x00	; 0
     d14:	02 2e       	mov	r0, r18
     d16:	02 c0       	rjmp	.+4      	; 0xd1c <DIO_voidSetPinDirection+0x1a2>
     d18:	88 0f       	add	r24, r24
     d1a:	99 1f       	adc	r25, r25
     d1c:	0a 94       	dec	r0
     d1e:	e2 f7       	brpl	.-8      	; 0xd18 <DIO_voidSetPinDirection+0x19e>
     d20:	80 95       	com	r24
     d22:	84 23       	and	r24, r20
     d24:	8c 93       	st	X, r24
     d26:	36 c0       	rjmp	.+108    	; 0xd94 <DIO_voidSetPinDirection+0x21a>
	}

	break;
case DIO_PORTD:

	switch(Copy_pinstate)
     d28:	8b 81       	ldd	r24, Y+3	; 0x03
     d2a:	28 2f       	mov	r18, r24
     d2c:	30 e0       	ldi	r19, 0x00	; 0
     d2e:	3d 83       	std	Y+5, r19	; 0x05
     d30:	2c 83       	std	Y+4, r18	; 0x04
     d32:	8c 81       	ldd	r24, Y+4	; 0x04
     d34:	9d 81       	ldd	r25, Y+5	; 0x05
     d36:	00 97       	sbiw	r24, 0x00	; 0
     d38:	c9 f0       	breq	.+50     	; 0xd6c <DIO_voidSetPinDirection+0x1f2>
     d3a:	2c 81       	ldd	r18, Y+4	; 0x04
     d3c:	3d 81       	ldd	r19, Y+5	; 0x05
     d3e:	21 30       	cpi	r18, 0x01	; 1
     d40:	31 05       	cpc	r19, r1
     d42:	41 f5       	brne	.+80     	; 0xd94 <DIO_voidSetPinDirection+0x21a>
	{
		case OUTPUT:
			SET_BIT(DDRD,Copy_u8PinNumber);
     d44:	a1 e3       	ldi	r26, 0x31	; 49
     d46:	b0 e0       	ldi	r27, 0x00	; 0
     d48:	e1 e3       	ldi	r30, 0x31	; 49
     d4a:	f0 e0       	ldi	r31, 0x00	; 0
     d4c:	80 81       	ld	r24, Z
     d4e:	48 2f       	mov	r20, r24
     d50:	8a 81       	ldd	r24, Y+2	; 0x02
     d52:	28 2f       	mov	r18, r24
     d54:	30 e0       	ldi	r19, 0x00	; 0
     d56:	81 e0       	ldi	r24, 0x01	; 1
     d58:	90 e0       	ldi	r25, 0x00	; 0
     d5a:	02 2e       	mov	r0, r18
     d5c:	02 c0       	rjmp	.+4      	; 0xd62 <DIO_voidSetPinDirection+0x1e8>
     d5e:	88 0f       	add	r24, r24
     d60:	99 1f       	adc	r25, r25
     d62:	0a 94       	dec	r0
     d64:	e2 f7       	brpl	.-8      	; 0xd5e <DIO_voidSetPinDirection+0x1e4>
     d66:	84 2b       	or	r24, r20
     d68:	8c 93       	st	X, r24
     d6a:	14 c0       	rjmp	.+40     	; 0xd94 <DIO_voidSetPinDirection+0x21a>

			break;
		case INPUT:
			CLR_BIT(DDRD,Copy_u8PinNumber);
     d6c:	a1 e3       	ldi	r26, 0x31	; 49
     d6e:	b0 e0       	ldi	r27, 0x00	; 0
     d70:	e1 e3       	ldi	r30, 0x31	; 49
     d72:	f0 e0       	ldi	r31, 0x00	; 0
     d74:	80 81       	ld	r24, Z
     d76:	48 2f       	mov	r20, r24
     d78:	8a 81       	ldd	r24, Y+2	; 0x02
     d7a:	28 2f       	mov	r18, r24
     d7c:	30 e0       	ldi	r19, 0x00	; 0
     d7e:	81 e0       	ldi	r24, 0x01	; 1
     d80:	90 e0       	ldi	r25, 0x00	; 0
     d82:	02 2e       	mov	r0, r18
     d84:	02 c0       	rjmp	.+4      	; 0xd8a <DIO_voidSetPinDirection+0x210>
     d86:	88 0f       	add	r24, r24
     d88:	99 1f       	adc	r25, r25
     d8a:	0a 94       	dec	r0
     d8c:	e2 f7       	brpl	.-8      	; 0xd86 <DIO_voidSetPinDirection+0x20c>
     d8e:	80 95       	com	r24
     d90:	84 23       	and	r24, r20
     d92:	8c 93       	st	X, r24
	break;


}

}
     d94:	2d 96       	adiw	r28, 0x0d	; 13
     d96:	0f b6       	in	r0, 0x3f	; 63
     d98:	f8 94       	cli
     d9a:	de bf       	out	0x3e, r29	; 62
     d9c:	0f be       	out	0x3f, r0	; 63
     d9e:	cd bf       	out	0x3d, r28	; 61
     da0:	cf 91       	pop	r28
     da2:	df 91       	pop	r29
     da4:	08 95       	ret

00000da6 <DIO_voidSetPinValue>:

void DIO_voidSetPinValue(u8 Copy_u8portName,u8 Copy_u8PinNumber,u8 Copy_pinvalue)
{
     da6:	df 93       	push	r29
     da8:	cf 93       	push	r28
     daa:	cd b7       	in	r28, 0x3d	; 61
     dac:	de b7       	in	r29, 0x3e	; 62
     dae:	2d 97       	sbiw	r28, 0x0d	; 13
     db0:	0f b6       	in	r0, 0x3f	; 63
     db2:	f8 94       	cli
     db4:	de bf       	out	0x3e, r29	; 62
     db6:	0f be       	out	0x3f, r0	; 63
     db8:	cd bf       	out	0x3d, r28	; 61
     dba:	89 83       	std	Y+1, r24	; 0x01
     dbc:	6a 83       	std	Y+2, r22	; 0x02
     dbe:	4b 83       	std	Y+3, r20	; 0x03

	switch(Copy_u8portName)
     dc0:	89 81       	ldd	r24, Y+1	; 0x01
     dc2:	28 2f       	mov	r18, r24
     dc4:	30 e0       	ldi	r19, 0x00	; 0
     dc6:	3d 87       	std	Y+13, r19	; 0x0d
     dc8:	2c 87       	std	Y+12, r18	; 0x0c
     dca:	8c 85       	ldd	r24, Y+12	; 0x0c
     dcc:	9d 85       	ldd	r25, Y+13	; 0x0d
     dce:	81 30       	cpi	r24, 0x01	; 1
     dd0:	91 05       	cpc	r25, r1
     dd2:	09 f4       	brne	.+2      	; 0xdd6 <DIO_voidSetPinValue+0x30>
     dd4:	4f c0       	rjmp	.+158    	; 0xe74 <DIO_voidSetPinValue+0xce>
     dd6:	2c 85       	ldd	r18, Y+12	; 0x0c
     dd8:	3d 85       	ldd	r19, Y+13	; 0x0d
     dda:	22 30       	cpi	r18, 0x02	; 2
     ddc:	31 05       	cpc	r19, r1
     dde:	2c f4       	brge	.+10     	; 0xdea <DIO_voidSetPinValue+0x44>
     de0:	8c 85       	ldd	r24, Y+12	; 0x0c
     de2:	9d 85       	ldd	r25, Y+13	; 0x0d
     de4:	00 97       	sbiw	r24, 0x00	; 0
     de6:	71 f0       	breq	.+28     	; 0xe04 <DIO_voidSetPinValue+0x5e>
     de8:	eb c0       	rjmp	.+470    	; 0xfc0 <DIO_voidSetPinValue+0x21a>
     dea:	2c 85       	ldd	r18, Y+12	; 0x0c
     dec:	3d 85       	ldd	r19, Y+13	; 0x0d
     dee:	22 30       	cpi	r18, 0x02	; 2
     df0:	31 05       	cpc	r19, r1
     df2:	09 f4       	brne	.+2      	; 0xdf6 <DIO_voidSetPinValue+0x50>
     df4:	77 c0       	rjmp	.+238    	; 0xee4 <DIO_voidSetPinValue+0x13e>
     df6:	8c 85       	ldd	r24, Y+12	; 0x0c
     df8:	9d 85       	ldd	r25, Y+13	; 0x0d
     dfa:	83 30       	cpi	r24, 0x03	; 3
     dfc:	91 05       	cpc	r25, r1
     dfe:	09 f4       	brne	.+2      	; 0xe02 <DIO_voidSetPinValue+0x5c>
     e00:	a9 c0       	rjmp	.+338    	; 0xf54 <DIO_voidSetPinValue+0x1ae>
     e02:	de c0       	rjmp	.+444    	; 0xfc0 <DIO_voidSetPinValue+0x21a>
	{

	case DIO_PORTA:
		switch(Copy_pinvalue)
     e04:	8b 81       	ldd	r24, Y+3	; 0x03
     e06:	28 2f       	mov	r18, r24
     e08:	30 e0       	ldi	r19, 0x00	; 0
     e0a:	3b 87       	std	Y+11, r19	; 0x0b
     e0c:	2a 87       	std	Y+10, r18	; 0x0a
     e0e:	8a 85       	ldd	r24, Y+10	; 0x0a
     e10:	9b 85       	ldd	r25, Y+11	; 0x0b
     e12:	00 97       	sbiw	r24, 0x00	; 0
     e14:	d1 f0       	breq	.+52     	; 0xe4a <DIO_voidSetPinValue+0xa4>
     e16:	2a 85       	ldd	r18, Y+10	; 0x0a
     e18:	3b 85       	ldd	r19, Y+11	; 0x0b
     e1a:	21 30       	cpi	r18, 0x01	; 1
     e1c:	31 05       	cpc	r19, r1
     e1e:	09 f0       	breq	.+2      	; 0xe22 <DIO_voidSetPinValue+0x7c>
     e20:	cf c0       	rjmp	.+414    	; 0xfc0 <DIO_voidSetPinValue+0x21a>
		{
			case HIGH:
				SET_BIT(PORTA,Copy_u8PinNumber);
     e22:	ab e3       	ldi	r26, 0x3B	; 59
     e24:	b0 e0       	ldi	r27, 0x00	; 0
     e26:	eb e3       	ldi	r30, 0x3B	; 59
     e28:	f0 e0       	ldi	r31, 0x00	; 0
     e2a:	80 81       	ld	r24, Z
     e2c:	48 2f       	mov	r20, r24
     e2e:	8a 81       	ldd	r24, Y+2	; 0x02
     e30:	28 2f       	mov	r18, r24
     e32:	30 e0       	ldi	r19, 0x00	; 0
     e34:	81 e0       	ldi	r24, 0x01	; 1
     e36:	90 e0       	ldi	r25, 0x00	; 0
     e38:	02 2e       	mov	r0, r18
     e3a:	02 c0       	rjmp	.+4      	; 0xe40 <DIO_voidSetPinValue+0x9a>
     e3c:	88 0f       	add	r24, r24
     e3e:	99 1f       	adc	r25, r25
     e40:	0a 94       	dec	r0
     e42:	e2 f7       	brpl	.-8      	; 0xe3c <DIO_voidSetPinValue+0x96>
     e44:	84 2b       	or	r24, r20
     e46:	8c 93       	st	X, r24
     e48:	bb c0       	rjmp	.+374    	; 0xfc0 <DIO_voidSetPinValue+0x21a>

				break;
			case LOW:
				CLR_BIT(PORTA,Copy_u8PinNumber);
     e4a:	ab e3       	ldi	r26, 0x3B	; 59
     e4c:	b0 e0       	ldi	r27, 0x00	; 0
     e4e:	eb e3       	ldi	r30, 0x3B	; 59
     e50:	f0 e0       	ldi	r31, 0x00	; 0
     e52:	80 81       	ld	r24, Z
     e54:	48 2f       	mov	r20, r24
     e56:	8a 81       	ldd	r24, Y+2	; 0x02
     e58:	28 2f       	mov	r18, r24
     e5a:	30 e0       	ldi	r19, 0x00	; 0
     e5c:	81 e0       	ldi	r24, 0x01	; 1
     e5e:	90 e0       	ldi	r25, 0x00	; 0
     e60:	02 2e       	mov	r0, r18
     e62:	02 c0       	rjmp	.+4      	; 0xe68 <DIO_voidSetPinValue+0xc2>
     e64:	88 0f       	add	r24, r24
     e66:	99 1f       	adc	r25, r25
     e68:	0a 94       	dec	r0
     e6a:	e2 f7       	brpl	.-8      	; 0xe64 <DIO_voidSetPinValue+0xbe>
     e6c:	80 95       	com	r24
     e6e:	84 23       	and	r24, r20
     e70:	8c 93       	st	X, r24
     e72:	a6 c0       	rjmp	.+332    	; 0xfc0 <DIO_voidSetPinValue+0x21a>
		}
		break;
	case DIO_PORTB:


		switch(Copy_pinvalue)
     e74:	8b 81       	ldd	r24, Y+3	; 0x03
     e76:	28 2f       	mov	r18, r24
     e78:	30 e0       	ldi	r19, 0x00	; 0
     e7a:	39 87       	std	Y+9, r19	; 0x09
     e7c:	28 87       	std	Y+8, r18	; 0x08
     e7e:	88 85       	ldd	r24, Y+8	; 0x08
     e80:	99 85       	ldd	r25, Y+9	; 0x09
     e82:	00 97       	sbiw	r24, 0x00	; 0
     e84:	d1 f0       	breq	.+52     	; 0xeba <DIO_voidSetPinValue+0x114>
     e86:	28 85       	ldd	r18, Y+8	; 0x08
     e88:	39 85       	ldd	r19, Y+9	; 0x09
     e8a:	21 30       	cpi	r18, 0x01	; 1
     e8c:	31 05       	cpc	r19, r1
     e8e:	09 f0       	breq	.+2      	; 0xe92 <DIO_voidSetPinValue+0xec>
     e90:	97 c0       	rjmp	.+302    	; 0xfc0 <DIO_voidSetPinValue+0x21a>
		{
			case HIGH:
				SET_BIT(PORTB,Copy_u8PinNumber);
     e92:	a8 e3       	ldi	r26, 0x38	; 56
     e94:	b0 e0       	ldi	r27, 0x00	; 0
     e96:	e8 e3       	ldi	r30, 0x38	; 56
     e98:	f0 e0       	ldi	r31, 0x00	; 0
     e9a:	80 81       	ld	r24, Z
     e9c:	48 2f       	mov	r20, r24
     e9e:	8a 81       	ldd	r24, Y+2	; 0x02
     ea0:	28 2f       	mov	r18, r24
     ea2:	30 e0       	ldi	r19, 0x00	; 0
     ea4:	81 e0       	ldi	r24, 0x01	; 1
     ea6:	90 e0       	ldi	r25, 0x00	; 0
     ea8:	02 2e       	mov	r0, r18
     eaa:	02 c0       	rjmp	.+4      	; 0xeb0 <DIO_voidSetPinValue+0x10a>
     eac:	88 0f       	add	r24, r24
     eae:	99 1f       	adc	r25, r25
     eb0:	0a 94       	dec	r0
     eb2:	e2 f7       	brpl	.-8      	; 0xeac <DIO_voidSetPinValue+0x106>
     eb4:	84 2b       	or	r24, r20
     eb6:	8c 93       	st	X, r24
     eb8:	83 c0       	rjmp	.+262    	; 0xfc0 <DIO_voidSetPinValue+0x21a>

				break;
			case LOW:
				CLR_BIT(PORTB,Copy_u8PinNumber);
     eba:	a8 e3       	ldi	r26, 0x38	; 56
     ebc:	b0 e0       	ldi	r27, 0x00	; 0
     ebe:	e8 e3       	ldi	r30, 0x38	; 56
     ec0:	f0 e0       	ldi	r31, 0x00	; 0
     ec2:	80 81       	ld	r24, Z
     ec4:	48 2f       	mov	r20, r24
     ec6:	8a 81       	ldd	r24, Y+2	; 0x02
     ec8:	28 2f       	mov	r18, r24
     eca:	30 e0       	ldi	r19, 0x00	; 0
     ecc:	81 e0       	ldi	r24, 0x01	; 1
     ece:	90 e0       	ldi	r25, 0x00	; 0
     ed0:	02 2e       	mov	r0, r18
     ed2:	02 c0       	rjmp	.+4      	; 0xed8 <DIO_voidSetPinValue+0x132>
     ed4:	88 0f       	add	r24, r24
     ed6:	99 1f       	adc	r25, r25
     ed8:	0a 94       	dec	r0
     eda:	e2 f7       	brpl	.-8      	; 0xed4 <DIO_voidSetPinValue+0x12e>
     edc:	80 95       	com	r24
     ede:	84 23       	and	r24, r20
     ee0:	8c 93       	st	X, r24
     ee2:	6e c0       	rjmp	.+220    	; 0xfc0 <DIO_voidSetPinValue+0x21a>
		}

		break;
	case DIO_PORTC:

		switch(Copy_pinvalue)
     ee4:	8b 81       	ldd	r24, Y+3	; 0x03
     ee6:	28 2f       	mov	r18, r24
     ee8:	30 e0       	ldi	r19, 0x00	; 0
     eea:	3f 83       	std	Y+7, r19	; 0x07
     eec:	2e 83       	std	Y+6, r18	; 0x06
     eee:	8e 81       	ldd	r24, Y+6	; 0x06
     ef0:	9f 81       	ldd	r25, Y+7	; 0x07
     ef2:	00 97       	sbiw	r24, 0x00	; 0
     ef4:	d1 f0       	breq	.+52     	; 0xf2a <DIO_voidSetPinValue+0x184>
     ef6:	2e 81       	ldd	r18, Y+6	; 0x06
     ef8:	3f 81       	ldd	r19, Y+7	; 0x07
     efa:	21 30       	cpi	r18, 0x01	; 1
     efc:	31 05       	cpc	r19, r1
     efe:	09 f0       	breq	.+2      	; 0xf02 <DIO_voidSetPinValue+0x15c>
     f00:	5f c0       	rjmp	.+190    	; 0xfc0 <DIO_voidSetPinValue+0x21a>
		{
			case HIGH:
				SET_BIT(PORTC,Copy_u8PinNumber);
     f02:	a5 e3       	ldi	r26, 0x35	; 53
     f04:	b0 e0       	ldi	r27, 0x00	; 0
     f06:	e5 e3       	ldi	r30, 0x35	; 53
     f08:	f0 e0       	ldi	r31, 0x00	; 0
     f0a:	80 81       	ld	r24, Z
     f0c:	48 2f       	mov	r20, r24
     f0e:	8a 81       	ldd	r24, Y+2	; 0x02
     f10:	28 2f       	mov	r18, r24
     f12:	30 e0       	ldi	r19, 0x00	; 0
     f14:	81 e0       	ldi	r24, 0x01	; 1
     f16:	90 e0       	ldi	r25, 0x00	; 0
     f18:	02 2e       	mov	r0, r18
     f1a:	02 c0       	rjmp	.+4      	; 0xf20 <DIO_voidSetPinValue+0x17a>
     f1c:	88 0f       	add	r24, r24
     f1e:	99 1f       	adc	r25, r25
     f20:	0a 94       	dec	r0
     f22:	e2 f7       	brpl	.-8      	; 0xf1c <DIO_voidSetPinValue+0x176>
     f24:	84 2b       	or	r24, r20
     f26:	8c 93       	st	X, r24
     f28:	4b c0       	rjmp	.+150    	; 0xfc0 <DIO_voidSetPinValue+0x21a>

				break;
			case LOW:
				CLR_BIT(PORTC,Copy_u8PinNumber);
     f2a:	a5 e3       	ldi	r26, 0x35	; 53
     f2c:	b0 e0       	ldi	r27, 0x00	; 0
     f2e:	e5 e3       	ldi	r30, 0x35	; 53
     f30:	f0 e0       	ldi	r31, 0x00	; 0
     f32:	80 81       	ld	r24, Z
     f34:	48 2f       	mov	r20, r24
     f36:	8a 81       	ldd	r24, Y+2	; 0x02
     f38:	28 2f       	mov	r18, r24
     f3a:	30 e0       	ldi	r19, 0x00	; 0
     f3c:	81 e0       	ldi	r24, 0x01	; 1
     f3e:	90 e0       	ldi	r25, 0x00	; 0
     f40:	02 2e       	mov	r0, r18
     f42:	02 c0       	rjmp	.+4      	; 0xf48 <DIO_voidSetPinValue+0x1a2>
     f44:	88 0f       	add	r24, r24
     f46:	99 1f       	adc	r25, r25
     f48:	0a 94       	dec	r0
     f4a:	e2 f7       	brpl	.-8      	; 0xf44 <DIO_voidSetPinValue+0x19e>
     f4c:	80 95       	com	r24
     f4e:	84 23       	and	r24, r20
     f50:	8c 93       	st	X, r24
     f52:	36 c0       	rjmp	.+108    	; 0xfc0 <DIO_voidSetPinValue+0x21a>
		}

		break;
	case DIO_PORTD:

		switch(Copy_pinvalue)
     f54:	8b 81       	ldd	r24, Y+3	; 0x03
     f56:	28 2f       	mov	r18, r24
     f58:	30 e0       	ldi	r19, 0x00	; 0
     f5a:	3d 83       	std	Y+5, r19	; 0x05
     f5c:	2c 83       	std	Y+4, r18	; 0x04
     f5e:	8c 81       	ldd	r24, Y+4	; 0x04
     f60:	9d 81       	ldd	r25, Y+5	; 0x05
     f62:	00 97       	sbiw	r24, 0x00	; 0
     f64:	c9 f0       	breq	.+50     	; 0xf98 <DIO_voidSetPinValue+0x1f2>
     f66:	2c 81       	ldd	r18, Y+4	; 0x04
     f68:	3d 81       	ldd	r19, Y+5	; 0x05
     f6a:	21 30       	cpi	r18, 0x01	; 1
     f6c:	31 05       	cpc	r19, r1
     f6e:	41 f5       	brne	.+80     	; 0xfc0 <DIO_voidSetPinValue+0x21a>
		{
			case HIGH:
				SET_BIT(PORTD,Copy_u8PinNumber);
     f70:	a2 e3       	ldi	r26, 0x32	; 50
     f72:	b0 e0       	ldi	r27, 0x00	; 0
     f74:	e2 e3       	ldi	r30, 0x32	; 50
     f76:	f0 e0       	ldi	r31, 0x00	; 0
     f78:	80 81       	ld	r24, Z
     f7a:	48 2f       	mov	r20, r24
     f7c:	8a 81       	ldd	r24, Y+2	; 0x02
     f7e:	28 2f       	mov	r18, r24
     f80:	30 e0       	ldi	r19, 0x00	; 0
     f82:	81 e0       	ldi	r24, 0x01	; 1
     f84:	90 e0       	ldi	r25, 0x00	; 0
     f86:	02 2e       	mov	r0, r18
     f88:	02 c0       	rjmp	.+4      	; 0xf8e <DIO_voidSetPinValue+0x1e8>
     f8a:	88 0f       	add	r24, r24
     f8c:	99 1f       	adc	r25, r25
     f8e:	0a 94       	dec	r0
     f90:	e2 f7       	brpl	.-8      	; 0xf8a <DIO_voidSetPinValue+0x1e4>
     f92:	84 2b       	or	r24, r20
     f94:	8c 93       	st	X, r24
     f96:	14 c0       	rjmp	.+40     	; 0xfc0 <DIO_voidSetPinValue+0x21a>

				break;
			case LOW:
				CLR_BIT(PORTD,Copy_u8PinNumber);
     f98:	a2 e3       	ldi	r26, 0x32	; 50
     f9a:	b0 e0       	ldi	r27, 0x00	; 0
     f9c:	e2 e3       	ldi	r30, 0x32	; 50
     f9e:	f0 e0       	ldi	r31, 0x00	; 0
     fa0:	80 81       	ld	r24, Z
     fa2:	48 2f       	mov	r20, r24
     fa4:	8a 81       	ldd	r24, Y+2	; 0x02
     fa6:	28 2f       	mov	r18, r24
     fa8:	30 e0       	ldi	r19, 0x00	; 0
     faa:	81 e0       	ldi	r24, 0x01	; 1
     fac:	90 e0       	ldi	r25, 0x00	; 0
     fae:	02 2e       	mov	r0, r18
     fb0:	02 c0       	rjmp	.+4      	; 0xfb6 <DIO_voidSetPinValue+0x210>
     fb2:	88 0f       	add	r24, r24
     fb4:	99 1f       	adc	r25, r25
     fb6:	0a 94       	dec	r0
     fb8:	e2 f7       	brpl	.-8      	; 0xfb2 <DIO_voidSetPinValue+0x20c>
     fba:	80 95       	com	r24
     fbc:	84 23       	and	r24, r20
     fbe:	8c 93       	st	X, r24
	}




}
     fc0:	2d 96       	adiw	r28, 0x0d	; 13
     fc2:	0f b6       	in	r0, 0x3f	; 63
     fc4:	f8 94       	cli
     fc6:	de bf       	out	0x3e, r29	; 62
     fc8:	0f be       	out	0x3f, r0	; 63
     fca:	cd bf       	out	0x3d, r28	; 61
     fcc:	cf 91       	pop	r28
     fce:	df 91       	pop	r29
     fd0:	08 95       	ret

00000fd2 <DIO_u8GetPinValue>:
u8 DIO_u8GetPinValue(u8 Copy_u8portName,u8 Copy_u8PinNumber)
{
     fd2:	df 93       	push	r29
     fd4:	cf 93       	push	r28
     fd6:	00 d0       	rcall	.+0      	; 0xfd8 <DIO_u8GetPinValue+0x6>
     fd8:	00 d0       	rcall	.+0      	; 0xfda <DIO_u8GetPinValue+0x8>
     fda:	0f 92       	push	r0
     fdc:	cd b7       	in	r28, 0x3d	; 61
     fde:	de b7       	in	r29, 0x3e	; 62
     fe0:	8a 83       	std	Y+2, r24	; 0x02
     fe2:	6b 83       	std	Y+3, r22	; 0x03

	u8 Local_u8PinValue;


	switch(Copy_u8portName)
     fe4:	8a 81       	ldd	r24, Y+2	; 0x02
     fe6:	28 2f       	mov	r18, r24
     fe8:	30 e0       	ldi	r19, 0x00	; 0
     fea:	3d 83       	std	Y+5, r19	; 0x05
     fec:	2c 83       	std	Y+4, r18	; 0x04
     fee:	4c 81       	ldd	r20, Y+4	; 0x04
     ff0:	5d 81       	ldd	r21, Y+5	; 0x05
     ff2:	41 30       	cpi	r20, 0x01	; 1
     ff4:	51 05       	cpc	r21, r1
     ff6:	41 f1       	breq	.+80     	; 0x1048 <DIO_u8GetPinValue+0x76>
     ff8:	8c 81       	ldd	r24, Y+4	; 0x04
     ffa:	9d 81       	ldd	r25, Y+5	; 0x05
     ffc:	82 30       	cpi	r24, 0x02	; 2
     ffe:	91 05       	cpc	r25, r1
    1000:	34 f4       	brge	.+12     	; 0x100e <DIO_u8GetPinValue+0x3c>
    1002:	2c 81       	ldd	r18, Y+4	; 0x04
    1004:	3d 81       	ldd	r19, Y+5	; 0x05
    1006:	21 15       	cp	r18, r1
    1008:	31 05       	cpc	r19, r1
    100a:	61 f0       	breq	.+24     	; 0x1024 <DIO_u8GetPinValue+0x52>
    100c:	52 c0       	rjmp	.+164    	; 0x10b2 <DIO_u8GetPinValue+0xe0>
    100e:	4c 81       	ldd	r20, Y+4	; 0x04
    1010:	5d 81       	ldd	r21, Y+5	; 0x05
    1012:	42 30       	cpi	r20, 0x02	; 2
    1014:	51 05       	cpc	r21, r1
    1016:	51 f1       	breq	.+84     	; 0x106c <DIO_u8GetPinValue+0x9a>
    1018:	8c 81       	ldd	r24, Y+4	; 0x04
    101a:	9d 81       	ldd	r25, Y+5	; 0x05
    101c:	83 30       	cpi	r24, 0x03	; 3
    101e:	91 05       	cpc	r25, r1
    1020:	b9 f1       	breq	.+110    	; 0x1090 <DIO_u8GetPinValue+0xbe>
    1022:	47 c0       	rjmp	.+142    	; 0x10b2 <DIO_u8GetPinValue+0xe0>
		{
			case DIO_PORTA:
				Local_u8PinValue=GET_BIT(PINA, Copy_u8PinNumber);
    1024:	e9 e3       	ldi	r30, 0x39	; 57
    1026:	f0 e0       	ldi	r31, 0x00	; 0
    1028:	80 81       	ld	r24, Z
    102a:	28 2f       	mov	r18, r24
    102c:	30 e0       	ldi	r19, 0x00	; 0
    102e:	8b 81       	ldd	r24, Y+3	; 0x03
    1030:	88 2f       	mov	r24, r24
    1032:	90 e0       	ldi	r25, 0x00	; 0
    1034:	a9 01       	movw	r20, r18
    1036:	02 c0       	rjmp	.+4      	; 0x103c <DIO_u8GetPinValue+0x6a>
    1038:	55 95       	asr	r21
    103a:	47 95       	ror	r20
    103c:	8a 95       	dec	r24
    103e:	e2 f7       	brpl	.-8      	; 0x1038 <DIO_u8GetPinValue+0x66>
    1040:	ca 01       	movw	r24, r20
    1042:	81 70       	andi	r24, 0x01	; 1
    1044:	89 83       	std	Y+1, r24	; 0x01
    1046:	35 c0       	rjmp	.+106    	; 0x10b2 <DIO_u8GetPinValue+0xe0>

				break;
			case DIO_PORTB:
							Local_u8PinValue=GET_BIT(PINB, Copy_u8PinNumber);
    1048:	e6 e3       	ldi	r30, 0x36	; 54
    104a:	f0 e0       	ldi	r31, 0x00	; 0
    104c:	80 81       	ld	r24, Z
    104e:	28 2f       	mov	r18, r24
    1050:	30 e0       	ldi	r19, 0x00	; 0
    1052:	8b 81       	ldd	r24, Y+3	; 0x03
    1054:	88 2f       	mov	r24, r24
    1056:	90 e0       	ldi	r25, 0x00	; 0
    1058:	a9 01       	movw	r20, r18
    105a:	02 c0       	rjmp	.+4      	; 0x1060 <DIO_u8GetPinValue+0x8e>
    105c:	55 95       	asr	r21
    105e:	47 95       	ror	r20
    1060:	8a 95       	dec	r24
    1062:	e2 f7       	brpl	.-8      	; 0x105c <DIO_u8GetPinValue+0x8a>
    1064:	ca 01       	movw	r24, r20
    1066:	81 70       	andi	r24, 0x01	; 1
    1068:	89 83       	std	Y+1, r24	; 0x01
    106a:	23 c0       	rjmp	.+70     	; 0x10b2 <DIO_u8GetPinValue+0xe0>

							break;
			case DIO_PORTC:
							Local_u8PinValue=GET_BIT(PINC, Copy_u8PinNumber);
    106c:	e3 e3       	ldi	r30, 0x33	; 51
    106e:	f0 e0       	ldi	r31, 0x00	; 0
    1070:	80 81       	ld	r24, Z
    1072:	28 2f       	mov	r18, r24
    1074:	30 e0       	ldi	r19, 0x00	; 0
    1076:	8b 81       	ldd	r24, Y+3	; 0x03
    1078:	88 2f       	mov	r24, r24
    107a:	90 e0       	ldi	r25, 0x00	; 0
    107c:	a9 01       	movw	r20, r18
    107e:	02 c0       	rjmp	.+4      	; 0x1084 <DIO_u8GetPinValue+0xb2>
    1080:	55 95       	asr	r21
    1082:	47 95       	ror	r20
    1084:	8a 95       	dec	r24
    1086:	e2 f7       	brpl	.-8      	; 0x1080 <DIO_u8GetPinValue+0xae>
    1088:	ca 01       	movw	r24, r20
    108a:	81 70       	andi	r24, 0x01	; 1
    108c:	89 83       	std	Y+1, r24	; 0x01
    108e:	11 c0       	rjmp	.+34     	; 0x10b2 <DIO_u8GetPinValue+0xe0>

							break;
			case DIO_PORTD:
							Local_u8PinValue=GET_BIT(PIND, Copy_u8PinNumber);
    1090:	e0 e3       	ldi	r30, 0x30	; 48
    1092:	f0 e0       	ldi	r31, 0x00	; 0
    1094:	80 81       	ld	r24, Z
    1096:	28 2f       	mov	r18, r24
    1098:	30 e0       	ldi	r19, 0x00	; 0
    109a:	8b 81       	ldd	r24, Y+3	; 0x03
    109c:	88 2f       	mov	r24, r24
    109e:	90 e0       	ldi	r25, 0x00	; 0
    10a0:	a9 01       	movw	r20, r18
    10a2:	02 c0       	rjmp	.+4      	; 0x10a8 <DIO_u8GetPinValue+0xd6>
    10a4:	55 95       	asr	r21
    10a6:	47 95       	ror	r20
    10a8:	8a 95       	dec	r24
    10aa:	e2 f7       	brpl	.-8      	; 0x10a4 <DIO_u8GetPinValue+0xd2>
    10ac:	ca 01       	movw	r24, r20
    10ae:	81 70       	andi	r24, 0x01	; 1
    10b0:	89 83       	std	Y+1, r24	; 0x01
							break;


		}

	return Local_u8PinValue;
    10b2:	89 81       	ldd	r24, Y+1	; 0x01

}
    10b4:	0f 90       	pop	r0
    10b6:	0f 90       	pop	r0
    10b8:	0f 90       	pop	r0
    10ba:	0f 90       	pop	r0
    10bc:	0f 90       	pop	r0
    10be:	cf 91       	pop	r28
    10c0:	df 91       	pop	r29
    10c2:	08 95       	ret

000010c4 <DIO_voidSetSpecificPortDirection>:
void DIO_voidSetSpecificPortDirection(u8 Copy_u8PortName,u8 Copy_PortState)
{
    10c4:	df 93       	push	r29
    10c6:	cf 93       	push	r28
    10c8:	00 d0       	rcall	.+0      	; 0x10ca <DIO_voidSetSpecificPortDirection+0x6>
    10ca:	00 d0       	rcall	.+0      	; 0x10cc <DIO_voidSetSpecificPortDirection+0x8>
    10cc:	cd b7       	in	r28, 0x3d	; 61
    10ce:	de b7       	in	r29, 0x3e	; 62
    10d0:	89 83       	std	Y+1, r24	; 0x01
    10d2:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortName)
    10d4:	89 81       	ldd	r24, Y+1	; 0x01
    10d6:	28 2f       	mov	r18, r24
    10d8:	30 e0       	ldi	r19, 0x00	; 0
    10da:	3c 83       	std	Y+4, r19	; 0x04
    10dc:	2b 83       	std	Y+3, r18	; 0x03
    10de:	8b 81       	ldd	r24, Y+3	; 0x03
    10e0:	9c 81       	ldd	r25, Y+4	; 0x04
    10e2:	81 30       	cpi	r24, 0x01	; 1
    10e4:	91 05       	cpc	r25, r1
    10e6:	d1 f0       	breq	.+52     	; 0x111c <DIO_voidSetSpecificPortDirection+0x58>
    10e8:	2b 81       	ldd	r18, Y+3	; 0x03
    10ea:	3c 81       	ldd	r19, Y+4	; 0x04
    10ec:	22 30       	cpi	r18, 0x02	; 2
    10ee:	31 05       	cpc	r19, r1
    10f0:	2c f4       	brge	.+10     	; 0x10fc <DIO_voidSetSpecificPortDirection+0x38>
    10f2:	8b 81       	ldd	r24, Y+3	; 0x03
    10f4:	9c 81       	ldd	r25, Y+4	; 0x04
    10f6:	00 97       	sbiw	r24, 0x00	; 0
    10f8:	61 f0       	breq	.+24     	; 0x1112 <DIO_voidSetSpecificPortDirection+0x4e>
    10fa:	1e c0       	rjmp	.+60     	; 0x1138 <DIO_voidSetSpecificPortDirection+0x74>
    10fc:	2b 81       	ldd	r18, Y+3	; 0x03
    10fe:	3c 81       	ldd	r19, Y+4	; 0x04
    1100:	22 30       	cpi	r18, 0x02	; 2
    1102:	31 05       	cpc	r19, r1
    1104:	81 f0       	breq	.+32     	; 0x1126 <DIO_voidSetSpecificPortDirection+0x62>
    1106:	8b 81       	ldd	r24, Y+3	; 0x03
    1108:	9c 81       	ldd	r25, Y+4	; 0x04
    110a:	83 30       	cpi	r24, 0x03	; 3
    110c:	91 05       	cpc	r25, r1
    110e:	81 f0       	breq	.+32     	; 0x1130 <DIO_voidSetSpecificPortDirection+0x6c>
    1110:	13 c0       	rjmp	.+38     	; 0x1138 <DIO_voidSetSpecificPortDirection+0x74>
	{
	case DIO_PORTA:
		DDRA = Copy_PortState;
    1112:	ea e3       	ldi	r30, 0x3A	; 58
    1114:	f0 e0       	ldi	r31, 0x00	; 0
    1116:	8a 81       	ldd	r24, Y+2	; 0x02
    1118:	80 83       	st	Z, r24
    111a:	0e c0       	rjmp	.+28     	; 0x1138 <DIO_voidSetSpecificPortDirection+0x74>
		break;
	case DIO_PORTB:
		DDRB = Copy_PortState;
    111c:	e7 e3       	ldi	r30, 0x37	; 55
    111e:	f0 e0       	ldi	r31, 0x00	; 0
    1120:	8a 81       	ldd	r24, Y+2	; 0x02
    1122:	80 83       	st	Z, r24
    1124:	09 c0       	rjmp	.+18     	; 0x1138 <DIO_voidSetSpecificPortDirection+0x74>
		break;
	case DIO_PORTC:
		DDRC = Copy_PortState;
    1126:	e4 e3       	ldi	r30, 0x34	; 52
    1128:	f0 e0       	ldi	r31, 0x00	; 0
    112a:	8a 81       	ldd	r24, Y+2	; 0x02
    112c:	80 83       	st	Z, r24
    112e:	04 c0       	rjmp	.+8      	; 0x1138 <DIO_voidSetSpecificPortDirection+0x74>
		break;
	case DIO_PORTD:
		DDRD = Copy_PortState;
    1130:	e1 e3       	ldi	r30, 0x31	; 49
    1132:	f0 e0       	ldi	r31, 0x00	; 0
    1134:	8a 81       	ldd	r24, Y+2	; 0x02
    1136:	80 83       	st	Z, r24
		break;
	}
}
    1138:	0f 90       	pop	r0
    113a:	0f 90       	pop	r0
    113c:	0f 90       	pop	r0
    113e:	0f 90       	pop	r0
    1140:	cf 91       	pop	r28
    1142:	df 91       	pop	r29
    1144:	08 95       	ret

00001146 <DIO_voidSetSpecificPortValue>:

void DIO_voidSetSpecificPortValue(u8 Copy_u8PortName,u8 Copy_PortState)
{
    1146:	df 93       	push	r29
    1148:	cf 93       	push	r28
    114a:	00 d0       	rcall	.+0      	; 0x114c <DIO_voidSetSpecificPortValue+0x6>
    114c:	00 d0       	rcall	.+0      	; 0x114e <DIO_voidSetSpecificPortValue+0x8>
    114e:	cd b7       	in	r28, 0x3d	; 61
    1150:	de b7       	in	r29, 0x3e	; 62
    1152:	89 83       	std	Y+1, r24	; 0x01
    1154:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortName)
    1156:	89 81       	ldd	r24, Y+1	; 0x01
    1158:	28 2f       	mov	r18, r24
    115a:	30 e0       	ldi	r19, 0x00	; 0
    115c:	3c 83       	std	Y+4, r19	; 0x04
    115e:	2b 83       	std	Y+3, r18	; 0x03
    1160:	8b 81       	ldd	r24, Y+3	; 0x03
    1162:	9c 81       	ldd	r25, Y+4	; 0x04
    1164:	81 30       	cpi	r24, 0x01	; 1
    1166:	91 05       	cpc	r25, r1
    1168:	d1 f0       	breq	.+52     	; 0x119e <DIO_voidSetSpecificPortValue+0x58>
    116a:	2b 81       	ldd	r18, Y+3	; 0x03
    116c:	3c 81       	ldd	r19, Y+4	; 0x04
    116e:	22 30       	cpi	r18, 0x02	; 2
    1170:	31 05       	cpc	r19, r1
    1172:	2c f4       	brge	.+10     	; 0x117e <DIO_voidSetSpecificPortValue+0x38>
    1174:	8b 81       	ldd	r24, Y+3	; 0x03
    1176:	9c 81       	ldd	r25, Y+4	; 0x04
    1178:	00 97       	sbiw	r24, 0x00	; 0
    117a:	61 f0       	breq	.+24     	; 0x1194 <DIO_voidSetSpecificPortValue+0x4e>
    117c:	1e c0       	rjmp	.+60     	; 0x11ba <DIO_voidSetSpecificPortValue+0x74>
    117e:	2b 81       	ldd	r18, Y+3	; 0x03
    1180:	3c 81       	ldd	r19, Y+4	; 0x04
    1182:	22 30       	cpi	r18, 0x02	; 2
    1184:	31 05       	cpc	r19, r1
    1186:	81 f0       	breq	.+32     	; 0x11a8 <DIO_voidSetSpecificPortValue+0x62>
    1188:	8b 81       	ldd	r24, Y+3	; 0x03
    118a:	9c 81       	ldd	r25, Y+4	; 0x04
    118c:	83 30       	cpi	r24, 0x03	; 3
    118e:	91 05       	cpc	r25, r1
    1190:	81 f0       	breq	.+32     	; 0x11b2 <DIO_voidSetSpecificPortValue+0x6c>
    1192:	13 c0       	rjmp	.+38     	; 0x11ba <DIO_voidSetSpecificPortValue+0x74>
		{
		case DIO_PORTA:
			PORTA = Copy_PortState;
    1194:	eb e3       	ldi	r30, 0x3B	; 59
    1196:	f0 e0       	ldi	r31, 0x00	; 0
    1198:	8a 81       	ldd	r24, Y+2	; 0x02
    119a:	80 83       	st	Z, r24
    119c:	0e c0       	rjmp	.+28     	; 0x11ba <DIO_voidSetSpecificPortValue+0x74>
			break;
		case DIO_PORTB:
			PORTB = Copy_PortState;
    119e:	e8 e3       	ldi	r30, 0x38	; 56
    11a0:	f0 e0       	ldi	r31, 0x00	; 0
    11a2:	8a 81       	ldd	r24, Y+2	; 0x02
    11a4:	80 83       	st	Z, r24
    11a6:	09 c0       	rjmp	.+18     	; 0x11ba <DIO_voidSetSpecificPortValue+0x74>
			break;
		case DIO_PORTC:
			PORTC = Copy_PortState;
    11a8:	e5 e3       	ldi	r30, 0x35	; 53
    11aa:	f0 e0       	ldi	r31, 0x00	; 0
    11ac:	8a 81       	ldd	r24, Y+2	; 0x02
    11ae:	80 83       	st	Z, r24
    11b0:	04 c0       	rjmp	.+8      	; 0x11ba <DIO_voidSetSpecificPortValue+0x74>
			break;
		case DIO_PORTD:
			PORTD = Copy_PortState;
    11b2:	e2 e3       	ldi	r30, 0x32	; 50
    11b4:	f0 e0       	ldi	r31, 0x00	; 0
    11b6:	8a 81       	ldd	r24, Y+2	; 0x02
    11b8:	80 83       	st	Z, r24
			break;
		}
}
    11ba:	0f 90       	pop	r0
    11bc:	0f 90       	pop	r0
    11be:	0f 90       	pop	r0
    11c0:	0f 90       	pop	r0
    11c2:	cf 91       	pop	r28
    11c4:	df 91       	pop	r29
    11c6:	08 95       	ret

000011c8 <LCD_voidSendData>:
#include "LCD_interface.h"



void LCD_voidSendData(u8 Copy_u8Data)
{
    11c8:	df 93       	push	r29
    11ca:	cf 93       	push	r28
    11cc:	cd b7       	in	r28, 0x3d	; 61
    11ce:	de b7       	in	r29, 0x3e	; 62
    11d0:	60 97       	sbiw	r28, 0x10	; 16
    11d2:	0f b6       	in	r0, 0x3f	; 63
    11d4:	f8 94       	cli
    11d6:	de bf       	out	0x3e, r29	; 62
    11d8:	0f be       	out	0x3f, r0	; 63
    11da:	cd bf       	out	0x3d, r28	; 61
    11dc:	88 8b       	std	Y+16, r24	; 0x10
	DIO_voidSetPinValue(LCD_RS_PORT,LCD_RS_PIN ,HIGH);//Send data
    11de:	83 e0       	ldi	r24, 0x03	; 3
    11e0:	60 e0       	ldi	r22, 0x00	; 0
    11e2:	41 e0       	ldi	r20, 0x01	; 1
    11e4:	0e 94 d3 06 	call	0xda6	; 0xda6 <DIO_voidSetPinValue>
   DIO_voidSetPinValue(LCD_RW_PORT,LCD_RW_PIN ,LOW);//Write
    11e8:	83 e0       	ldi	r24, 0x03	; 3
    11ea:	61 e0       	ldi	r22, 0x01	; 1
    11ec:	40 e0       	ldi	r20, 0x00	; 0
    11ee:	0e 94 d3 06 	call	0xda6	; 0xda6 <DIO_voidSetPinValue>
   for(u8 i=0;i<8;i++)
    11f2:	1f 86       	std	Y+15, r1	; 0x0f
    11f4:	17 c0       	rjmp	.+46     	; 0x1224 <LCD_voidSendData+0x5c>
   {
	   DIO_voidSetPinValue(LCD_DATA_PORT,i,GET_BIT(Copy_u8Data,i));
    11f6:	88 89       	ldd	r24, Y+16	; 0x10
    11f8:	28 2f       	mov	r18, r24
    11fa:	30 e0       	ldi	r19, 0x00	; 0
    11fc:	8f 85       	ldd	r24, Y+15	; 0x0f
    11fe:	88 2f       	mov	r24, r24
    1200:	90 e0       	ldi	r25, 0x00	; 0
    1202:	a9 01       	movw	r20, r18
    1204:	02 c0       	rjmp	.+4      	; 0x120a <LCD_voidSendData+0x42>
    1206:	55 95       	asr	r21
    1208:	47 95       	ror	r20
    120a:	8a 95       	dec	r24
    120c:	e2 f7       	brpl	.-8      	; 0x1206 <LCD_voidSendData+0x3e>
    120e:	ca 01       	movw	r24, r20
    1210:	98 2f       	mov	r25, r24
    1212:	91 70       	andi	r25, 0x01	; 1
    1214:	82 e0       	ldi	r24, 0x02	; 2
    1216:	6f 85       	ldd	r22, Y+15	; 0x0f
    1218:	49 2f       	mov	r20, r25
    121a:	0e 94 d3 06 	call	0xda6	; 0xda6 <DIO_voidSetPinValue>

void LCD_voidSendData(u8 Copy_u8Data)
{
	DIO_voidSetPinValue(LCD_RS_PORT,LCD_RS_PIN ,HIGH);//Send data
   DIO_voidSetPinValue(LCD_RW_PORT,LCD_RW_PIN ,LOW);//Write
   for(u8 i=0;i<8;i++)
    121e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1220:	8f 5f       	subi	r24, 0xFF	; 255
    1222:	8f 87       	std	Y+15, r24	; 0x0f
    1224:	8f 85       	ldd	r24, Y+15	; 0x0f
    1226:	88 30       	cpi	r24, 0x08	; 8
    1228:	30 f3       	brcs	.-52     	; 0x11f6 <LCD_voidSendData+0x2e>
   {
	   DIO_voidSetPinValue(LCD_DATA_PORT,i,GET_BIT(Copy_u8Data,i));
   }
  DIO_voidSetPinValue(LCD_EN_PORT,LCD_EN_PIN,HIGH);
    122a:	83 e0       	ldi	r24, 0x03	; 3
    122c:	62 e0       	ldi	r22, 0x02	; 2
    122e:	41 e0       	ldi	r20, 0x01	; 1
    1230:	0e 94 d3 06 	call	0xda6	; 0xda6 <DIO_voidSetPinValue>
    1234:	80 e0       	ldi	r24, 0x00	; 0
    1236:	90 e0       	ldi	r25, 0x00	; 0
    1238:	a0 e0       	ldi	r26, 0x00	; 0
    123a:	b0 e4       	ldi	r27, 0x40	; 64
    123c:	8b 87       	std	Y+11, r24	; 0x0b
    123e:	9c 87       	std	Y+12, r25	; 0x0c
    1240:	ad 87       	std	Y+13, r26	; 0x0d
    1242:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1244:	6b 85       	ldd	r22, Y+11	; 0x0b
    1246:	7c 85       	ldd	r23, Y+12	; 0x0c
    1248:	8d 85       	ldd	r24, Y+13	; 0x0d
    124a:	9e 85       	ldd	r25, Y+14	; 0x0e
    124c:	20 e0       	ldi	r18, 0x00	; 0
    124e:	30 e0       	ldi	r19, 0x00	; 0
    1250:	4a ef       	ldi	r20, 0xFA	; 250
    1252:	54 e4       	ldi	r21, 0x44	; 68
    1254:	0e 94 1d 02 	call	0x43a	; 0x43a <__mulsf3>
    1258:	dc 01       	movw	r26, r24
    125a:	cb 01       	movw	r24, r22
    125c:	8f 83       	std	Y+7, r24	; 0x07
    125e:	98 87       	std	Y+8, r25	; 0x08
    1260:	a9 87       	std	Y+9, r26	; 0x09
    1262:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1264:	6f 81       	ldd	r22, Y+7	; 0x07
    1266:	78 85       	ldd	r23, Y+8	; 0x08
    1268:	89 85       	ldd	r24, Y+9	; 0x09
    126a:	9a 85       	ldd	r25, Y+10	; 0x0a
    126c:	20 e0       	ldi	r18, 0x00	; 0
    126e:	30 e0       	ldi	r19, 0x00	; 0
    1270:	40 e8       	ldi	r20, 0x80	; 128
    1272:	5f e3       	ldi	r21, 0x3F	; 63
    1274:	0e 94 77 03 	call	0x6ee	; 0x6ee <__ltsf2>
    1278:	88 23       	and	r24, r24
    127a:	2c f4       	brge	.+10     	; 0x1286 <LCD_voidSendData+0xbe>
		__ticks = 1;
    127c:	81 e0       	ldi	r24, 0x01	; 1
    127e:	90 e0       	ldi	r25, 0x00	; 0
    1280:	9e 83       	std	Y+6, r25	; 0x06
    1282:	8d 83       	std	Y+5, r24	; 0x05
    1284:	3f c0       	rjmp	.+126    	; 0x1304 <LCD_voidSendData+0x13c>
	else if (__tmp > 65535)
    1286:	6f 81       	ldd	r22, Y+7	; 0x07
    1288:	78 85       	ldd	r23, Y+8	; 0x08
    128a:	89 85       	ldd	r24, Y+9	; 0x09
    128c:	9a 85       	ldd	r25, Y+10	; 0x0a
    128e:	20 e0       	ldi	r18, 0x00	; 0
    1290:	3f ef       	ldi	r19, 0xFF	; 255
    1292:	4f e7       	ldi	r20, 0x7F	; 127
    1294:	57 e4       	ldi	r21, 0x47	; 71
    1296:	0e 94 17 03 	call	0x62e	; 0x62e <__gtsf2>
    129a:	18 16       	cp	r1, r24
    129c:	4c f5       	brge	.+82     	; 0x12f0 <LCD_voidSendData+0x128>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    129e:	6b 85       	ldd	r22, Y+11	; 0x0b
    12a0:	7c 85       	ldd	r23, Y+12	; 0x0c
    12a2:	8d 85       	ldd	r24, Y+13	; 0x0d
    12a4:	9e 85       	ldd	r25, Y+14	; 0x0e
    12a6:	20 e0       	ldi	r18, 0x00	; 0
    12a8:	30 e0       	ldi	r19, 0x00	; 0
    12aa:	40 e2       	ldi	r20, 0x20	; 32
    12ac:	51 e4       	ldi	r21, 0x41	; 65
    12ae:	0e 94 1d 02 	call	0x43a	; 0x43a <__mulsf3>
    12b2:	dc 01       	movw	r26, r24
    12b4:	cb 01       	movw	r24, r22
    12b6:	bc 01       	movw	r22, r24
    12b8:	cd 01       	movw	r24, r26
    12ba:	0e 94 47 00 	call	0x8e	; 0x8e <__fixunssfsi>
    12be:	dc 01       	movw	r26, r24
    12c0:	cb 01       	movw	r24, r22
    12c2:	9e 83       	std	Y+6, r25	; 0x06
    12c4:	8d 83       	std	Y+5, r24	; 0x05
    12c6:	0f c0       	rjmp	.+30     	; 0x12e6 <LCD_voidSendData+0x11e>
    12c8:	88 ec       	ldi	r24, 0xC8	; 200
    12ca:	90 e0       	ldi	r25, 0x00	; 0
    12cc:	9c 83       	std	Y+4, r25	; 0x04
    12ce:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    12d0:	8b 81       	ldd	r24, Y+3	; 0x03
    12d2:	9c 81       	ldd	r25, Y+4	; 0x04
    12d4:	01 97       	sbiw	r24, 0x01	; 1
    12d6:	f1 f7       	brne	.-4      	; 0x12d4 <LCD_voidSendData+0x10c>
    12d8:	9c 83       	std	Y+4, r25	; 0x04
    12da:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12dc:	8d 81       	ldd	r24, Y+5	; 0x05
    12de:	9e 81       	ldd	r25, Y+6	; 0x06
    12e0:	01 97       	sbiw	r24, 0x01	; 1
    12e2:	9e 83       	std	Y+6, r25	; 0x06
    12e4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    12e6:	8d 81       	ldd	r24, Y+5	; 0x05
    12e8:	9e 81       	ldd	r25, Y+6	; 0x06
    12ea:	00 97       	sbiw	r24, 0x00	; 0
    12ec:	69 f7       	brne	.-38     	; 0x12c8 <LCD_voidSendData+0x100>
    12ee:	14 c0       	rjmp	.+40     	; 0x1318 <LCD_voidSendData+0x150>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    12f0:	6f 81       	ldd	r22, Y+7	; 0x07
    12f2:	78 85       	ldd	r23, Y+8	; 0x08
    12f4:	89 85       	ldd	r24, Y+9	; 0x09
    12f6:	9a 85       	ldd	r25, Y+10	; 0x0a
    12f8:	0e 94 47 00 	call	0x8e	; 0x8e <__fixunssfsi>
    12fc:	dc 01       	movw	r26, r24
    12fe:	cb 01       	movw	r24, r22
    1300:	9e 83       	std	Y+6, r25	; 0x06
    1302:	8d 83       	std	Y+5, r24	; 0x05
    1304:	8d 81       	ldd	r24, Y+5	; 0x05
    1306:	9e 81       	ldd	r25, Y+6	; 0x06
    1308:	9a 83       	std	Y+2, r25	; 0x02
    130a:	89 83       	std	Y+1, r24	; 0x01
    130c:	89 81       	ldd	r24, Y+1	; 0x01
    130e:	9a 81       	ldd	r25, Y+2	; 0x02
    1310:	01 97       	sbiw	r24, 0x01	; 1
    1312:	f1 f7       	brne	.-4      	; 0x1310 <LCD_voidSendData+0x148>
    1314:	9a 83       	std	Y+2, r25	; 0x02
    1316:	89 83       	std	Y+1, r24	; 0x01
  _delay_ms(2);
  DIO_voidSetPinValue(LCD_EN_PORT,LCD_EN_PIN,LOW);
    1318:	83 e0       	ldi	r24, 0x03	; 3
    131a:	62 e0       	ldi	r22, 0x02	; 2
    131c:	40 e0       	ldi	r20, 0x00	; 0
    131e:	0e 94 d3 06 	call	0xda6	; 0xda6 <DIO_voidSetPinValue>

}
    1322:	60 96       	adiw	r28, 0x10	; 16
    1324:	0f b6       	in	r0, 0x3f	; 63
    1326:	f8 94       	cli
    1328:	de bf       	out	0x3e, r29	; 62
    132a:	0f be       	out	0x3f, r0	; 63
    132c:	cd bf       	out	0x3d, r28	; 61
    132e:	cf 91       	pop	r28
    1330:	df 91       	pop	r29
    1332:	08 95       	ret

00001334 <LCD_voidSendCommand>:


void LCD_voidSendCommand(u8 Copy_u8Command)
{
    1334:	df 93       	push	r29
    1336:	cf 93       	push	r28
    1338:	cd b7       	in	r28, 0x3d	; 61
    133a:	de b7       	in	r29, 0x3e	; 62
    133c:	60 97       	sbiw	r28, 0x10	; 16
    133e:	0f b6       	in	r0, 0x3f	; 63
    1340:	f8 94       	cli
    1342:	de bf       	out	0x3e, r29	; 62
    1344:	0f be       	out	0x3f, r0	; 63
    1346:	cd bf       	out	0x3d, r28	; 61
    1348:	88 8b       	std	Y+16, r24	; 0x10
	 DIO_voidSetPinValue(LCD_RS_PORT,LCD_RS_PIN ,LOW);//Send Command
    134a:	83 e0       	ldi	r24, 0x03	; 3
    134c:	60 e0       	ldi	r22, 0x00	; 0
    134e:	40 e0       	ldi	r20, 0x00	; 0
    1350:	0e 94 d3 06 	call	0xda6	; 0xda6 <DIO_voidSetPinValue>
	   DIO_voidSetPinValue(LCD_RW_PORT,LCD_RW_PIN ,LOW);//Write
    1354:	83 e0       	ldi	r24, 0x03	; 3
    1356:	61 e0       	ldi	r22, 0x01	; 1
    1358:	40 e0       	ldi	r20, 0x00	; 0
    135a:	0e 94 d3 06 	call	0xda6	; 0xda6 <DIO_voidSetPinValue>
	   for(u8 i=0;i<8;i++)
    135e:	1f 86       	std	Y+15, r1	; 0x0f
    1360:	17 c0       	rjmp	.+46     	; 0x1390 <LCD_voidSendCommand+0x5c>
	   {
		   DIO_voidSetPinValue(LCD_DATA_PORT,i,GET_BIT(Copy_u8Command,i));
    1362:	88 89       	ldd	r24, Y+16	; 0x10
    1364:	28 2f       	mov	r18, r24
    1366:	30 e0       	ldi	r19, 0x00	; 0
    1368:	8f 85       	ldd	r24, Y+15	; 0x0f
    136a:	88 2f       	mov	r24, r24
    136c:	90 e0       	ldi	r25, 0x00	; 0
    136e:	a9 01       	movw	r20, r18
    1370:	02 c0       	rjmp	.+4      	; 0x1376 <LCD_voidSendCommand+0x42>
    1372:	55 95       	asr	r21
    1374:	47 95       	ror	r20
    1376:	8a 95       	dec	r24
    1378:	e2 f7       	brpl	.-8      	; 0x1372 <LCD_voidSendCommand+0x3e>
    137a:	ca 01       	movw	r24, r20
    137c:	98 2f       	mov	r25, r24
    137e:	91 70       	andi	r25, 0x01	; 1
    1380:	82 e0       	ldi	r24, 0x02	; 2
    1382:	6f 85       	ldd	r22, Y+15	; 0x0f
    1384:	49 2f       	mov	r20, r25
    1386:	0e 94 d3 06 	call	0xda6	; 0xda6 <DIO_voidSetPinValue>

void LCD_voidSendCommand(u8 Copy_u8Command)
{
	 DIO_voidSetPinValue(LCD_RS_PORT,LCD_RS_PIN ,LOW);//Send Command
	   DIO_voidSetPinValue(LCD_RW_PORT,LCD_RW_PIN ,LOW);//Write
	   for(u8 i=0;i<8;i++)
    138a:	8f 85       	ldd	r24, Y+15	; 0x0f
    138c:	8f 5f       	subi	r24, 0xFF	; 255
    138e:	8f 87       	std	Y+15, r24	; 0x0f
    1390:	8f 85       	ldd	r24, Y+15	; 0x0f
    1392:	88 30       	cpi	r24, 0x08	; 8
    1394:	30 f3       	brcs	.-52     	; 0x1362 <LCD_voidSendCommand+0x2e>
	   {
		   DIO_voidSetPinValue(LCD_DATA_PORT,i,GET_BIT(Copy_u8Command,i));
	   }
	  DIO_voidSetPinValue(LCD_EN_PORT,LCD_EN_PIN,HIGH);
    1396:	83 e0       	ldi	r24, 0x03	; 3
    1398:	62 e0       	ldi	r22, 0x02	; 2
    139a:	41 e0       	ldi	r20, 0x01	; 1
    139c:	0e 94 d3 06 	call	0xda6	; 0xda6 <DIO_voidSetPinValue>
    13a0:	80 e0       	ldi	r24, 0x00	; 0
    13a2:	90 e0       	ldi	r25, 0x00	; 0
    13a4:	a0 e0       	ldi	r26, 0x00	; 0
    13a6:	b0 e4       	ldi	r27, 0x40	; 64
    13a8:	8b 87       	std	Y+11, r24	; 0x0b
    13aa:	9c 87       	std	Y+12, r25	; 0x0c
    13ac:	ad 87       	std	Y+13, r26	; 0x0d
    13ae:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    13b0:	6b 85       	ldd	r22, Y+11	; 0x0b
    13b2:	7c 85       	ldd	r23, Y+12	; 0x0c
    13b4:	8d 85       	ldd	r24, Y+13	; 0x0d
    13b6:	9e 85       	ldd	r25, Y+14	; 0x0e
    13b8:	20 e0       	ldi	r18, 0x00	; 0
    13ba:	30 e0       	ldi	r19, 0x00	; 0
    13bc:	4a ef       	ldi	r20, 0xFA	; 250
    13be:	54 e4       	ldi	r21, 0x44	; 68
    13c0:	0e 94 1d 02 	call	0x43a	; 0x43a <__mulsf3>
    13c4:	dc 01       	movw	r26, r24
    13c6:	cb 01       	movw	r24, r22
    13c8:	8f 83       	std	Y+7, r24	; 0x07
    13ca:	98 87       	std	Y+8, r25	; 0x08
    13cc:	a9 87       	std	Y+9, r26	; 0x09
    13ce:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    13d0:	6f 81       	ldd	r22, Y+7	; 0x07
    13d2:	78 85       	ldd	r23, Y+8	; 0x08
    13d4:	89 85       	ldd	r24, Y+9	; 0x09
    13d6:	9a 85       	ldd	r25, Y+10	; 0x0a
    13d8:	20 e0       	ldi	r18, 0x00	; 0
    13da:	30 e0       	ldi	r19, 0x00	; 0
    13dc:	40 e8       	ldi	r20, 0x80	; 128
    13de:	5f e3       	ldi	r21, 0x3F	; 63
    13e0:	0e 94 77 03 	call	0x6ee	; 0x6ee <__ltsf2>
    13e4:	88 23       	and	r24, r24
    13e6:	2c f4       	brge	.+10     	; 0x13f2 <LCD_voidSendCommand+0xbe>
		__ticks = 1;
    13e8:	81 e0       	ldi	r24, 0x01	; 1
    13ea:	90 e0       	ldi	r25, 0x00	; 0
    13ec:	9e 83       	std	Y+6, r25	; 0x06
    13ee:	8d 83       	std	Y+5, r24	; 0x05
    13f0:	3f c0       	rjmp	.+126    	; 0x1470 <LCD_voidSendCommand+0x13c>
	else if (__tmp > 65535)
    13f2:	6f 81       	ldd	r22, Y+7	; 0x07
    13f4:	78 85       	ldd	r23, Y+8	; 0x08
    13f6:	89 85       	ldd	r24, Y+9	; 0x09
    13f8:	9a 85       	ldd	r25, Y+10	; 0x0a
    13fa:	20 e0       	ldi	r18, 0x00	; 0
    13fc:	3f ef       	ldi	r19, 0xFF	; 255
    13fe:	4f e7       	ldi	r20, 0x7F	; 127
    1400:	57 e4       	ldi	r21, 0x47	; 71
    1402:	0e 94 17 03 	call	0x62e	; 0x62e <__gtsf2>
    1406:	18 16       	cp	r1, r24
    1408:	4c f5       	brge	.+82     	; 0x145c <LCD_voidSendCommand+0x128>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    140a:	6b 85       	ldd	r22, Y+11	; 0x0b
    140c:	7c 85       	ldd	r23, Y+12	; 0x0c
    140e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1410:	9e 85       	ldd	r25, Y+14	; 0x0e
    1412:	20 e0       	ldi	r18, 0x00	; 0
    1414:	30 e0       	ldi	r19, 0x00	; 0
    1416:	40 e2       	ldi	r20, 0x20	; 32
    1418:	51 e4       	ldi	r21, 0x41	; 65
    141a:	0e 94 1d 02 	call	0x43a	; 0x43a <__mulsf3>
    141e:	dc 01       	movw	r26, r24
    1420:	cb 01       	movw	r24, r22
    1422:	bc 01       	movw	r22, r24
    1424:	cd 01       	movw	r24, r26
    1426:	0e 94 47 00 	call	0x8e	; 0x8e <__fixunssfsi>
    142a:	dc 01       	movw	r26, r24
    142c:	cb 01       	movw	r24, r22
    142e:	9e 83       	std	Y+6, r25	; 0x06
    1430:	8d 83       	std	Y+5, r24	; 0x05
    1432:	0f c0       	rjmp	.+30     	; 0x1452 <LCD_voidSendCommand+0x11e>
    1434:	88 ec       	ldi	r24, 0xC8	; 200
    1436:	90 e0       	ldi	r25, 0x00	; 0
    1438:	9c 83       	std	Y+4, r25	; 0x04
    143a:	8b 83       	std	Y+3, r24	; 0x03
    143c:	8b 81       	ldd	r24, Y+3	; 0x03
    143e:	9c 81       	ldd	r25, Y+4	; 0x04
    1440:	01 97       	sbiw	r24, 0x01	; 1
    1442:	f1 f7       	brne	.-4      	; 0x1440 <LCD_voidSendCommand+0x10c>
    1444:	9c 83       	std	Y+4, r25	; 0x04
    1446:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1448:	8d 81       	ldd	r24, Y+5	; 0x05
    144a:	9e 81       	ldd	r25, Y+6	; 0x06
    144c:	01 97       	sbiw	r24, 0x01	; 1
    144e:	9e 83       	std	Y+6, r25	; 0x06
    1450:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1452:	8d 81       	ldd	r24, Y+5	; 0x05
    1454:	9e 81       	ldd	r25, Y+6	; 0x06
    1456:	00 97       	sbiw	r24, 0x00	; 0
    1458:	69 f7       	brne	.-38     	; 0x1434 <LCD_voidSendCommand+0x100>
    145a:	14 c0       	rjmp	.+40     	; 0x1484 <LCD_voidSendCommand+0x150>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    145c:	6f 81       	ldd	r22, Y+7	; 0x07
    145e:	78 85       	ldd	r23, Y+8	; 0x08
    1460:	89 85       	ldd	r24, Y+9	; 0x09
    1462:	9a 85       	ldd	r25, Y+10	; 0x0a
    1464:	0e 94 47 00 	call	0x8e	; 0x8e <__fixunssfsi>
    1468:	dc 01       	movw	r26, r24
    146a:	cb 01       	movw	r24, r22
    146c:	9e 83       	std	Y+6, r25	; 0x06
    146e:	8d 83       	std	Y+5, r24	; 0x05
    1470:	8d 81       	ldd	r24, Y+5	; 0x05
    1472:	9e 81       	ldd	r25, Y+6	; 0x06
    1474:	9a 83       	std	Y+2, r25	; 0x02
    1476:	89 83       	std	Y+1, r24	; 0x01
    1478:	89 81       	ldd	r24, Y+1	; 0x01
    147a:	9a 81       	ldd	r25, Y+2	; 0x02
    147c:	01 97       	sbiw	r24, 0x01	; 1
    147e:	f1 f7       	brne	.-4      	; 0x147c <LCD_voidSendCommand+0x148>
    1480:	9a 83       	std	Y+2, r25	; 0x02
    1482:	89 83       	std	Y+1, r24	; 0x01
	  _delay_ms(2);
	  DIO_voidSetPinValue(LCD_EN_PORT,LCD_EN_PIN,LOW);
    1484:	83 e0       	ldi	r24, 0x03	; 3
    1486:	62 e0       	ldi	r22, 0x02	; 2
    1488:	40 e0       	ldi	r20, 0x00	; 0
    148a:	0e 94 d3 06 	call	0xda6	; 0xda6 <DIO_voidSetPinValue>

}
    148e:	60 96       	adiw	r28, 0x10	; 16
    1490:	0f b6       	in	r0, 0x3f	; 63
    1492:	f8 94       	cli
    1494:	de bf       	out	0x3e, r29	; 62
    1496:	0f be       	out	0x3f, r0	; 63
    1498:	cd bf       	out	0x3d, r28	; 61
    149a:	cf 91       	pop	r28
    149c:	df 91       	pop	r29
    149e:	08 95       	ret

000014a0 <LCD_voidInit>:

void LCD_voidInit(void)
{
    14a0:	df 93       	push	r29
    14a2:	cf 93       	push	r28
    14a4:	cd b7       	in	r28, 0x3d	; 61
    14a6:	de b7       	in	r29, 0x3e	; 62
    14a8:	2f 97       	sbiw	r28, 0x0f	; 15
    14aa:	0f b6       	in	r0, 0x3f	; 63
    14ac:	f8 94       	cli
    14ae:	de bf       	out	0x3e, r29	; 62
    14b0:	0f be       	out	0x3f, r0	; 63
    14b2:	cd bf       	out	0x3d, r28	; 61
	for(u8 i=0;i<8;i++)
    14b4:	1f 86       	std	Y+15, r1	; 0x0f
    14b6:	08 c0       	rjmp	.+16     	; 0x14c8 <LCD_voidInit+0x28>
	{
		DIO_voidSetPinDirection(LCD_DATA_PORT,i,OUTPUT);
    14b8:	82 e0       	ldi	r24, 0x02	; 2
    14ba:	6f 85       	ldd	r22, Y+15	; 0x0f
    14bc:	41 e0       	ldi	r20, 0x01	; 1
    14be:	0e 94 bd 05 	call	0xb7a	; 0xb7a <DIO_voidSetPinDirection>

}

void LCD_voidInit(void)
{
	for(u8 i=0;i<8;i++)
    14c2:	8f 85       	ldd	r24, Y+15	; 0x0f
    14c4:	8f 5f       	subi	r24, 0xFF	; 255
    14c6:	8f 87       	std	Y+15, r24	; 0x0f
    14c8:	8f 85       	ldd	r24, Y+15	; 0x0f
    14ca:	88 30       	cpi	r24, 0x08	; 8
    14cc:	a8 f3       	brcs	.-22     	; 0x14b8 <LCD_voidInit+0x18>
	{
		DIO_voidSetPinDirection(LCD_DATA_PORT,i,OUTPUT);
	}

	DIO_voidSetPinDirection(LCD_RS_PORT,LCD_RS_PIN,OUTPUT);
    14ce:	83 e0       	ldi	r24, 0x03	; 3
    14d0:	60 e0       	ldi	r22, 0x00	; 0
    14d2:	41 e0       	ldi	r20, 0x01	; 1
    14d4:	0e 94 bd 05 	call	0xb7a	; 0xb7a <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(LCD_RW_PORT,LCD_RW_PIN,OUTPUT);
    14d8:	83 e0       	ldi	r24, 0x03	; 3
    14da:	61 e0       	ldi	r22, 0x01	; 1
    14dc:	41 e0       	ldi	r20, 0x01	; 1
    14de:	0e 94 bd 05 	call	0xb7a	; 0xb7a <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(LCD_EN_PORT,LCD_EN_PIN,OUTPUT);
    14e2:	83 e0       	ldi	r24, 0x03	; 3
    14e4:	62 e0       	ldi	r22, 0x02	; 2
    14e6:	41 e0       	ldi	r20, 0x01	; 1
    14e8:	0e 94 bd 05 	call	0xb7a	; 0xb7a <DIO_voidSetPinDirection>
    14ec:	80 e0       	ldi	r24, 0x00	; 0
    14ee:	90 e0       	ldi	r25, 0x00	; 0
    14f0:	a0 e2       	ldi	r26, 0x20	; 32
    14f2:	b2 e4       	ldi	r27, 0x42	; 66
    14f4:	8b 87       	std	Y+11, r24	; 0x0b
    14f6:	9c 87       	std	Y+12, r25	; 0x0c
    14f8:	ad 87       	std	Y+13, r26	; 0x0d
    14fa:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14fc:	6b 85       	ldd	r22, Y+11	; 0x0b
    14fe:	7c 85       	ldd	r23, Y+12	; 0x0c
    1500:	8d 85       	ldd	r24, Y+13	; 0x0d
    1502:	9e 85       	ldd	r25, Y+14	; 0x0e
    1504:	20 e0       	ldi	r18, 0x00	; 0
    1506:	30 e0       	ldi	r19, 0x00	; 0
    1508:	4a ef       	ldi	r20, 0xFA	; 250
    150a:	54 e4       	ldi	r21, 0x44	; 68
    150c:	0e 94 1d 02 	call	0x43a	; 0x43a <__mulsf3>
    1510:	dc 01       	movw	r26, r24
    1512:	cb 01       	movw	r24, r22
    1514:	8f 83       	std	Y+7, r24	; 0x07
    1516:	98 87       	std	Y+8, r25	; 0x08
    1518:	a9 87       	std	Y+9, r26	; 0x09
    151a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    151c:	6f 81       	ldd	r22, Y+7	; 0x07
    151e:	78 85       	ldd	r23, Y+8	; 0x08
    1520:	89 85       	ldd	r24, Y+9	; 0x09
    1522:	9a 85       	ldd	r25, Y+10	; 0x0a
    1524:	20 e0       	ldi	r18, 0x00	; 0
    1526:	30 e0       	ldi	r19, 0x00	; 0
    1528:	40 e8       	ldi	r20, 0x80	; 128
    152a:	5f e3       	ldi	r21, 0x3F	; 63
    152c:	0e 94 77 03 	call	0x6ee	; 0x6ee <__ltsf2>
    1530:	88 23       	and	r24, r24
    1532:	2c f4       	brge	.+10     	; 0x153e <LCD_voidInit+0x9e>
		__ticks = 1;
    1534:	81 e0       	ldi	r24, 0x01	; 1
    1536:	90 e0       	ldi	r25, 0x00	; 0
    1538:	9e 83       	std	Y+6, r25	; 0x06
    153a:	8d 83       	std	Y+5, r24	; 0x05
    153c:	3f c0       	rjmp	.+126    	; 0x15bc <LCD_voidInit+0x11c>
	else if (__tmp > 65535)
    153e:	6f 81       	ldd	r22, Y+7	; 0x07
    1540:	78 85       	ldd	r23, Y+8	; 0x08
    1542:	89 85       	ldd	r24, Y+9	; 0x09
    1544:	9a 85       	ldd	r25, Y+10	; 0x0a
    1546:	20 e0       	ldi	r18, 0x00	; 0
    1548:	3f ef       	ldi	r19, 0xFF	; 255
    154a:	4f e7       	ldi	r20, 0x7F	; 127
    154c:	57 e4       	ldi	r21, 0x47	; 71
    154e:	0e 94 17 03 	call	0x62e	; 0x62e <__gtsf2>
    1552:	18 16       	cp	r1, r24
    1554:	4c f5       	brge	.+82     	; 0x15a8 <LCD_voidInit+0x108>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1556:	6b 85       	ldd	r22, Y+11	; 0x0b
    1558:	7c 85       	ldd	r23, Y+12	; 0x0c
    155a:	8d 85       	ldd	r24, Y+13	; 0x0d
    155c:	9e 85       	ldd	r25, Y+14	; 0x0e
    155e:	20 e0       	ldi	r18, 0x00	; 0
    1560:	30 e0       	ldi	r19, 0x00	; 0
    1562:	40 e2       	ldi	r20, 0x20	; 32
    1564:	51 e4       	ldi	r21, 0x41	; 65
    1566:	0e 94 1d 02 	call	0x43a	; 0x43a <__mulsf3>
    156a:	dc 01       	movw	r26, r24
    156c:	cb 01       	movw	r24, r22
    156e:	bc 01       	movw	r22, r24
    1570:	cd 01       	movw	r24, r26
    1572:	0e 94 47 00 	call	0x8e	; 0x8e <__fixunssfsi>
    1576:	dc 01       	movw	r26, r24
    1578:	cb 01       	movw	r24, r22
    157a:	9e 83       	std	Y+6, r25	; 0x06
    157c:	8d 83       	std	Y+5, r24	; 0x05
    157e:	0f c0       	rjmp	.+30     	; 0x159e <LCD_voidInit+0xfe>
    1580:	88 ec       	ldi	r24, 0xC8	; 200
    1582:	90 e0       	ldi	r25, 0x00	; 0
    1584:	9c 83       	std	Y+4, r25	; 0x04
    1586:	8b 83       	std	Y+3, r24	; 0x03
    1588:	8b 81       	ldd	r24, Y+3	; 0x03
    158a:	9c 81       	ldd	r25, Y+4	; 0x04
    158c:	01 97       	sbiw	r24, 0x01	; 1
    158e:	f1 f7       	brne	.-4      	; 0x158c <LCD_voidInit+0xec>
    1590:	9c 83       	std	Y+4, r25	; 0x04
    1592:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1594:	8d 81       	ldd	r24, Y+5	; 0x05
    1596:	9e 81       	ldd	r25, Y+6	; 0x06
    1598:	01 97       	sbiw	r24, 0x01	; 1
    159a:	9e 83       	std	Y+6, r25	; 0x06
    159c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    159e:	8d 81       	ldd	r24, Y+5	; 0x05
    15a0:	9e 81       	ldd	r25, Y+6	; 0x06
    15a2:	00 97       	sbiw	r24, 0x00	; 0
    15a4:	69 f7       	brne	.-38     	; 0x1580 <LCD_voidInit+0xe0>
    15a6:	14 c0       	rjmp	.+40     	; 0x15d0 <LCD_voidInit+0x130>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15a8:	6f 81       	ldd	r22, Y+7	; 0x07
    15aa:	78 85       	ldd	r23, Y+8	; 0x08
    15ac:	89 85       	ldd	r24, Y+9	; 0x09
    15ae:	9a 85       	ldd	r25, Y+10	; 0x0a
    15b0:	0e 94 47 00 	call	0x8e	; 0x8e <__fixunssfsi>
    15b4:	dc 01       	movw	r26, r24
    15b6:	cb 01       	movw	r24, r22
    15b8:	9e 83       	std	Y+6, r25	; 0x06
    15ba:	8d 83       	std	Y+5, r24	; 0x05
    15bc:	8d 81       	ldd	r24, Y+5	; 0x05
    15be:	9e 81       	ldd	r25, Y+6	; 0x06
    15c0:	9a 83       	std	Y+2, r25	; 0x02
    15c2:	89 83       	std	Y+1, r24	; 0x01
    15c4:	89 81       	ldd	r24, Y+1	; 0x01
    15c6:	9a 81       	ldd	r25, Y+2	; 0x02
    15c8:	01 97       	sbiw	r24, 0x01	; 1
    15ca:	f1 f7       	brne	.-4      	; 0x15c8 <LCD_voidInit+0x128>
    15cc:	9a 83       	std	Y+2, r25	; 0x02
    15ce:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(40);
   LCD_voidSendCommand(0b00111000);
    15d0:	88 e3       	ldi	r24, 0x38	; 56
    15d2:	0e 94 9a 09 	call	0x1334	; 0x1334 <LCD_voidSendCommand>
   LCD_voidSendCommand(0b00001100);
    15d6:	8c e0       	ldi	r24, 0x0C	; 12
    15d8:	0e 94 9a 09 	call	0x1334	; 0x1334 <LCD_voidSendCommand>
   LCD_voidSendCommand(0b00000001);
    15dc:	81 e0       	ldi	r24, 0x01	; 1
    15de:	0e 94 9a 09 	call	0x1334	; 0x1334 <LCD_voidSendCommand>
}
    15e2:	2f 96       	adiw	r28, 0x0f	; 15
    15e4:	0f b6       	in	r0, 0x3f	; 63
    15e6:	f8 94       	cli
    15e8:	de bf       	out	0x3e, r29	; 62
    15ea:	0f be       	out	0x3f, r0	; 63
    15ec:	cd bf       	out	0x3d, r28	; 61
    15ee:	cf 91       	pop	r28
    15f0:	df 91       	pop	r29
    15f2:	08 95       	ret

000015f4 <LCD_voidClearDisplay>:

void LCD_voidClearDisplay(void)
{
    15f4:	df 93       	push	r29
    15f6:	cf 93       	push	r28
    15f8:	cd b7       	in	r28, 0x3d	; 61
    15fa:	de b7       	in	r29, 0x3e	; 62
	 LCD_voidSendCommand(0b00000001);
    15fc:	81 e0       	ldi	r24, 0x01	; 1
    15fe:	0e 94 9a 09 	call	0x1334	; 0x1334 <LCD_voidSendCommand>
}
    1602:	cf 91       	pop	r28
    1604:	df 91       	pop	r29
    1606:	08 95       	ret

00001608 <LCD_GotoXY>:
 * at x=0   address=y position
 * at x=1    address=y+0x40
 */

void LCD_GotoXY(u8 Copy_u8X,u8 Copy_u8Y)
{
    1608:	df 93       	push	r29
    160a:	cf 93       	push	r28
    160c:	00 d0       	rcall	.+0      	; 0x160e <LCD_GotoXY+0x6>
    160e:	0f 92       	push	r0
    1610:	cd b7       	in	r28, 0x3d	; 61
    1612:	de b7       	in	r29, 0x3e	; 62
    1614:	8a 83       	std	Y+2, r24	; 0x02
    1616:	6b 83       	std	Y+3, r22	; 0x03

	u8 Local_u8Address=0;
    1618:	19 82       	std	Y+1, r1	; 0x01
	if( Copy_u8X==0)
    161a:	8a 81       	ldd	r24, Y+2	; 0x02
    161c:	88 23       	and	r24, r24
    161e:	19 f4       	brne	.+6      	; 0x1626 <LCD_GotoXY+0x1e>
	{
		Local_u8Address= Copy_u8Y;
    1620:	8b 81       	ldd	r24, Y+3	; 0x03
    1622:	89 83       	std	Y+1, r24	; 0x01
    1624:	03 c0       	rjmp	.+6      	; 0x162c <LCD_GotoXY+0x24>
	}
	else
	{
		Local_u8Address= Copy_u8Y+0x40;
    1626:	8b 81       	ldd	r24, Y+3	; 0x03
    1628:	80 5c       	subi	r24, 0xC0	; 192
    162a:	89 83       	std	Y+1, r24	; 0x01
	}

	SET_BIT(Local_u8Address,7);
    162c:	89 81       	ldd	r24, Y+1	; 0x01
    162e:	80 68       	ori	r24, 0x80	; 128
    1630:	89 83       	std	Y+1, r24	; 0x01
	LCD_voidSendCommand(Local_u8Address);
    1632:	89 81       	ldd	r24, Y+1	; 0x01
    1634:	0e 94 9a 09 	call	0x1334	; 0x1334 <LCD_voidSendCommand>

}
    1638:	0f 90       	pop	r0
    163a:	0f 90       	pop	r0
    163c:	0f 90       	pop	r0
    163e:	cf 91       	pop	r28
    1640:	df 91       	pop	r29
    1642:	08 95       	ret

00001644 <LCD_voidSendString>:
void LCD_voidSendString(u8* Copy_pcString)
{
    1644:	df 93       	push	r29
    1646:	cf 93       	push	r28
    1648:	00 d0       	rcall	.+0      	; 0x164a <LCD_voidSendString+0x6>
    164a:	0f 92       	push	r0
    164c:	cd b7       	in	r28, 0x3d	; 61
    164e:	de b7       	in	r29, 0x3e	; 62
    1650:	9b 83       	std	Y+3, r25	; 0x03
    1652:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8Index=0;
    1654:	19 82       	std	Y+1, r1	; 0x01
    1656:	0e c0       	rjmp	.+28     	; 0x1674 <LCD_voidSendString+0x30>

	while(Copy_pcString[Local_u8Index]!='\0')
	{
		LCD_voidSendData(Copy_pcString[Local_u8Index]);
    1658:	89 81       	ldd	r24, Y+1	; 0x01
    165a:	28 2f       	mov	r18, r24
    165c:	30 e0       	ldi	r19, 0x00	; 0
    165e:	8a 81       	ldd	r24, Y+2	; 0x02
    1660:	9b 81       	ldd	r25, Y+3	; 0x03
    1662:	fc 01       	movw	r30, r24
    1664:	e2 0f       	add	r30, r18
    1666:	f3 1f       	adc	r31, r19
    1668:	80 81       	ld	r24, Z
    166a:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <LCD_voidSendData>
		Local_u8Index++;
    166e:	89 81       	ldd	r24, Y+1	; 0x01
    1670:	8f 5f       	subi	r24, 0xFF	; 255
    1672:	89 83       	std	Y+1, r24	; 0x01
}
void LCD_voidSendString(u8* Copy_pcString)
{
	u8 Local_u8Index=0;

	while(Copy_pcString[Local_u8Index]!='\0')
    1674:	89 81       	ldd	r24, Y+1	; 0x01
    1676:	28 2f       	mov	r18, r24
    1678:	30 e0       	ldi	r19, 0x00	; 0
    167a:	8a 81       	ldd	r24, Y+2	; 0x02
    167c:	9b 81       	ldd	r25, Y+3	; 0x03
    167e:	fc 01       	movw	r30, r24
    1680:	e2 0f       	add	r30, r18
    1682:	f3 1f       	adc	r31, r19
    1684:	80 81       	ld	r24, Z
    1686:	88 23       	and	r24, r24
    1688:	39 f7       	brne	.-50     	; 0x1658 <LCD_voidSendString+0x14>
	{
		LCD_voidSendData(Copy_pcString[Local_u8Index]);
		Local_u8Index++;
	}
}
    168a:	0f 90       	pop	r0
    168c:	0f 90       	pop	r0
    168e:	0f 90       	pop	r0
    1690:	cf 91       	pop	r28
    1692:	df 91       	pop	r29
    1694:	08 95       	ret

00001696 <LCD_voidSendNumber>:

void LCD_voidSendNumber(u32 Copy_u32Number)
{
    1696:	df 93       	push	r29
    1698:	cf 93       	push	r28
    169a:	cd b7       	in	r28, 0x3d	; 61
    169c:	de b7       	in	r29, 0x3e	; 62
    169e:	2c 97       	sbiw	r28, 0x0c	; 12
    16a0:	0f b6       	in	r0, 0x3f	; 63
    16a2:	f8 94       	cli
    16a4:	de bf       	out	0x3e, r29	; 62
    16a6:	0f be       	out	0x3f, r0	; 63
    16a8:	cd bf       	out	0x3d, r28	; 61
    16aa:	9c 87       	std	Y+12, r25	; 0x0c
    16ac:	8b 87       	std	Y+11, r24	; 0x0b
   u8 Local_u8Str[10];
   itoa(Copy_u32Number, Local_u8Str,10);
    16ae:	8b 85       	ldd	r24, Y+11	; 0x0b
    16b0:	9c 85       	ldd	r25, Y+12	; 0x0c
    16b2:	9e 01       	movw	r18, r28
    16b4:	2f 5f       	subi	r18, 0xFF	; 255
    16b6:	3f 4f       	sbci	r19, 0xFF	; 255
    16b8:	b9 01       	movw	r22, r18
    16ba:	4a e0       	ldi	r20, 0x0A	; 10
    16bc:	50 e0       	ldi	r21, 0x00	; 0
    16be:	0e 94 98 0e 	call	0x1d30	; 0x1d30 <itoa>
   LCD_voidSendString(Local_u8Str);
    16c2:	ce 01       	movw	r24, r28
    16c4:	01 96       	adiw	r24, 0x01	; 1
    16c6:	0e 94 22 0b 	call	0x1644	; 0x1644 <LCD_voidSendString>

}
    16ca:	2c 96       	adiw	r28, 0x0c	; 12
    16cc:	0f b6       	in	r0, 0x3f	; 63
    16ce:	f8 94       	cli
    16d0:	de bf       	out	0x3e, r29	; 62
    16d2:	0f be       	out	0x3f, r0	; 63
    16d4:	cd bf       	out	0x3d, r28	; 61
    16d6:	cf 91       	pop	r28
    16d8:	df 91       	pop	r29
    16da:	08 95       	ret

000016dc <KPD_voidInit>:

#include "KPD_interface.h"


void KPD_voidInit(void)
{
    16dc:	df 93       	push	r29
    16de:	cf 93       	push	r28
    16e0:	cd b7       	in	r28, 0x3d	; 61
    16e2:	de b7       	in	r29, 0x3e	; 62
	DIO_voidSetPinDirection(KPD_COL_PORT,KPD_COL0_PIN, OUTPUT);
    16e4:	80 e0       	ldi	r24, 0x00	; 0
    16e6:	60 e0       	ldi	r22, 0x00	; 0
    16e8:	41 e0       	ldi	r20, 0x01	; 1
    16ea:	0e 94 bd 05 	call	0xb7a	; 0xb7a <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_COL_PORT,KPD_COL1_PIN, OUTPUT);
    16ee:	80 e0       	ldi	r24, 0x00	; 0
    16f0:	61 e0       	ldi	r22, 0x01	; 1
    16f2:	41 e0       	ldi	r20, 0x01	; 1
    16f4:	0e 94 bd 05 	call	0xb7a	; 0xb7a <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_COL_PORT,KPD_COL2_PIN, OUTPUT);
    16f8:	80 e0       	ldi	r24, 0x00	; 0
    16fa:	62 e0       	ldi	r22, 0x02	; 2
    16fc:	41 e0       	ldi	r20, 0x01	; 1
    16fe:	0e 94 bd 05 	call	0xb7a	; 0xb7a <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_COL_PORT,KPD_COL3_PIN, OUTPUT);
    1702:	80 e0       	ldi	r24, 0x00	; 0
    1704:	63 e0       	ldi	r22, 0x03	; 3
    1706:	41 e0       	ldi	r20, 0x01	; 1
    1708:	0e 94 bd 05 	call	0xb7a	; 0xb7a <DIO_voidSetPinDirection>

	DIO_voidSetPinValue(KPD_COL_PORT,KPD_COL0_PIN, HIGH);
    170c:	80 e0       	ldi	r24, 0x00	; 0
    170e:	60 e0       	ldi	r22, 0x00	; 0
    1710:	41 e0       	ldi	r20, 0x01	; 1
    1712:	0e 94 d3 06 	call	0xda6	; 0xda6 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(KPD_COL_PORT,KPD_COL1_PIN, HIGH);
    1716:	80 e0       	ldi	r24, 0x00	; 0
    1718:	61 e0       	ldi	r22, 0x01	; 1
    171a:	41 e0       	ldi	r20, 0x01	; 1
    171c:	0e 94 d3 06 	call	0xda6	; 0xda6 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(KPD_COL_PORT,KPD_COL2_PIN, HIGH);
    1720:	80 e0       	ldi	r24, 0x00	; 0
    1722:	62 e0       	ldi	r22, 0x02	; 2
    1724:	41 e0       	ldi	r20, 0x01	; 1
    1726:	0e 94 d3 06 	call	0xda6	; 0xda6 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(KPD_COL_PORT,KPD_COL3_PIN, HIGH);
    172a:	80 e0       	ldi	r24, 0x00	; 0
    172c:	63 e0       	ldi	r22, 0x03	; 3
    172e:	41 e0       	ldi	r20, 0x01	; 1
    1730:	0e 94 d3 06 	call	0xda6	; 0xda6 <DIO_voidSetPinValue>



	DIO_voidSetPinDirection(KPD_ROW_PORT,KPD_ROW0_PIN, INPUT);
    1734:	80 e0       	ldi	r24, 0x00	; 0
    1736:	64 e0       	ldi	r22, 0x04	; 4
    1738:	40 e0       	ldi	r20, 0x00	; 0
    173a:	0e 94 bd 05 	call	0xb7a	; 0xb7a <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_ROW_PORT,KPD_ROW1_PIN, INPUT);
    173e:	80 e0       	ldi	r24, 0x00	; 0
    1740:	65 e0       	ldi	r22, 0x05	; 5
    1742:	40 e0       	ldi	r20, 0x00	; 0
    1744:	0e 94 bd 05 	call	0xb7a	; 0xb7a <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_ROW_PORT,KPD_ROW2_PIN, INPUT);
    1748:	80 e0       	ldi	r24, 0x00	; 0
    174a:	66 e0       	ldi	r22, 0x06	; 6
    174c:	40 e0       	ldi	r20, 0x00	; 0
    174e:	0e 94 bd 05 	call	0xb7a	; 0xb7a <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_ROW_PORT,KPD_ROW3_PIN, INPUT);
    1752:	80 e0       	ldi	r24, 0x00	; 0
    1754:	67 e0       	ldi	r22, 0x07	; 7
    1756:	40 e0       	ldi	r20, 0x00	; 0
    1758:	0e 94 bd 05 	call	0xb7a	; 0xb7a <DIO_voidSetPinDirection>

	DIO_voidSetPinValue(KPD_ROW_PORT, KPD_ROW0_PIN, HIGH);
    175c:	80 e0       	ldi	r24, 0x00	; 0
    175e:	64 e0       	ldi	r22, 0x04	; 4
    1760:	41 e0       	ldi	r20, 0x01	; 1
    1762:	0e 94 d3 06 	call	0xda6	; 0xda6 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(KPD_ROW_PORT, KPD_ROW1_PIN, HIGH);
    1766:	80 e0       	ldi	r24, 0x00	; 0
    1768:	65 e0       	ldi	r22, 0x05	; 5
    176a:	41 e0       	ldi	r20, 0x01	; 1
    176c:	0e 94 d3 06 	call	0xda6	; 0xda6 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(KPD_ROW_PORT, KPD_ROW2_PIN, HIGH);
    1770:	80 e0       	ldi	r24, 0x00	; 0
    1772:	66 e0       	ldi	r22, 0x06	; 6
    1774:	41 e0       	ldi	r20, 0x01	; 1
    1776:	0e 94 d3 06 	call	0xda6	; 0xda6 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(KPD_ROW_PORT, KPD_ROW3_PIN, HIGH);
    177a:	80 e0       	ldi	r24, 0x00	; 0
    177c:	67 e0       	ldi	r22, 0x07	; 7
    177e:	41 e0       	ldi	r20, 0x01	; 1
    1780:	0e 94 d3 06 	call	0xda6	; 0xda6 <DIO_voidSetPinValue>

}
    1784:	cf 91       	pop	r28
    1786:	df 91       	pop	r29
    1788:	08 95       	ret

0000178a <KPD_u8GetPressedKey>:
u8 KPD_u8GetPressedKey(void)
{
    178a:	df 93       	push	r29
    178c:	cf 93       	push	r28
    178e:	cd b7       	in	r28, 0x3d	; 61
    1790:	de b7       	in	r29, 0x3e	; 62
    1792:	a2 97       	sbiw	r28, 0x22	; 34
    1794:	0f b6       	in	r0, 0x3f	; 63
    1796:	f8 94       	cli
    1798:	de bf       	out	0x3e, r29	; 62
    179a:	0f be       	out	0x3f, r0	; 63
    179c:	cd bf       	out	0x3d, r28	; 61

	u8 Local_u8PressedKey=0xAA;
    179e:	8a ea       	ldi	r24, 0xAA	; 170
    17a0:	8c 83       	std	Y+4, r24	; 0x04

	u8 Local_u8ColumsArray[4]={KPD_COL0_PIN, KPD_COL1_PIN, KPD_COL2_PIN,KPD_COL3_PIN};
    17a2:	1d 82       	std	Y+5, r1	; 0x05
    17a4:	81 e0       	ldi	r24, 0x01	; 1
    17a6:	8e 83       	std	Y+6, r24	; 0x06
    17a8:	82 e0       	ldi	r24, 0x02	; 2
    17aa:	8f 83       	std	Y+7, r24	; 0x07
    17ac:	83 e0       	ldi	r24, 0x03	; 3
    17ae:	88 87       	std	Y+8, r24	; 0x08
	u8 Local_u8RowsArray[4]={KPD_ROW0_PIN,KPD_ROW1_PIN,KPD_ROW2_PIN,KPD_ROW3_PIN};
    17b0:	84 e0       	ldi	r24, 0x04	; 4
    17b2:	89 87       	std	Y+9, r24	; 0x09
    17b4:	85 e0       	ldi	r24, 0x05	; 5
    17b6:	8a 87       	std	Y+10, r24	; 0x0a
    17b8:	86 e0       	ldi	r24, 0x06	; 6
    17ba:	8b 87       	std	Y+11, r24	; 0x0b
    17bc:	87 e0       	ldi	r24, 0x07	; 7
    17be:	8c 87       	std	Y+12, r24	; 0x0c

	u8 Local_u8KeyArray[4][4]={ {'7', '8', '9', '/'},
            {'4', '5', '6', '*'},
            {'1', '2', '3', '-'},
            {'C', '0', '=', '+'} };
    17c0:	ce 01       	movw	r24, r28
    17c2:	0d 96       	adiw	r24, 0x0d	; 13
    17c4:	9f 8f       	std	Y+31, r25	; 0x1f
    17c6:	8e 8f       	std	Y+30, r24	; 0x1e
    17c8:	e1 e9       	ldi	r30, 0x91	; 145
    17ca:	f0 e0       	ldi	r31, 0x00	; 0
    17cc:	f9 a3       	std	Y+33, r31	; 0x21
    17ce:	e8 a3       	std	Y+32, r30	; 0x20
    17d0:	f0 e1       	ldi	r31, 0x10	; 16
    17d2:	fa a3       	std	Y+34, r31	; 0x22
    17d4:	e8 a1       	ldd	r30, Y+32	; 0x20
    17d6:	f9 a1       	ldd	r31, Y+33	; 0x21
    17d8:	00 80       	ld	r0, Z
    17da:	88 a1       	ldd	r24, Y+32	; 0x20
    17dc:	99 a1       	ldd	r25, Y+33	; 0x21
    17de:	01 96       	adiw	r24, 0x01	; 1
    17e0:	99 a3       	std	Y+33, r25	; 0x21
    17e2:	88 a3       	std	Y+32, r24	; 0x20
    17e4:	ee 8d       	ldd	r30, Y+30	; 0x1e
    17e6:	ff 8d       	ldd	r31, Y+31	; 0x1f
    17e8:	00 82       	st	Z, r0
    17ea:	8e 8d       	ldd	r24, Y+30	; 0x1e
    17ec:	9f 8d       	ldd	r25, Y+31	; 0x1f
    17ee:	01 96       	adiw	r24, 0x01	; 1
    17f0:	9f 8f       	std	Y+31, r25	; 0x1f
    17f2:	8e 8f       	std	Y+30, r24	; 0x1e
    17f4:	9a a1       	ldd	r25, Y+34	; 0x22
    17f6:	91 50       	subi	r25, 0x01	; 1
    17f8:	9a a3       	std	Y+34, r25	; 0x22
    17fa:	ea a1       	ldd	r30, Y+34	; 0x22
    17fc:	ee 23       	and	r30, r30
    17fe:	51 f7       	brne	.-44     	; 0x17d4 <KPD_u8GetPressedKey+0x4a>

	for(u8 Local_u8ColumnsIndex=0;Local_u8ColumnsIndex<4;Local_u8ColumnsIndex++)
    1800:	1b 82       	std	Y+3, r1	; 0x03
    1802:	62 c0       	rjmp	.+196    	; 0x18c8 <KPD_u8GetPressedKey+0x13e>
	{
		DIO_voidSetPinValue(KPD_COL_PORT, Local_u8ColumsArray[Local_u8ColumnsIndex],LOW);
    1804:	8b 81       	ldd	r24, Y+3	; 0x03
    1806:	28 2f       	mov	r18, r24
    1808:	30 e0       	ldi	r19, 0x00	; 0
    180a:	ce 01       	movw	r24, r28
    180c:	05 96       	adiw	r24, 0x05	; 5
    180e:	fc 01       	movw	r30, r24
    1810:	e2 0f       	add	r30, r18
    1812:	f3 1f       	adc	r31, r19
    1814:	90 81       	ld	r25, Z
    1816:	80 e0       	ldi	r24, 0x00	; 0
    1818:	69 2f       	mov	r22, r25
    181a:	40 e0       	ldi	r20, 0x00	; 0
    181c:	0e 94 d3 06 	call	0xda6	; 0xda6 <DIO_voidSetPinValue>
		for(u8 Local_u8RowsIndex=0;Local_u8RowsIndex<4;Local_u8RowsIndex++)
    1820:	1a 82       	std	Y+2, r1	; 0x02
    1822:	3d c0       	rjmp	.+122    	; 0x189e <KPD_u8GetPressedKey+0x114>
		{
			u8 Local_u8PinState=DIO_u8GetPinValue(KPD_ROW_PORT, Local_u8RowsArray[Local_u8RowsIndex]);
    1824:	8a 81       	ldd	r24, Y+2	; 0x02
    1826:	28 2f       	mov	r18, r24
    1828:	30 e0       	ldi	r19, 0x00	; 0
    182a:	ce 01       	movw	r24, r28
    182c:	09 96       	adiw	r24, 0x09	; 9
    182e:	fc 01       	movw	r30, r24
    1830:	e2 0f       	add	r30, r18
    1832:	f3 1f       	adc	r31, r19
    1834:	90 81       	ld	r25, Z
    1836:	80 e0       	ldi	r24, 0x00	; 0
    1838:	69 2f       	mov	r22, r25
    183a:	0e 94 e9 07 	call	0xfd2	; 0xfd2 <DIO_u8GetPinValue>
    183e:	89 83       	std	Y+1, r24	; 0x01

			if(Local_u8PinState==0)
    1840:	89 81       	ldd	r24, Y+1	; 0x01
    1842:	88 23       	and	r24, r24
    1844:	49 f5       	brne	.+82     	; 0x1898 <KPD_u8GetPressedKey+0x10e>
			{
				Local_u8PressedKey=Local_u8KeyArray[Local_u8RowsIndex][Local_u8ColumnsIndex];
    1846:	8a 81       	ldd	r24, Y+2	; 0x02
    1848:	28 2f       	mov	r18, r24
    184a:	30 e0       	ldi	r19, 0x00	; 0
    184c:	8b 81       	ldd	r24, Y+3	; 0x03
    184e:	48 2f       	mov	r20, r24
    1850:	50 e0       	ldi	r21, 0x00	; 0
    1852:	22 0f       	add	r18, r18
    1854:	33 1f       	adc	r19, r19
    1856:	22 0f       	add	r18, r18
    1858:	33 1f       	adc	r19, r19
    185a:	ce 01       	movw	r24, r28
    185c:	01 96       	adiw	r24, 0x01	; 1
    185e:	82 0f       	add	r24, r18
    1860:	93 1f       	adc	r25, r19
    1862:	84 0f       	add	r24, r20
    1864:	95 1f       	adc	r25, r21
    1866:	fc 01       	movw	r30, r24
    1868:	3c 96       	adiw	r30, 0x0c	; 12
    186a:	80 81       	ld	r24, Z
    186c:	8c 83       	std	Y+4, r24	; 0x04
    186e:	0e c0       	rjmp	.+28     	; 0x188c <KPD_u8GetPressedKey+0x102>
				while(Local_u8PinState==0)
				{
					Local_u8PinState=DIO_u8GetPinValue(KPD_ROW_PORT, Local_u8RowsArray[Local_u8RowsIndex]);
    1870:	8a 81       	ldd	r24, Y+2	; 0x02
    1872:	28 2f       	mov	r18, r24
    1874:	30 e0       	ldi	r19, 0x00	; 0
    1876:	ce 01       	movw	r24, r28
    1878:	09 96       	adiw	r24, 0x09	; 9
    187a:	fc 01       	movw	r30, r24
    187c:	e2 0f       	add	r30, r18
    187e:	f3 1f       	adc	r31, r19
    1880:	90 81       	ld	r25, Z
    1882:	80 e0       	ldi	r24, 0x00	; 0
    1884:	69 2f       	mov	r22, r25
    1886:	0e 94 e9 07 	call	0xfd2	; 0xfd2 <DIO_u8GetPinValue>
    188a:	89 83       	std	Y+1, r24	; 0x01
			u8 Local_u8PinState=DIO_u8GetPinValue(KPD_ROW_PORT, Local_u8RowsArray[Local_u8RowsIndex]);

			if(Local_u8PinState==0)
			{
				Local_u8PressedKey=Local_u8KeyArray[Local_u8RowsIndex][Local_u8ColumnsIndex];
				while(Local_u8PinState==0)
    188c:	89 81       	ldd	r24, Y+1	; 0x01
    188e:	88 23       	and	r24, r24
    1890:	79 f3       	breq	.-34     	; 0x1870 <KPD_u8GetPressedKey+0xe6>
				{
					Local_u8PinState=DIO_u8GetPinValue(KPD_ROW_PORT, Local_u8RowsArray[Local_u8RowsIndex]);
				}
				return Local_u8PressedKey;
    1892:	fc 81       	ldd	r31, Y+4	; 0x04
    1894:	fd 8f       	std	Y+29, r31	; 0x1d
    1896:	1e c0       	rjmp	.+60     	; 0x18d4 <KPD_u8GetPressedKey+0x14a>
            {'C', '0', '=', '+'} };

	for(u8 Local_u8ColumnsIndex=0;Local_u8ColumnsIndex<4;Local_u8ColumnsIndex++)
	{
		DIO_voidSetPinValue(KPD_COL_PORT, Local_u8ColumsArray[Local_u8ColumnsIndex],LOW);
		for(u8 Local_u8RowsIndex=0;Local_u8RowsIndex<4;Local_u8RowsIndex++)
    1898:	8a 81       	ldd	r24, Y+2	; 0x02
    189a:	8f 5f       	subi	r24, 0xFF	; 255
    189c:	8a 83       	std	Y+2, r24	; 0x02
    189e:	8a 81       	ldd	r24, Y+2	; 0x02
    18a0:	84 30       	cpi	r24, 0x04	; 4
    18a2:	08 f4       	brcc	.+2      	; 0x18a6 <KPD_u8GetPressedKey+0x11c>
    18a4:	bf cf       	rjmp	.-130    	; 0x1824 <KPD_u8GetPressedKey+0x9a>
				return Local_u8PressedKey;
			}


		}
		DIO_voidSetPinValue(KPD_COL_PORT, Local_u8ColumsArray[Local_u8ColumnsIndex],HIGH);
    18a6:	8b 81       	ldd	r24, Y+3	; 0x03
    18a8:	28 2f       	mov	r18, r24
    18aa:	30 e0       	ldi	r19, 0x00	; 0
    18ac:	ce 01       	movw	r24, r28
    18ae:	05 96       	adiw	r24, 0x05	; 5
    18b0:	fc 01       	movw	r30, r24
    18b2:	e2 0f       	add	r30, r18
    18b4:	f3 1f       	adc	r31, r19
    18b6:	90 81       	ld	r25, Z
    18b8:	80 e0       	ldi	r24, 0x00	; 0
    18ba:	69 2f       	mov	r22, r25
    18bc:	41 e0       	ldi	r20, 0x01	; 1
    18be:	0e 94 d3 06 	call	0xda6	; 0xda6 <DIO_voidSetPinValue>
	u8 Local_u8KeyArray[4][4]={ {'7', '8', '9', '/'},
            {'4', '5', '6', '*'},
            {'1', '2', '3', '-'},
            {'C', '0', '=', '+'} };

	for(u8 Local_u8ColumnsIndex=0;Local_u8ColumnsIndex<4;Local_u8ColumnsIndex++)
    18c2:	8b 81       	ldd	r24, Y+3	; 0x03
    18c4:	8f 5f       	subi	r24, 0xFF	; 255
    18c6:	8b 83       	std	Y+3, r24	; 0x03
    18c8:	8b 81       	ldd	r24, Y+3	; 0x03
    18ca:	84 30       	cpi	r24, 0x04	; 4
    18cc:	08 f4       	brcc	.+2      	; 0x18d0 <KPD_u8GetPressedKey+0x146>
    18ce:	9a cf       	rjmp	.-204    	; 0x1804 <KPD_u8GetPressedKey+0x7a>
		}
		DIO_voidSetPinValue(KPD_COL_PORT, Local_u8ColumsArray[Local_u8ColumnsIndex],HIGH);

	}

	return Local_u8PressedKey;
    18d0:	8c 81       	ldd	r24, Y+4	; 0x04
    18d2:	8d 8f       	std	Y+29, r24	; 0x1d
    18d4:	8d 8d       	ldd	r24, Y+29	; 0x1d

}
    18d6:	a2 96       	adiw	r28, 0x22	; 34
    18d8:	0f b6       	in	r0, 0x3f	; 63
    18da:	f8 94       	cli
    18dc:	de bf       	out	0x3e, r29	; 62
    18de:	0f be       	out	0x3f, r0	; 63
    18e0:	cd bf       	out	0x3d, r28	; 61
    18e2:	cf 91       	pop	r28
    18e4:	df 91       	pop	r29
    18e6:	08 95       	ret

000018e8 <main>:
#include "../HAL/LCD/LCD_interface.h"
#include "../HAL/KPD/KPD_interface.h"
#include "../MCAL/GIE/GIE_interface.h"
#include "../MCAL/DIO/DIO_interface.h"
int main(void)
{
    18e8:	df 93       	push	r29
    18ea:	cf 93       	push	r28
    18ec:	cd b7       	in	r28, 0x3d	; 61
    18ee:	de b7       	in	r29, 0x3e	; 62
    18f0:	e7 97       	sbiw	r28, 0x37	; 55
    18f2:	0f b6       	in	r0, 0x3f	; 63
    18f4:	f8 94       	cli
    18f6:	de bf       	out	0x3e, r29	; 62
    18f8:	0f be       	out	0x3f, r0	; 63
    18fa:	cd bf       	out	0x3d, r28	; 61
    LCD_voidInit(); // Initialize the LCD
    18fc:	0e 94 50 0a 	call	0x14a0	; 0x14a0 <LCD_voidInit>
    KPD_voidInit(); // Initialize the keypad
    1900:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <KPD_voidInit>

    char buffer[16]; // Buffer to store user input
    uint8_t buffer_index = 0; // Index to keep track of buffer position
    1904:	18 a2       	std	Y+32, r1	; 0x20

    LCD_voidClearDisplay(); // Clear the LCD
    1906:	0e 94 fa 0a 	call	0x15f4	; 0x15f4 <LCD_voidClearDisplay>

    while (1)
    {
        char key = KPD_u8GetPressedKey(); // Get pressed key
    190a:	0e 94 c5 0b 	call	0x178a	; 0x178a <KPD_u8GetPressedKey>
    190e:	8f 8f       	std	Y+31, r24	; 0x1f

        if (key != 0xAA && buffer_index < 16)
    1910:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1912:	8a 3a       	cpi	r24, 0xAA	; 170
    1914:	e1 f0       	breq	.+56     	; 0x194e <main+0x66>
    1916:	88 a1       	ldd	r24, Y+32	; 0x20
    1918:	80 31       	cpi	r24, 0x10	; 16
    191a:	c8 f4       	brcc	.+50     	; 0x194e <main+0x66>
        {
            buffer[buffer_index++] = key; // Append key to buffer
    191c:	88 a1       	ldd	r24, Y+32	; 0x20
    191e:	28 2f       	mov	r18, r24
    1920:	30 e0       	ldi	r19, 0x00	; 0
    1922:	ce 01       	movw	r24, r28
    1924:	81 96       	adiw	r24, 0x21	; 33
    1926:	fc 01       	movw	r30, r24
    1928:	e2 0f       	add	r30, r18
    192a:	f3 1f       	adc	r31, r19
    192c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    192e:	80 83       	st	Z, r24
    1930:	88 a1       	ldd	r24, Y+32	; 0x20
    1932:	8f 5f       	subi	r24, 0xFF	; 255
    1934:	88 a3       	std	Y+32, r24	; 0x20
            buffer[buffer_index] = '\0'; // Null-terminate the buffer
    1936:	88 a1       	ldd	r24, Y+32	; 0x20
    1938:	28 2f       	mov	r18, r24
    193a:	30 e0       	ldi	r19, 0x00	; 0
    193c:	ce 01       	movw	r24, r28
    193e:	81 96       	adiw	r24, 0x21	; 33
    1940:	fc 01       	movw	r30, r24
    1942:	e2 0f       	add	r30, r18
    1944:	f3 1f       	adc	r31, r19
    1946:	10 82       	st	Z, r1
            LCD_voidSendData(key); // Display key on LCD
    1948:	8f 8d       	ldd	r24, Y+31	; 0x1f
    194a:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <LCD_voidSendData>
        }

        if (key == '=')
    194e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1950:	8d 33       	cpi	r24, 0x3D	; 61
    1952:	09 f0       	breq	.+2      	; 0x1956 <main+0x6e>
    1954:	1c c1       	rjmp	.+568    	; 0x1b8e <main+0x2a6>
        {
            int num1, num2, result;
            char operator;

            // Use sscanf to extract numbers and operator from buffer
            sscanf(buffer, "%d %c %d", &num1, &operator, &num2);
    1956:	2d b7       	in	r18, 0x3d	; 61
    1958:	3e b7       	in	r19, 0x3e	; 62
    195a:	2a 50       	subi	r18, 0x0A	; 10
    195c:	30 40       	sbci	r19, 0x00	; 0
    195e:	0f b6       	in	r0, 0x3f	; 63
    1960:	f8 94       	cli
    1962:	3e bf       	out	0x3e, r19	; 62
    1964:	0f be       	out	0x3f, r0	; 63
    1966:	2d bf       	out	0x3d, r18	; 61
    1968:	ed b7       	in	r30, 0x3d	; 61
    196a:	fe b7       	in	r31, 0x3e	; 62
    196c:	31 96       	adiw	r30, 0x01	; 1
    196e:	ce 01       	movw	r24, r28
    1970:	81 96       	adiw	r24, 0x21	; 33
    1972:	91 83       	std	Z+1, r25	; 0x01
    1974:	80 83       	st	Z, r24
    1976:	80 e6       	ldi	r24, 0x60	; 96
    1978:	90 e0       	ldi	r25, 0x00	; 0
    197a:	93 83       	std	Z+3, r25	; 0x03
    197c:	82 83       	std	Z+2, r24	; 0x02
    197e:	ce 01       	movw	r24, r28
    1980:	c1 96       	adiw	r24, 0x31	; 49
    1982:	95 83       	std	Z+5, r25	; 0x05
    1984:	84 83       	std	Z+4, r24	; 0x04
    1986:	ce 01       	movw	r24, r28
    1988:	c5 96       	adiw	r24, 0x35	; 53
    198a:	97 83       	std	Z+7, r25	; 0x07
    198c:	86 83       	std	Z+6, r24	; 0x06
    198e:	ce 01       	movw	r24, r28
    1990:	c3 96       	adiw	r24, 0x33	; 51
    1992:	91 87       	std	Z+9, r25	; 0x09
    1994:	80 87       	std	Z+8, r24	; 0x08
    1996:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <sscanf>
    199a:	4d b7       	in	r20, 0x3d	; 61
    199c:	5e b7       	in	r21, 0x3e	; 62
    199e:	46 5f       	subi	r20, 0xF6	; 246
    19a0:	5f 4f       	sbci	r21, 0xFF	; 255
    19a2:	0f b6       	in	r0, 0x3f	; 63
    19a4:	f8 94       	cli
    19a6:	5e bf       	out	0x3e, r21	; 62
    19a8:	0f be       	out	0x3f, r0	; 63
    19aa:	4d bf       	out	0x3d, r20	; 61

            // Perform calculations based on operator
            switch (operator)
    19ac:	8d a9       	ldd	r24, Y+53	; 0x35
    19ae:	28 2f       	mov	r18, r24
    19b0:	30 e0       	ldi	r19, 0x00	; 0
    19b2:	3f ab       	std	Y+55, r19	; 0x37
    19b4:	2e ab       	std	Y+54, r18	; 0x36
    19b6:	4e a9       	ldd	r20, Y+54	; 0x36
    19b8:	5f a9       	ldd	r21, Y+55	; 0x37
    19ba:	4b 32       	cpi	r20, 0x2B	; 43
    19bc:	51 05       	cpc	r21, r1
    19be:	b1 f0       	breq	.+44     	; 0x19ec <main+0x104>
    19c0:	8e a9       	ldd	r24, Y+54	; 0x36
    19c2:	9f a9       	ldd	r25, Y+55	; 0x37
    19c4:	8c 32       	cpi	r24, 0x2C	; 44
    19c6:	91 05       	cpc	r25, r1
    19c8:	34 f4       	brge	.+12     	; 0x19d6 <main+0xee>
    19ca:	2e a9       	ldd	r18, Y+54	; 0x36
    19cc:	3f a9       	ldd	r19, Y+55	; 0x37
    19ce:	2a 32       	cpi	r18, 0x2A	; 42
    19d0:	31 05       	cpc	r19, r1
    19d2:	f1 f0       	breq	.+60     	; 0x1a10 <main+0x128>
    19d4:	b7 c0       	rjmp	.+366    	; 0x1b44 <main+0x25c>
    19d6:	4e a9       	ldd	r20, Y+54	; 0x36
    19d8:	5f a9       	ldd	r21, Y+55	; 0x37
    19da:	4d 32       	cpi	r20, 0x2D	; 45
    19dc:	51 05       	cpc	r21, r1
    19de:	79 f0       	breq	.+30     	; 0x19fe <main+0x116>
    19e0:	8e a9       	ldd	r24, Y+54	; 0x36
    19e2:	9f a9       	ldd	r25, Y+55	; 0x37
    19e4:	8f 32       	cpi	r24, 0x2F	; 47
    19e6:	91 05       	cpc	r25, r1
    19e8:	11 f1       	breq	.+68     	; 0x1a2e <main+0x146>
    19ea:	ac c0       	rjmp	.+344    	; 0x1b44 <main+0x25c>
            {
                case '+':
                    result = num1 + num2;
    19ec:	89 a9       	ldd	r24, Y+49	; 0x31
    19ee:	9a a9       	ldd	r25, Y+50	; 0x32
    19f0:	2b a9       	ldd	r18, Y+51	; 0x33
    19f2:	3c a9       	ldd	r19, Y+52	; 0x34
    19f4:	82 0f       	add	r24, r18
    19f6:	93 1f       	adc	r25, r19
    19f8:	9e 8f       	std	Y+30, r25	; 0x1e
    19fa:	8d 8f       	std	Y+29, r24	; 0x1d
    19fc:	a5 c0       	rjmp	.+330    	; 0x1b48 <main+0x260>
                    break;
                case '-':
                    result = num1 - num2;
    19fe:	89 a9       	ldd	r24, Y+49	; 0x31
    1a00:	9a a9       	ldd	r25, Y+50	; 0x32
    1a02:	2b a9       	ldd	r18, Y+51	; 0x33
    1a04:	3c a9       	ldd	r19, Y+52	; 0x34
    1a06:	82 1b       	sub	r24, r18
    1a08:	93 0b       	sbc	r25, r19
    1a0a:	9e 8f       	std	Y+30, r25	; 0x1e
    1a0c:	8d 8f       	std	Y+29, r24	; 0x1d
    1a0e:	9c c0       	rjmp	.+312    	; 0x1b48 <main+0x260>
                    break;
                case '*':
                    result = num1 * num2;
    1a10:	89 a9       	ldd	r24, Y+49	; 0x31
    1a12:	9a a9       	ldd	r25, Y+50	; 0x32
    1a14:	2b a9       	ldd	r18, Y+51	; 0x33
    1a16:	3c a9       	ldd	r19, Y+52	; 0x34
    1a18:	ac 01       	movw	r20, r24
    1a1a:	42 9f       	mul	r20, r18
    1a1c:	c0 01       	movw	r24, r0
    1a1e:	43 9f       	mul	r20, r19
    1a20:	90 0d       	add	r25, r0
    1a22:	52 9f       	mul	r21, r18
    1a24:	90 0d       	add	r25, r0
    1a26:	11 24       	eor	r1, r1
    1a28:	9e 8f       	std	Y+30, r25	; 0x1e
    1a2a:	8d 8f       	std	Y+29, r24	; 0x1d
    1a2c:	8d c0       	rjmp	.+282    	; 0x1b48 <main+0x260>
                    break;
                case '/':
                    if (num2 != 0) {
    1a2e:	8b a9       	ldd	r24, Y+51	; 0x33
    1a30:	9c a9       	ldd	r25, Y+52	; 0x34
    1a32:	00 97       	sbiw	r24, 0x00	; 0
    1a34:	59 f0       	breq	.+22     	; 0x1a4c <main+0x164>
                        result = num1 / num2;
    1a36:	89 a9       	ldd	r24, Y+49	; 0x31
    1a38:	9a a9       	ldd	r25, Y+50	; 0x32
    1a3a:	2b a9       	ldd	r18, Y+51	; 0x33
    1a3c:	3c a9       	ldd	r19, Y+52	; 0x34
    1a3e:	b9 01       	movw	r22, r18
    1a40:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__divmodhi4>
    1a44:	cb 01       	movw	r24, r22
    1a46:	9e 8f       	std	Y+30, r25	; 0x1e
    1a48:	8d 8f       	std	Y+29, r24	; 0x1d
    1a4a:	7e c0       	rjmp	.+252    	; 0x1b48 <main+0x260>
                    } else {
                    	LCD_voidClearDisplay(); // Clear the LCD
    1a4c:	0e 94 fa 0a 	call	0x15f4	; 0x15f4 <LCD_voidClearDisplay>
                        LCD_voidSendString("Error: Division by 0");
    1a50:	89 e6       	ldi	r24, 0x69	; 105
    1a52:	90 e0       	ldi	r25, 0x00	; 0
    1a54:	0e 94 22 0b 	call	0x1644	; 0x1644 <LCD_voidSendString>
    1a58:	80 e0       	ldi	r24, 0x00	; 0
    1a5a:	90 e0       	ldi	r25, 0x00	; 0
    1a5c:	aa ef       	ldi	r26, 0xFA	; 250
    1a5e:	b4 e4       	ldi	r27, 0x44	; 68
    1a60:	89 8f       	std	Y+25, r24	; 0x19
    1a62:	9a 8f       	std	Y+26, r25	; 0x1a
    1a64:	ab 8f       	std	Y+27, r26	; 0x1b
    1a66:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a68:	69 8d       	ldd	r22, Y+25	; 0x19
    1a6a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1a6c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1a6e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1a70:	20 e0       	ldi	r18, 0x00	; 0
    1a72:	30 e0       	ldi	r19, 0x00	; 0
    1a74:	4a ef       	ldi	r20, 0xFA	; 250
    1a76:	54 e4       	ldi	r21, 0x44	; 68
    1a78:	0e 94 1d 02 	call	0x43a	; 0x43a <__mulsf3>
    1a7c:	dc 01       	movw	r26, r24
    1a7e:	cb 01       	movw	r24, r22
    1a80:	8d 8b       	std	Y+21, r24	; 0x15
    1a82:	9e 8b       	std	Y+22, r25	; 0x16
    1a84:	af 8b       	std	Y+23, r26	; 0x17
    1a86:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1a88:	6d 89       	ldd	r22, Y+21	; 0x15
    1a8a:	7e 89       	ldd	r23, Y+22	; 0x16
    1a8c:	8f 89       	ldd	r24, Y+23	; 0x17
    1a8e:	98 8d       	ldd	r25, Y+24	; 0x18
    1a90:	20 e0       	ldi	r18, 0x00	; 0
    1a92:	30 e0       	ldi	r19, 0x00	; 0
    1a94:	40 e8       	ldi	r20, 0x80	; 128
    1a96:	5f e3       	ldi	r21, 0x3F	; 63
    1a98:	0e 94 77 03 	call	0x6ee	; 0x6ee <__ltsf2>
    1a9c:	88 23       	and	r24, r24
    1a9e:	2c f4       	brge	.+10     	; 0x1aaa <main+0x1c2>
		__ticks = 1;
    1aa0:	81 e0       	ldi	r24, 0x01	; 1
    1aa2:	90 e0       	ldi	r25, 0x00	; 0
    1aa4:	9c 8b       	std	Y+20, r25	; 0x14
    1aa6:	8b 8b       	std	Y+19, r24	; 0x13
    1aa8:	3f c0       	rjmp	.+126    	; 0x1b28 <main+0x240>
	else if (__tmp > 65535)
    1aaa:	6d 89       	ldd	r22, Y+21	; 0x15
    1aac:	7e 89       	ldd	r23, Y+22	; 0x16
    1aae:	8f 89       	ldd	r24, Y+23	; 0x17
    1ab0:	98 8d       	ldd	r25, Y+24	; 0x18
    1ab2:	20 e0       	ldi	r18, 0x00	; 0
    1ab4:	3f ef       	ldi	r19, 0xFF	; 255
    1ab6:	4f e7       	ldi	r20, 0x7F	; 127
    1ab8:	57 e4       	ldi	r21, 0x47	; 71
    1aba:	0e 94 17 03 	call	0x62e	; 0x62e <__gtsf2>
    1abe:	18 16       	cp	r1, r24
    1ac0:	4c f5       	brge	.+82     	; 0x1b14 <main+0x22c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ac2:	69 8d       	ldd	r22, Y+25	; 0x19
    1ac4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1ac6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1ac8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1aca:	20 e0       	ldi	r18, 0x00	; 0
    1acc:	30 e0       	ldi	r19, 0x00	; 0
    1ace:	40 e2       	ldi	r20, 0x20	; 32
    1ad0:	51 e4       	ldi	r21, 0x41	; 65
    1ad2:	0e 94 1d 02 	call	0x43a	; 0x43a <__mulsf3>
    1ad6:	dc 01       	movw	r26, r24
    1ad8:	cb 01       	movw	r24, r22
    1ada:	bc 01       	movw	r22, r24
    1adc:	cd 01       	movw	r24, r26
    1ade:	0e 94 47 00 	call	0x8e	; 0x8e <__fixunssfsi>
    1ae2:	dc 01       	movw	r26, r24
    1ae4:	cb 01       	movw	r24, r22
    1ae6:	9c 8b       	std	Y+20, r25	; 0x14
    1ae8:	8b 8b       	std	Y+19, r24	; 0x13
    1aea:	0f c0       	rjmp	.+30     	; 0x1b0a <main+0x222>
    1aec:	88 ec       	ldi	r24, 0xC8	; 200
    1aee:	90 e0       	ldi	r25, 0x00	; 0
    1af0:	9a 8b       	std	Y+18, r25	; 0x12
    1af2:	89 8b       	std	Y+17, r24	; 0x11
    1af4:	89 89       	ldd	r24, Y+17	; 0x11
    1af6:	9a 89       	ldd	r25, Y+18	; 0x12
    1af8:	01 97       	sbiw	r24, 0x01	; 1
    1afa:	f1 f7       	brne	.-4      	; 0x1af8 <main+0x210>
    1afc:	9a 8b       	std	Y+18, r25	; 0x12
    1afe:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b00:	8b 89       	ldd	r24, Y+19	; 0x13
    1b02:	9c 89       	ldd	r25, Y+20	; 0x14
    1b04:	01 97       	sbiw	r24, 0x01	; 1
    1b06:	9c 8b       	std	Y+20, r25	; 0x14
    1b08:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b0a:	8b 89       	ldd	r24, Y+19	; 0x13
    1b0c:	9c 89       	ldd	r25, Y+20	; 0x14
    1b0e:	00 97       	sbiw	r24, 0x00	; 0
    1b10:	69 f7       	brne	.-38     	; 0x1aec <main+0x204>
    1b12:	14 c0       	rjmp	.+40     	; 0x1b3c <main+0x254>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b14:	6d 89       	ldd	r22, Y+21	; 0x15
    1b16:	7e 89       	ldd	r23, Y+22	; 0x16
    1b18:	8f 89       	ldd	r24, Y+23	; 0x17
    1b1a:	98 8d       	ldd	r25, Y+24	; 0x18
    1b1c:	0e 94 47 00 	call	0x8e	; 0x8e <__fixunssfsi>
    1b20:	dc 01       	movw	r26, r24
    1b22:	cb 01       	movw	r24, r22
    1b24:	9c 8b       	std	Y+20, r25	; 0x14
    1b26:	8b 8b       	std	Y+19, r24	; 0x13
    1b28:	8b 89       	ldd	r24, Y+19	; 0x13
    1b2a:	9c 89       	ldd	r25, Y+20	; 0x14
    1b2c:	98 8b       	std	Y+16, r25	; 0x10
    1b2e:	8f 87       	std	Y+15, r24	; 0x0f
    1b30:	8f 85       	ldd	r24, Y+15	; 0x0f
    1b32:	98 89       	ldd	r25, Y+16	; 0x10
    1b34:	01 97       	sbiw	r24, 0x01	; 1
    1b36:	f1 f7       	brne	.-4      	; 0x1b34 <main+0x24c>
    1b38:	98 8b       	std	Y+16, r25	; 0x10
    1b3a:	8f 87       	std	Y+15, r24	; 0x0f
                        _delay_ms(2000);
                        LCD_voidClearDisplay(); // Clear the LCD
    1b3c:	0e 94 fa 0a 	call	0x15f4	; 0x15f4 <LCD_voidClearDisplay>
                        buffer_index = 0;
    1b40:	18 a2       	std	Y+32, r1	; 0x20
    1b42:	e3 ce       	rjmp	.-570    	; 0x190a <main+0x22>
                        continue;
                    }
                    break;
                default:
                    result = 0;
    1b44:	1e 8e       	std	Y+30, r1	; 0x1e
    1b46:	1d 8e       	std	Y+29, r1	; 0x1d
                    break;
            }

            // Display the result on the LCD
            LCD_voidClearDisplay(); // Clear the LCD
    1b48:	0e 94 fa 0a 	call	0x15f4	; 0x15f4 <LCD_voidClearDisplay>
            sprintf(buffer, "Result: %d", result);
    1b4c:	00 d0       	rcall	.+0      	; 0x1b4e <main+0x266>
    1b4e:	00 d0       	rcall	.+0      	; 0x1b50 <main+0x268>
    1b50:	00 d0       	rcall	.+0      	; 0x1b52 <main+0x26a>
    1b52:	ed b7       	in	r30, 0x3d	; 61
    1b54:	fe b7       	in	r31, 0x3e	; 62
    1b56:	31 96       	adiw	r30, 0x01	; 1
    1b58:	ce 01       	movw	r24, r28
    1b5a:	81 96       	adiw	r24, 0x21	; 33
    1b5c:	91 83       	std	Z+1, r25	; 0x01
    1b5e:	80 83       	st	Z, r24
    1b60:	8e e7       	ldi	r24, 0x7E	; 126
    1b62:	90 e0       	ldi	r25, 0x00	; 0
    1b64:	93 83       	std	Z+3, r25	; 0x03
    1b66:	82 83       	std	Z+2, r24	; 0x02
    1b68:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1b6a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1b6c:	95 83       	std	Z+5, r25	; 0x05
    1b6e:	84 83       	std	Z+4, r24	; 0x04
    1b70:	0e 94 b9 0e 	call	0x1d72	; 0x1d72 <sprintf>
    1b74:	8d b7       	in	r24, 0x3d	; 61
    1b76:	9e b7       	in	r25, 0x3e	; 62
    1b78:	06 96       	adiw	r24, 0x06	; 6
    1b7a:	0f b6       	in	r0, 0x3f	; 63
    1b7c:	f8 94       	cli
    1b7e:	9e bf       	out	0x3e, r25	; 62
    1b80:	0f be       	out	0x3f, r0	; 63
    1b82:	8d bf       	out	0x3d, r24	; 61
            LCD_voidSendString(buffer);
    1b84:	ce 01       	movw	r24, r28
    1b86:	81 96       	adiw	r24, 0x21	; 33
    1b88:	0e 94 22 0b 	call	0x1644	; 0x1644 <LCD_voidSendString>

            // Clear buffer and reset index
            buffer_index = 0;
    1b8c:	18 a2       	std	Y+32, r1	; 0x20
    1b8e:	80 e0       	ldi	r24, 0x00	; 0
    1b90:	90 e0       	ldi	r25, 0x00	; 0
    1b92:	a8 ec       	ldi	r26, 0xC8	; 200
    1b94:	b2 e4       	ldi	r27, 0x42	; 66
    1b96:	8b 87       	std	Y+11, r24	; 0x0b
    1b98:	9c 87       	std	Y+12, r25	; 0x0c
    1b9a:	ad 87       	std	Y+13, r26	; 0x0d
    1b9c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b9e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ba0:	7c 85       	ldd	r23, Y+12	; 0x0c
    1ba2:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ba4:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ba6:	20 e0       	ldi	r18, 0x00	; 0
    1ba8:	30 e0       	ldi	r19, 0x00	; 0
    1baa:	4a ef       	ldi	r20, 0xFA	; 250
    1bac:	54 e4       	ldi	r21, 0x44	; 68
    1bae:	0e 94 1d 02 	call	0x43a	; 0x43a <__mulsf3>
    1bb2:	dc 01       	movw	r26, r24
    1bb4:	cb 01       	movw	r24, r22
    1bb6:	8f 83       	std	Y+7, r24	; 0x07
    1bb8:	98 87       	std	Y+8, r25	; 0x08
    1bba:	a9 87       	std	Y+9, r26	; 0x09
    1bbc:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1bbe:	6f 81       	ldd	r22, Y+7	; 0x07
    1bc0:	78 85       	ldd	r23, Y+8	; 0x08
    1bc2:	89 85       	ldd	r24, Y+9	; 0x09
    1bc4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1bc6:	20 e0       	ldi	r18, 0x00	; 0
    1bc8:	30 e0       	ldi	r19, 0x00	; 0
    1bca:	40 e8       	ldi	r20, 0x80	; 128
    1bcc:	5f e3       	ldi	r21, 0x3F	; 63
    1bce:	0e 94 77 03 	call	0x6ee	; 0x6ee <__ltsf2>
    1bd2:	88 23       	and	r24, r24
    1bd4:	2c f4       	brge	.+10     	; 0x1be0 <main+0x2f8>
		__ticks = 1;
    1bd6:	81 e0       	ldi	r24, 0x01	; 1
    1bd8:	90 e0       	ldi	r25, 0x00	; 0
    1bda:	9e 83       	std	Y+6, r25	; 0x06
    1bdc:	8d 83       	std	Y+5, r24	; 0x05
    1bde:	3f c0       	rjmp	.+126    	; 0x1c5e <main+0x376>
	else if (__tmp > 65535)
    1be0:	6f 81       	ldd	r22, Y+7	; 0x07
    1be2:	78 85       	ldd	r23, Y+8	; 0x08
    1be4:	89 85       	ldd	r24, Y+9	; 0x09
    1be6:	9a 85       	ldd	r25, Y+10	; 0x0a
    1be8:	20 e0       	ldi	r18, 0x00	; 0
    1bea:	3f ef       	ldi	r19, 0xFF	; 255
    1bec:	4f e7       	ldi	r20, 0x7F	; 127
    1bee:	57 e4       	ldi	r21, 0x47	; 71
    1bf0:	0e 94 17 03 	call	0x62e	; 0x62e <__gtsf2>
    1bf4:	18 16       	cp	r1, r24
    1bf6:	4c f5       	brge	.+82     	; 0x1c4a <main+0x362>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1bf8:	6b 85       	ldd	r22, Y+11	; 0x0b
    1bfa:	7c 85       	ldd	r23, Y+12	; 0x0c
    1bfc:	8d 85       	ldd	r24, Y+13	; 0x0d
    1bfe:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c00:	20 e0       	ldi	r18, 0x00	; 0
    1c02:	30 e0       	ldi	r19, 0x00	; 0
    1c04:	40 e2       	ldi	r20, 0x20	; 32
    1c06:	51 e4       	ldi	r21, 0x41	; 65
    1c08:	0e 94 1d 02 	call	0x43a	; 0x43a <__mulsf3>
    1c0c:	dc 01       	movw	r26, r24
    1c0e:	cb 01       	movw	r24, r22
    1c10:	bc 01       	movw	r22, r24
    1c12:	cd 01       	movw	r24, r26
    1c14:	0e 94 47 00 	call	0x8e	; 0x8e <__fixunssfsi>
    1c18:	dc 01       	movw	r26, r24
    1c1a:	cb 01       	movw	r24, r22
    1c1c:	9e 83       	std	Y+6, r25	; 0x06
    1c1e:	8d 83       	std	Y+5, r24	; 0x05
    1c20:	0f c0       	rjmp	.+30     	; 0x1c40 <main+0x358>
    1c22:	88 ec       	ldi	r24, 0xC8	; 200
    1c24:	90 e0       	ldi	r25, 0x00	; 0
    1c26:	9c 83       	std	Y+4, r25	; 0x04
    1c28:	8b 83       	std	Y+3, r24	; 0x03
    1c2a:	8b 81       	ldd	r24, Y+3	; 0x03
    1c2c:	9c 81       	ldd	r25, Y+4	; 0x04
    1c2e:	01 97       	sbiw	r24, 0x01	; 1
    1c30:	f1 f7       	brne	.-4      	; 0x1c2e <main+0x346>
    1c32:	9c 83       	std	Y+4, r25	; 0x04
    1c34:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c36:	8d 81       	ldd	r24, Y+5	; 0x05
    1c38:	9e 81       	ldd	r25, Y+6	; 0x06
    1c3a:	01 97       	sbiw	r24, 0x01	; 1
    1c3c:	9e 83       	std	Y+6, r25	; 0x06
    1c3e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c40:	8d 81       	ldd	r24, Y+5	; 0x05
    1c42:	9e 81       	ldd	r25, Y+6	; 0x06
    1c44:	00 97       	sbiw	r24, 0x00	; 0
    1c46:	69 f7       	brne	.-38     	; 0x1c22 <main+0x33a>
    1c48:	60 ce       	rjmp	.-832    	; 0x190a <main+0x22>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c4a:	6f 81       	ldd	r22, Y+7	; 0x07
    1c4c:	78 85       	ldd	r23, Y+8	; 0x08
    1c4e:	89 85       	ldd	r24, Y+9	; 0x09
    1c50:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c52:	0e 94 47 00 	call	0x8e	; 0x8e <__fixunssfsi>
    1c56:	dc 01       	movw	r26, r24
    1c58:	cb 01       	movw	r24, r22
    1c5a:	9e 83       	std	Y+6, r25	; 0x06
    1c5c:	8d 83       	std	Y+5, r24	; 0x05
    1c5e:	8d 81       	ldd	r24, Y+5	; 0x05
    1c60:	9e 81       	ldd	r25, Y+6	; 0x06
    1c62:	9a 83       	std	Y+2, r25	; 0x02
    1c64:	89 83       	std	Y+1, r24	; 0x01
    1c66:	89 81       	ldd	r24, Y+1	; 0x01
    1c68:	9a 81       	ldd	r25, Y+2	; 0x02
    1c6a:	01 97       	sbiw	r24, 0x01	; 1
    1c6c:	f1 f7       	brne	.-4      	; 0x1c6a <main+0x382>
    1c6e:	9a 83       	std	Y+2, r25	; 0x02
    1c70:	89 83       	std	Y+1, r24	; 0x01
    1c72:	4b ce       	rjmp	.-874    	; 0x190a <main+0x22>

00001c74 <__divmodhi4>:
    1c74:	97 fb       	bst	r25, 7
    1c76:	09 2e       	mov	r0, r25
    1c78:	07 26       	eor	r0, r23
    1c7a:	0a d0       	rcall	.+20     	; 0x1c90 <__divmodhi4_neg1>
    1c7c:	77 fd       	sbrc	r23, 7
    1c7e:	04 d0       	rcall	.+8      	; 0x1c88 <__divmodhi4_neg2>
    1c80:	0c d0       	rcall	.+24     	; 0x1c9a <__udivmodhi4>
    1c82:	06 d0       	rcall	.+12     	; 0x1c90 <__divmodhi4_neg1>
    1c84:	00 20       	and	r0, r0
    1c86:	1a f4       	brpl	.+6      	; 0x1c8e <__divmodhi4_exit>

00001c88 <__divmodhi4_neg2>:
    1c88:	70 95       	com	r23
    1c8a:	61 95       	neg	r22
    1c8c:	7f 4f       	sbci	r23, 0xFF	; 255

00001c8e <__divmodhi4_exit>:
    1c8e:	08 95       	ret

00001c90 <__divmodhi4_neg1>:
    1c90:	f6 f7       	brtc	.-4      	; 0x1c8e <__divmodhi4_exit>
    1c92:	90 95       	com	r25
    1c94:	81 95       	neg	r24
    1c96:	9f 4f       	sbci	r25, 0xFF	; 255
    1c98:	08 95       	ret

00001c9a <__udivmodhi4>:
    1c9a:	aa 1b       	sub	r26, r26
    1c9c:	bb 1b       	sub	r27, r27
    1c9e:	51 e1       	ldi	r21, 0x11	; 17
    1ca0:	07 c0       	rjmp	.+14     	; 0x1cb0 <__udivmodhi4_ep>

00001ca2 <__udivmodhi4_loop>:
    1ca2:	aa 1f       	adc	r26, r26
    1ca4:	bb 1f       	adc	r27, r27
    1ca6:	a6 17       	cp	r26, r22
    1ca8:	b7 07       	cpc	r27, r23
    1caa:	10 f0       	brcs	.+4      	; 0x1cb0 <__udivmodhi4_ep>
    1cac:	a6 1b       	sub	r26, r22
    1cae:	b7 0b       	sbc	r27, r23

00001cb0 <__udivmodhi4_ep>:
    1cb0:	88 1f       	adc	r24, r24
    1cb2:	99 1f       	adc	r25, r25
    1cb4:	5a 95       	dec	r21
    1cb6:	a9 f7       	brne	.-22     	; 0x1ca2 <__udivmodhi4_loop>
    1cb8:	80 95       	com	r24
    1cba:	90 95       	com	r25
    1cbc:	bc 01       	movw	r22, r24
    1cbe:	cd 01       	movw	r24, r26
    1cc0:	08 95       	ret

00001cc2 <__prologue_saves__>:
    1cc2:	2f 92       	push	r2
    1cc4:	3f 92       	push	r3
    1cc6:	4f 92       	push	r4
    1cc8:	5f 92       	push	r5
    1cca:	6f 92       	push	r6
    1ccc:	7f 92       	push	r7
    1cce:	8f 92       	push	r8
    1cd0:	9f 92       	push	r9
    1cd2:	af 92       	push	r10
    1cd4:	bf 92       	push	r11
    1cd6:	cf 92       	push	r12
    1cd8:	df 92       	push	r13
    1cda:	ef 92       	push	r14
    1cdc:	ff 92       	push	r15
    1cde:	0f 93       	push	r16
    1ce0:	1f 93       	push	r17
    1ce2:	cf 93       	push	r28
    1ce4:	df 93       	push	r29
    1ce6:	cd b7       	in	r28, 0x3d	; 61
    1ce8:	de b7       	in	r29, 0x3e	; 62
    1cea:	ca 1b       	sub	r28, r26
    1cec:	db 0b       	sbc	r29, r27
    1cee:	0f b6       	in	r0, 0x3f	; 63
    1cf0:	f8 94       	cli
    1cf2:	de bf       	out	0x3e, r29	; 62
    1cf4:	0f be       	out	0x3f, r0	; 63
    1cf6:	cd bf       	out	0x3d, r28	; 61
    1cf8:	09 94       	ijmp

00001cfa <__epilogue_restores__>:
    1cfa:	2a 88       	ldd	r2, Y+18	; 0x12
    1cfc:	39 88       	ldd	r3, Y+17	; 0x11
    1cfe:	48 88       	ldd	r4, Y+16	; 0x10
    1d00:	5f 84       	ldd	r5, Y+15	; 0x0f
    1d02:	6e 84       	ldd	r6, Y+14	; 0x0e
    1d04:	7d 84       	ldd	r7, Y+13	; 0x0d
    1d06:	8c 84       	ldd	r8, Y+12	; 0x0c
    1d08:	9b 84       	ldd	r9, Y+11	; 0x0b
    1d0a:	aa 84       	ldd	r10, Y+10	; 0x0a
    1d0c:	b9 84       	ldd	r11, Y+9	; 0x09
    1d0e:	c8 84       	ldd	r12, Y+8	; 0x08
    1d10:	df 80       	ldd	r13, Y+7	; 0x07
    1d12:	ee 80       	ldd	r14, Y+6	; 0x06
    1d14:	fd 80       	ldd	r15, Y+5	; 0x05
    1d16:	0c 81       	ldd	r16, Y+4	; 0x04
    1d18:	1b 81       	ldd	r17, Y+3	; 0x03
    1d1a:	aa 81       	ldd	r26, Y+2	; 0x02
    1d1c:	b9 81       	ldd	r27, Y+1	; 0x01
    1d1e:	ce 0f       	add	r28, r30
    1d20:	d1 1d       	adc	r29, r1
    1d22:	0f b6       	in	r0, 0x3f	; 63
    1d24:	f8 94       	cli
    1d26:	de bf       	out	0x3e, r29	; 62
    1d28:	0f be       	out	0x3f, r0	; 63
    1d2a:	cd bf       	out	0x3d, r28	; 61
    1d2c:	ed 01       	movw	r28, r26
    1d2e:	08 95       	ret

00001d30 <itoa>:
    1d30:	fb 01       	movw	r30, r22
    1d32:	9f 01       	movw	r18, r30
    1d34:	e8 94       	clt
    1d36:	42 30       	cpi	r20, 0x02	; 2
    1d38:	c4 f0       	brlt	.+48     	; 0x1d6a <itoa+0x3a>
    1d3a:	45 32       	cpi	r20, 0x25	; 37
    1d3c:	b4 f4       	brge	.+44     	; 0x1d6a <itoa+0x3a>
    1d3e:	4a 30       	cpi	r20, 0x0A	; 10
    1d40:	29 f4       	brne	.+10     	; 0x1d4c <itoa+0x1c>
    1d42:	97 fb       	bst	r25, 7
    1d44:	1e f4       	brtc	.+6      	; 0x1d4c <itoa+0x1c>
    1d46:	90 95       	com	r25
    1d48:	81 95       	neg	r24
    1d4a:	9f 4f       	sbci	r25, 0xFF	; 255
    1d4c:	64 2f       	mov	r22, r20
    1d4e:	77 27       	eor	r23, r23
    1d50:	0e 94 4d 0e 	call	0x1c9a	; 0x1c9a <__udivmodhi4>
    1d54:	80 5d       	subi	r24, 0xD0	; 208
    1d56:	8a 33       	cpi	r24, 0x3A	; 58
    1d58:	0c f0       	brlt	.+2      	; 0x1d5c <itoa+0x2c>
    1d5a:	89 5d       	subi	r24, 0xD9	; 217
    1d5c:	81 93       	st	Z+, r24
    1d5e:	cb 01       	movw	r24, r22
    1d60:	00 97       	sbiw	r24, 0x00	; 0
    1d62:	a1 f7       	brne	.-24     	; 0x1d4c <itoa+0x1c>
    1d64:	16 f4       	brtc	.+4      	; 0x1d6a <itoa+0x3a>
    1d66:	5d e2       	ldi	r21, 0x2D	; 45
    1d68:	51 93       	st	Z+, r21
    1d6a:	10 82       	st	Z, r1
    1d6c:	c9 01       	movw	r24, r18
    1d6e:	0c 94 92 13 	jmp	0x2724	; 0x2724 <strrev>

00001d72 <sprintf>:
    1d72:	ae e0       	ldi	r26, 0x0E	; 14
    1d74:	b0 e0       	ldi	r27, 0x00	; 0
    1d76:	ef eb       	ldi	r30, 0xBF	; 191
    1d78:	fe e0       	ldi	r31, 0x0E	; 14
    1d7a:	0c 94 6f 0e 	jmp	0x1cde	; 0x1cde <__prologue_saves__+0x1c>
    1d7e:	0d 89       	ldd	r16, Y+21	; 0x15
    1d80:	1e 89       	ldd	r17, Y+22	; 0x16
    1d82:	86 e0       	ldi	r24, 0x06	; 6
    1d84:	8c 83       	std	Y+4, r24	; 0x04
    1d86:	1a 83       	std	Y+2, r17	; 0x02
    1d88:	09 83       	std	Y+1, r16	; 0x01
    1d8a:	8f ef       	ldi	r24, 0xFF	; 255
    1d8c:	9f e7       	ldi	r25, 0x7F	; 127
    1d8e:	9e 83       	std	Y+6, r25	; 0x06
    1d90:	8d 83       	std	Y+5, r24	; 0x05
    1d92:	9e 01       	movw	r18, r28
    1d94:	27 5e       	subi	r18, 0xE7	; 231
    1d96:	3f 4f       	sbci	r19, 0xFF	; 255
    1d98:	ce 01       	movw	r24, r28
    1d9a:	01 96       	adiw	r24, 0x01	; 1
    1d9c:	6f 89       	ldd	r22, Y+23	; 0x17
    1d9e:	78 8d       	ldd	r23, Y+24	; 0x18
    1da0:	a9 01       	movw	r20, r18
    1da2:	0e 94 f7 0e 	call	0x1dee	; 0x1dee <vfprintf>
    1da6:	2f 81       	ldd	r18, Y+7	; 0x07
    1da8:	38 85       	ldd	r19, Y+8	; 0x08
    1daa:	02 0f       	add	r16, r18
    1dac:	13 1f       	adc	r17, r19
    1dae:	f8 01       	movw	r30, r16
    1db0:	10 82       	st	Z, r1
    1db2:	2e 96       	adiw	r28, 0x0e	; 14
    1db4:	e4 e0       	ldi	r30, 0x04	; 4
    1db6:	0c 94 8b 0e 	jmp	0x1d16	; 0x1d16 <__epilogue_restores__+0x1c>

00001dba <sscanf>:
    1dba:	ae e0       	ldi	r26, 0x0E	; 14
    1dbc:	b0 e0       	ldi	r27, 0x00	; 0
    1dbe:	e3 ee       	ldi	r30, 0xE3	; 227
    1dc0:	fe e0       	ldi	r31, 0x0E	; 14
    1dc2:	0c 94 71 0e 	jmp	0x1ce2	; 0x1ce2 <__prologue_saves__+0x20>
    1dc6:	85 e0       	ldi	r24, 0x05	; 5
    1dc8:	8c 83       	std	Y+4, r24	; 0x04
    1dca:	8b 89       	ldd	r24, Y+19	; 0x13
    1dcc:	9c 89       	ldd	r25, Y+20	; 0x14
    1dce:	9a 83       	std	Y+2, r25	; 0x02
    1dd0:	89 83       	std	Y+1, r24	; 0x01
    1dd2:	9e 01       	movw	r18, r28
    1dd4:	29 5e       	subi	r18, 0xE9	; 233
    1dd6:	3f 4f       	sbci	r19, 0xFF	; 255
    1dd8:	ce 01       	movw	r24, r28
    1dda:	01 96       	adiw	r24, 0x01	; 1
    1ddc:	6d 89       	ldd	r22, Y+21	; 0x15
    1dde:	7e 89       	ldd	r23, Y+22	; 0x16
    1de0:	a9 01       	movw	r20, r18
    1de2:	0e 94 58 12 	call	0x24b0	; 0x24b0 <vfscanf>
    1de6:	2e 96       	adiw	r28, 0x0e	; 14
    1de8:	e2 e0       	ldi	r30, 0x02	; 2
    1dea:	0c 94 8d 0e 	jmp	0x1d1a	; 0x1d1a <__epilogue_restores__+0x20>

00001dee <vfprintf>:
    1dee:	ab e0       	ldi	r26, 0x0B	; 11
    1df0:	b0 e0       	ldi	r27, 0x00	; 0
    1df2:	ed ef       	ldi	r30, 0xFD	; 253
    1df4:	fe e0       	ldi	r31, 0x0E	; 14
    1df6:	0c 94 61 0e 	jmp	0x1cc2	; 0x1cc2 <__prologue_saves__>
    1dfa:	3c 01       	movw	r6, r24
    1dfc:	2b 01       	movw	r4, r22
    1dfe:	5a 01       	movw	r10, r20
    1e00:	fc 01       	movw	r30, r24
    1e02:	17 82       	std	Z+7, r1	; 0x07
    1e04:	16 82       	std	Z+6, r1	; 0x06
    1e06:	83 81       	ldd	r24, Z+3	; 0x03
    1e08:	81 fd       	sbrc	r24, 1
    1e0a:	03 c0       	rjmp	.+6      	; 0x1e12 <vfprintf+0x24>
    1e0c:	6f ef       	ldi	r22, 0xFF	; 255
    1e0e:	7f ef       	ldi	r23, 0xFF	; 255
    1e10:	c6 c1       	rjmp	.+908    	; 0x219e <vfprintf+0x3b0>
    1e12:	9a e0       	ldi	r25, 0x0A	; 10
    1e14:	89 2e       	mov	r8, r25
    1e16:	1e 01       	movw	r2, r28
    1e18:	08 94       	sec
    1e1a:	21 1c       	adc	r2, r1
    1e1c:	31 1c       	adc	r3, r1
    1e1e:	f3 01       	movw	r30, r6
    1e20:	23 81       	ldd	r18, Z+3	; 0x03
    1e22:	f2 01       	movw	r30, r4
    1e24:	23 fd       	sbrc	r18, 3
    1e26:	85 91       	lpm	r24, Z+
    1e28:	23 ff       	sbrs	r18, 3
    1e2a:	81 91       	ld	r24, Z+
    1e2c:	2f 01       	movw	r4, r30
    1e2e:	88 23       	and	r24, r24
    1e30:	09 f4       	brne	.+2      	; 0x1e34 <vfprintf+0x46>
    1e32:	b2 c1       	rjmp	.+868    	; 0x2198 <vfprintf+0x3aa>
    1e34:	85 32       	cpi	r24, 0x25	; 37
    1e36:	39 f4       	brne	.+14     	; 0x1e46 <vfprintf+0x58>
    1e38:	23 fd       	sbrc	r18, 3
    1e3a:	85 91       	lpm	r24, Z+
    1e3c:	23 ff       	sbrs	r18, 3
    1e3e:	81 91       	ld	r24, Z+
    1e40:	2f 01       	movw	r4, r30
    1e42:	85 32       	cpi	r24, 0x25	; 37
    1e44:	29 f4       	brne	.+10     	; 0x1e50 <vfprintf+0x62>
    1e46:	90 e0       	ldi	r25, 0x00	; 0
    1e48:	b3 01       	movw	r22, r6
    1e4a:	0e 94 e4 13 	call	0x27c8	; 0x27c8 <fputc>
    1e4e:	e7 cf       	rjmp	.-50     	; 0x1e1e <vfprintf+0x30>
    1e50:	98 2f       	mov	r25, r24
    1e52:	ff 24       	eor	r15, r15
    1e54:	ee 24       	eor	r14, r14
    1e56:	99 24       	eor	r9, r9
    1e58:	ff e1       	ldi	r31, 0x1F	; 31
    1e5a:	ff 15       	cp	r31, r15
    1e5c:	d0 f0       	brcs	.+52     	; 0x1e92 <vfprintf+0xa4>
    1e5e:	9b 32       	cpi	r25, 0x2B	; 43
    1e60:	69 f0       	breq	.+26     	; 0x1e7c <vfprintf+0x8e>
    1e62:	9c 32       	cpi	r25, 0x2C	; 44
    1e64:	28 f4       	brcc	.+10     	; 0x1e70 <vfprintf+0x82>
    1e66:	90 32       	cpi	r25, 0x20	; 32
    1e68:	59 f0       	breq	.+22     	; 0x1e80 <vfprintf+0x92>
    1e6a:	93 32       	cpi	r25, 0x23	; 35
    1e6c:	91 f4       	brne	.+36     	; 0x1e92 <vfprintf+0xa4>
    1e6e:	0e c0       	rjmp	.+28     	; 0x1e8c <vfprintf+0x9e>
    1e70:	9d 32       	cpi	r25, 0x2D	; 45
    1e72:	49 f0       	breq	.+18     	; 0x1e86 <vfprintf+0x98>
    1e74:	90 33       	cpi	r25, 0x30	; 48
    1e76:	69 f4       	brne	.+26     	; 0x1e92 <vfprintf+0xa4>
    1e78:	41 e0       	ldi	r20, 0x01	; 1
    1e7a:	24 c0       	rjmp	.+72     	; 0x1ec4 <vfprintf+0xd6>
    1e7c:	52 e0       	ldi	r21, 0x02	; 2
    1e7e:	f5 2a       	or	r15, r21
    1e80:	84 e0       	ldi	r24, 0x04	; 4
    1e82:	f8 2a       	or	r15, r24
    1e84:	28 c0       	rjmp	.+80     	; 0x1ed6 <vfprintf+0xe8>
    1e86:	98 e0       	ldi	r25, 0x08	; 8
    1e88:	f9 2a       	or	r15, r25
    1e8a:	25 c0       	rjmp	.+74     	; 0x1ed6 <vfprintf+0xe8>
    1e8c:	e0 e1       	ldi	r30, 0x10	; 16
    1e8e:	fe 2a       	or	r15, r30
    1e90:	22 c0       	rjmp	.+68     	; 0x1ed6 <vfprintf+0xe8>
    1e92:	f7 fc       	sbrc	r15, 7
    1e94:	29 c0       	rjmp	.+82     	; 0x1ee8 <vfprintf+0xfa>
    1e96:	89 2f       	mov	r24, r25
    1e98:	80 53       	subi	r24, 0x30	; 48
    1e9a:	8a 30       	cpi	r24, 0x0A	; 10
    1e9c:	70 f4       	brcc	.+28     	; 0x1eba <vfprintf+0xcc>
    1e9e:	f6 fe       	sbrs	r15, 6
    1ea0:	05 c0       	rjmp	.+10     	; 0x1eac <vfprintf+0xbe>
    1ea2:	98 9c       	mul	r9, r8
    1ea4:	90 2c       	mov	r9, r0
    1ea6:	11 24       	eor	r1, r1
    1ea8:	98 0e       	add	r9, r24
    1eaa:	15 c0       	rjmp	.+42     	; 0x1ed6 <vfprintf+0xe8>
    1eac:	e8 9c       	mul	r14, r8
    1eae:	e0 2c       	mov	r14, r0
    1eb0:	11 24       	eor	r1, r1
    1eb2:	e8 0e       	add	r14, r24
    1eb4:	f0 e2       	ldi	r31, 0x20	; 32
    1eb6:	ff 2a       	or	r15, r31
    1eb8:	0e c0       	rjmp	.+28     	; 0x1ed6 <vfprintf+0xe8>
    1eba:	9e 32       	cpi	r25, 0x2E	; 46
    1ebc:	29 f4       	brne	.+10     	; 0x1ec8 <vfprintf+0xda>
    1ebe:	f6 fc       	sbrc	r15, 6
    1ec0:	6b c1       	rjmp	.+726    	; 0x2198 <vfprintf+0x3aa>
    1ec2:	40 e4       	ldi	r20, 0x40	; 64
    1ec4:	f4 2a       	or	r15, r20
    1ec6:	07 c0       	rjmp	.+14     	; 0x1ed6 <vfprintf+0xe8>
    1ec8:	9c 36       	cpi	r25, 0x6C	; 108
    1eca:	19 f4       	brne	.+6      	; 0x1ed2 <vfprintf+0xe4>
    1ecc:	50 e8       	ldi	r21, 0x80	; 128
    1ece:	f5 2a       	or	r15, r21
    1ed0:	02 c0       	rjmp	.+4      	; 0x1ed6 <vfprintf+0xe8>
    1ed2:	98 36       	cpi	r25, 0x68	; 104
    1ed4:	49 f4       	brne	.+18     	; 0x1ee8 <vfprintf+0xfa>
    1ed6:	f2 01       	movw	r30, r4
    1ed8:	23 fd       	sbrc	r18, 3
    1eda:	95 91       	lpm	r25, Z+
    1edc:	23 ff       	sbrs	r18, 3
    1ede:	91 91       	ld	r25, Z+
    1ee0:	2f 01       	movw	r4, r30
    1ee2:	99 23       	and	r25, r25
    1ee4:	09 f0       	breq	.+2      	; 0x1ee8 <vfprintf+0xfa>
    1ee6:	b8 cf       	rjmp	.-144    	; 0x1e58 <vfprintf+0x6a>
    1ee8:	89 2f       	mov	r24, r25
    1eea:	85 54       	subi	r24, 0x45	; 69
    1eec:	83 30       	cpi	r24, 0x03	; 3
    1eee:	18 f0       	brcs	.+6      	; 0x1ef6 <vfprintf+0x108>
    1ef0:	80 52       	subi	r24, 0x20	; 32
    1ef2:	83 30       	cpi	r24, 0x03	; 3
    1ef4:	38 f4       	brcc	.+14     	; 0x1f04 <vfprintf+0x116>
    1ef6:	44 e0       	ldi	r20, 0x04	; 4
    1ef8:	50 e0       	ldi	r21, 0x00	; 0
    1efa:	a4 0e       	add	r10, r20
    1efc:	b5 1e       	adc	r11, r21
    1efe:	5f e3       	ldi	r21, 0x3F	; 63
    1f00:	59 83       	std	Y+1, r21	; 0x01
    1f02:	0f c0       	rjmp	.+30     	; 0x1f22 <vfprintf+0x134>
    1f04:	93 36       	cpi	r25, 0x63	; 99
    1f06:	31 f0       	breq	.+12     	; 0x1f14 <vfprintf+0x126>
    1f08:	93 37       	cpi	r25, 0x73	; 115
    1f0a:	79 f0       	breq	.+30     	; 0x1f2a <vfprintf+0x13c>
    1f0c:	93 35       	cpi	r25, 0x53	; 83
    1f0e:	09 f0       	breq	.+2      	; 0x1f12 <vfprintf+0x124>
    1f10:	56 c0       	rjmp	.+172    	; 0x1fbe <vfprintf+0x1d0>
    1f12:	20 c0       	rjmp	.+64     	; 0x1f54 <vfprintf+0x166>
    1f14:	f5 01       	movw	r30, r10
    1f16:	80 81       	ld	r24, Z
    1f18:	89 83       	std	Y+1, r24	; 0x01
    1f1a:	42 e0       	ldi	r20, 0x02	; 2
    1f1c:	50 e0       	ldi	r21, 0x00	; 0
    1f1e:	a4 0e       	add	r10, r20
    1f20:	b5 1e       	adc	r11, r21
    1f22:	61 01       	movw	r12, r2
    1f24:	01 e0       	ldi	r16, 0x01	; 1
    1f26:	10 e0       	ldi	r17, 0x00	; 0
    1f28:	12 c0       	rjmp	.+36     	; 0x1f4e <vfprintf+0x160>
    1f2a:	f5 01       	movw	r30, r10
    1f2c:	c0 80       	ld	r12, Z
    1f2e:	d1 80       	ldd	r13, Z+1	; 0x01
    1f30:	f6 fc       	sbrc	r15, 6
    1f32:	03 c0       	rjmp	.+6      	; 0x1f3a <vfprintf+0x14c>
    1f34:	6f ef       	ldi	r22, 0xFF	; 255
    1f36:	7f ef       	ldi	r23, 0xFF	; 255
    1f38:	02 c0       	rjmp	.+4      	; 0x1f3e <vfprintf+0x150>
    1f3a:	69 2d       	mov	r22, r9
    1f3c:	70 e0       	ldi	r23, 0x00	; 0
    1f3e:	42 e0       	ldi	r20, 0x02	; 2
    1f40:	50 e0       	ldi	r21, 0x00	; 0
    1f42:	a4 0e       	add	r10, r20
    1f44:	b5 1e       	adc	r11, r21
    1f46:	c6 01       	movw	r24, r12
    1f48:	0e 94 87 13 	call	0x270e	; 0x270e <strnlen>
    1f4c:	8c 01       	movw	r16, r24
    1f4e:	5f e7       	ldi	r21, 0x7F	; 127
    1f50:	f5 22       	and	r15, r21
    1f52:	14 c0       	rjmp	.+40     	; 0x1f7c <vfprintf+0x18e>
    1f54:	f5 01       	movw	r30, r10
    1f56:	c0 80       	ld	r12, Z
    1f58:	d1 80       	ldd	r13, Z+1	; 0x01
    1f5a:	f6 fc       	sbrc	r15, 6
    1f5c:	03 c0       	rjmp	.+6      	; 0x1f64 <vfprintf+0x176>
    1f5e:	6f ef       	ldi	r22, 0xFF	; 255
    1f60:	7f ef       	ldi	r23, 0xFF	; 255
    1f62:	02 c0       	rjmp	.+4      	; 0x1f68 <vfprintf+0x17a>
    1f64:	69 2d       	mov	r22, r9
    1f66:	70 e0       	ldi	r23, 0x00	; 0
    1f68:	42 e0       	ldi	r20, 0x02	; 2
    1f6a:	50 e0       	ldi	r21, 0x00	; 0
    1f6c:	a4 0e       	add	r10, r20
    1f6e:	b5 1e       	adc	r11, r21
    1f70:	c6 01       	movw	r24, r12
    1f72:	0e 94 7c 13 	call	0x26f8	; 0x26f8 <strnlen_P>
    1f76:	8c 01       	movw	r16, r24
    1f78:	50 e8       	ldi	r21, 0x80	; 128
    1f7a:	f5 2a       	or	r15, r21
    1f7c:	f3 fe       	sbrs	r15, 3
    1f7e:	07 c0       	rjmp	.+14     	; 0x1f8e <vfprintf+0x1a0>
    1f80:	1a c0       	rjmp	.+52     	; 0x1fb6 <vfprintf+0x1c8>
    1f82:	80 e2       	ldi	r24, 0x20	; 32
    1f84:	90 e0       	ldi	r25, 0x00	; 0
    1f86:	b3 01       	movw	r22, r6
    1f88:	0e 94 e4 13 	call	0x27c8	; 0x27c8 <fputc>
    1f8c:	ea 94       	dec	r14
    1f8e:	8e 2d       	mov	r24, r14
    1f90:	90 e0       	ldi	r25, 0x00	; 0
    1f92:	08 17       	cp	r16, r24
    1f94:	19 07       	cpc	r17, r25
    1f96:	a8 f3       	brcs	.-22     	; 0x1f82 <vfprintf+0x194>
    1f98:	0e c0       	rjmp	.+28     	; 0x1fb6 <vfprintf+0x1c8>
    1f9a:	f6 01       	movw	r30, r12
    1f9c:	f7 fc       	sbrc	r15, 7
    1f9e:	85 91       	lpm	r24, Z+
    1fa0:	f7 fe       	sbrs	r15, 7
    1fa2:	81 91       	ld	r24, Z+
    1fa4:	6f 01       	movw	r12, r30
    1fa6:	90 e0       	ldi	r25, 0x00	; 0
    1fa8:	b3 01       	movw	r22, r6
    1faa:	0e 94 e4 13 	call	0x27c8	; 0x27c8 <fputc>
    1fae:	e1 10       	cpse	r14, r1
    1fb0:	ea 94       	dec	r14
    1fb2:	01 50       	subi	r16, 0x01	; 1
    1fb4:	10 40       	sbci	r17, 0x00	; 0
    1fb6:	01 15       	cp	r16, r1
    1fb8:	11 05       	cpc	r17, r1
    1fba:	79 f7       	brne	.-34     	; 0x1f9a <vfprintf+0x1ac>
    1fbc:	ea c0       	rjmp	.+468    	; 0x2192 <vfprintf+0x3a4>
    1fbe:	94 36       	cpi	r25, 0x64	; 100
    1fc0:	11 f0       	breq	.+4      	; 0x1fc6 <vfprintf+0x1d8>
    1fc2:	99 36       	cpi	r25, 0x69	; 105
    1fc4:	69 f5       	brne	.+90     	; 0x2020 <vfprintf+0x232>
    1fc6:	f7 fe       	sbrs	r15, 7
    1fc8:	08 c0       	rjmp	.+16     	; 0x1fda <vfprintf+0x1ec>
    1fca:	f5 01       	movw	r30, r10
    1fcc:	20 81       	ld	r18, Z
    1fce:	31 81       	ldd	r19, Z+1	; 0x01
    1fd0:	42 81       	ldd	r20, Z+2	; 0x02
    1fd2:	53 81       	ldd	r21, Z+3	; 0x03
    1fd4:	84 e0       	ldi	r24, 0x04	; 4
    1fd6:	90 e0       	ldi	r25, 0x00	; 0
    1fd8:	0a c0       	rjmp	.+20     	; 0x1fee <vfprintf+0x200>
    1fda:	f5 01       	movw	r30, r10
    1fdc:	80 81       	ld	r24, Z
    1fde:	91 81       	ldd	r25, Z+1	; 0x01
    1fe0:	9c 01       	movw	r18, r24
    1fe2:	44 27       	eor	r20, r20
    1fe4:	37 fd       	sbrc	r19, 7
    1fe6:	40 95       	com	r20
    1fe8:	54 2f       	mov	r21, r20
    1fea:	82 e0       	ldi	r24, 0x02	; 2
    1fec:	90 e0       	ldi	r25, 0x00	; 0
    1fee:	a8 0e       	add	r10, r24
    1ff0:	b9 1e       	adc	r11, r25
    1ff2:	9f e6       	ldi	r25, 0x6F	; 111
    1ff4:	f9 22       	and	r15, r25
    1ff6:	57 ff       	sbrs	r21, 7
    1ff8:	09 c0       	rjmp	.+18     	; 0x200c <vfprintf+0x21e>
    1ffa:	50 95       	com	r21
    1ffc:	40 95       	com	r20
    1ffe:	30 95       	com	r19
    2000:	21 95       	neg	r18
    2002:	3f 4f       	sbci	r19, 0xFF	; 255
    2004:	4f 4f       	sbci	r20, 0xFF	; 255
    2006:	5f 4f       	sbci	r21, 0xFF	; 255
    2008:	e0 e8       	ldi	r30, 0x80	; 128
    200a:	fe 2a       	or	r15, r30
    200c:	ca 01       	movw	r24, r20
    200e:	b9 01       	movw	r22, r18
    2010:	a1 01       	movw	r20, r2
    2012:	2a e0       	ldi	r18, 0x0A	; 10
    2014:	30 e0       	ldi	r19, 0x00	; 0
    2016:	0e 94 2a 14 	call	0x2854	; 0x2854 <__ultoa_invert>
    201a:	d8 2e       	mov	r13, r24
    201c:	d2 18       	sub	r13, r2
    201e:	40 c0       	rjmp	.+128    	; 0x20a0 <vfprintf+0x2b2>
    2020:	95 37       	cpi	r25, 0x75	; 117
    2022:	29 f4       	brne	.+10     	; 0x202e <vfprintf+0x240>
    2024:	1f 2d       	mov	r17, r15
    2026:	1f 7e       	andi	r17, 0xEF	; 239
    2028:	2a e0       	ldi	r18, 0x0A	; 10
    202a:	30 e0       	ldi	r19, 0x00	; 0
    202c:	1d c0       	rjmp	.+58     	; 0x2068 <vfprintf+0x27a>
    202e:	1f 2d       	mov	r17, r15
    2030:	19 7f       	andi	r17, 0xF9	; 249
    2032:	9f 36       	cpi	r25, 0x6F	; 111
    2034:	61 f0       	breq	.+24     	; 0x204e <vfprintf+0x260>
    2036:	90 37       	cpi	r25, 0x70	; 112
    2038:	20 f4       	brcc	.+8      	; 0x2042 <vfprintf+0x254>
    203a:	98 35       	cpi	r25, 0x58	; 88
    203c:	09 f0       	breq	.+2      	; 0x2040 <vfprintf+0x252>
    203e:	ac c0       	rjmp	.+344    	; 0x2198 <vfprintf+0x3aa>
    2040:	0f c0       	rjmp	.+30     	; 0x2060 <vfprintf+0x272>
    2042:	90 37       	cpi	r25, 0x70	; 112
    2044:	39 f0       	breq	.+14     	; 0x2054 <vfprintf+0x266>
    2046:	98 37       	cpi	r25, 0x78	; 120
    2048:	09 f0       	breq	.+2      	; 0x204c <vfprintf+0x25e>
    204a:	a6 c0       	rjmp	.+332    	; 0x2198 <vfprintf+0x3aa>
    204c:	04 c0       	rjmp	.+8      	; 0x2056 <vfprintf+0x268>
    204e:	28 e0       	ldi	r18, 0x08	; 8
    2050:	30 e0       	ldi	r19, 0x00	; 0
    2052:	0a c0       	rjmp	.+20     	; 0x2068 <vfprintf+0x27a>
    2054:	10 61       	ori	r17, 0x10	; 16
    2056:	14 fd       	sbrc	r17, 4
    2058:	14 60       	ori	r17, 0x04	; 4
    205a:	20 e1       	ldi	r18, 0x10	; 16
    205c:	30 e0       	ldi	r19, 0x00	; 0
    205e:	04 c0       	rjmp	.+8      	; 0x2068 <vfprintf+0x27a>
    2060:	14 fd       	sbrc	r17, 4
    2062:	16 60       	ori	r17, 0x06	; 6
    2064:	20 e1       	ldi	r18, 0x10	; 16
    2066:	32 e0       	ldi	r19, 0x02	; 2
    2068:	17 ff       	sbrs	r17, 7
    206a:	08 c0       	rjmp	.+16     	; 0x207c <vfprintf+0x28e>
    206c:	f5 01       	movw	r30, r10
    206e:	60 81       	ld	r22, Z
    2070:	71 81       	ldd	r23, Z+1	; 0x01
    2072:	82 81       	ldd	r24, Z+2	; 0x02
    2074:	93 81       	ldd	r25, Z+3	; 0x03
    2076:	44 e0       	ldi	r20, 0x04	; 4
    2078:	50 e0       	ldi	r21, 0x00	; 0
    207a:	08 c0       	rjmp	.+16     	; 0x208c <vfprintf+0x29e>
    207c:	f5 01       	movw	r30, r10
    207e:	80 81       	ld	r24, Z
    2080:	91 81       	ldd	r25, Z+1	; 0x01
    2082:	bc 01       	movw	r22, r24
    2084:	80 e0       	ldi	r24, 0x00	; 0
    2086:	90 e0       	ldi	r25, 0x00	; 0
    2088:	42 e0       	ldi	r20, 0x02	; 2
    208a:	50 e0       	ldi	r21, 0x00	; 0
    208c:	a4 0e       	add	r10, r20
    208e:	b5 1e       	adc	r11, r21
    2090:	a1 01       	movw	r20, r2
    2092:	0e 94 2a 14 	call	0x2854	; 0x2854 <__ultoa_invert>
    2096:	d8 2e       	mov	r13, r24
    2098:	d2 18       	sub	r13, r2
    209a:	8f e7       	ldi	r24, 0x7F	; 127
    209c:	f8 2e       	mov	r15, r24
    209e:	f1 22       	and	r15, r17
    20a0:	f6 fe       	sbrs	r15, 6
    20a2:	0b c0       	rjmp	.+22     	; 0x20ba <vfprintf+0x2cc>
    20a4:	5e ef       	ldi	r21, 0xFE	; 254
    20a6:	f5 22       	and	r15, r21
    20a8:	d9 14       	cp	r13, r9
    20aa:	38 f4       	brcc	.+14     	; 0x20ba <vfprintf+0x2cc>
    20ac:	f4 fe       	sbrs	r15, 4
    20ae:	07 c0       	rjmp	.+14     	; 0x20be <vfprintf+0x2d0>
    20b0:	f2 fc       	sbrc	r15, 2
    20b2:	05 c0       	rjmp	.+10     	; 0x20be <vfprintf+0x2d0>
    20b4:	8f ee       	ldi	r24, 0xEF	; 239
    20b6:	f8 22       	and	r15, r24
    20b8:	02 c0       	rjmp	.+4      	; 0x20be <vfprintf+0x2d0>
    20ba:	1d 2d       	mov	r17, r13
    20bc:	01 c0       	rjmp	.+2      	; 0x20c0 <vfprintf+0x2d2>
    20be:	19 2d       	mov	r17, r9
    20c0:	f4 fe       	sbrs	r15, 4
    20c2:	0d c0       	rjmp	.+26     	; 0x20de <vfprintf+0x2f0>
    20c4:	fe 01       	movw	r30, r28
    20c6:	ed 0d       	add	r30, r13
    20c8:	f1 1d       	adc	r31, r1
    20ca:	80 81       	ld	r24, Z
    20cc:	80 33       	cpi	r24, 0x30	; 48
    20ce:	19 f4       	brne	.+6      	; 0x20d6 <vfprintf+0x2e8>
    20d0:	99 ee       	ldi	r25, 0xE9	; 233
    20d2:	f9 22       	and	r15, r25
    20d4:	08 c0       	rjmp	.+16     	; 0x20e6 <vfprintf+0x2f8>
    20d6:	1f 5f       	subi	r17, 0xFF	; 255
    20d8:	f2 fe       	sbrs	r15, 2
    20da:	05 c0       	rjmp	.+10     	; 0x20e6 <vfprintf+0x2f8>
    20dc:	03 c0       	rjmp	.+6      	; 0x20e4 <vfprintf+0x2f6>
    20de:	8f 2d       	mov	r24, r15
    20e0:	86 78       	andi	r24, 0x86	; 134
    20e2:	09 f0       	breq	.+2      	; 0x20e6 <vfprintf+0x2f8>
    20e4:	1f 5f       	subi	r17, 0xFF	; 255
    20e6:	0f 2d       	mov	r16, r15
    20e8:	f3 fc       	sbrc	r15, 3
    20ea:	14 c0       	rjmp	.+40     	; 0x2114 <vfprintf+0x326>
    20ec:	f0 fe       	sbrs	r15, 0
    20ee:	0f c0       	rjmp	.+30     	; 0x210e <vfprintf+0x320>
    20f0:	1e 15       	cp	r17, r14
    20f2:	10 f0       	brcs	.+4      	; 0x20f8 <vfprintf+0x30a>
    20f4:	9d 2c       	mov	r9, r13
    20f6:	0b c0       	rjmp	.+22     	; 0x210e <vfprintf+0x320>
    20f8:	9d 2c       	mov	r9, r13
    20fa:	9e 0c       	add	r9, r14
    20fc:	91 1a       	sub	r9, r17
    20fe:	1e 2d       	mov	r17, r14
    2100:	06 c0       	rjmp	.+12     	; 0x210e <vfprintf+0x320>
    2102:	80 e2       	ldi	r24, 0x20	; 32
    2104:	90 e0       	ldi	r25, 0x00	; 0
    2106:	b3 01       	movw	r22, r6
    2108:	0e 94 e4 13 	call	0x27c8	; 0x27c8 <fputc>
    210c:	1f 5f       	subi	r17, 0xFF	; 255
    210e:	1e 15       	cp	r17, r14
    2110:	c0 f3       	brcs	.-16     	; 0x2102 <vfprintf+0x314>
    2112:	04 c0       	rjmp	.+8      	; 0x211c <vfprintf+0x32e>
    2114:	1e 15       	cp	r17, r14
    2116:	10 f4       	brcc	.+4      	; 0x211c <vfprintf+0x32e>
    2118:	e1 1a       	sub	r14, r17
    211a:	01 c0       	rjmp	.+2      	; 0x211e <vfprintf+0x330>
    211c:	ee 24       	eor	r14, r14
    211e:	04 ff       	sbrs	r16, 4
    2120:	0f c0       	rjmp	.+30     	; 0x2140 <vfprintf+0x352>
    2122:	80 e3       	ldi	r24, 0x30	; 48
    2124:	90 e0       	ldi	r25, 0x00	; 0
    2126:	b3 01       	movw	r22, r6
    2128:	0e 94 e4 13 	call	0x27c8	; 0x27c8 <fputc>
    212c:	02 ff       	sbrs	r16, 2
    212e:	1d c0       	rjmp	.+58     	; 0x216a <vfprintf+0x37c>
    2130:	01 fd       	sbrc	r16, 1
    2132:	03 c0       	rjmp	.+6      	; 0x213a <vfprintf+0x34c>
    2134:	88 e7       	ldi	r24, 0x78	; 120
    2136:	90 e0       	ldi	r25, 0x00	; 0
    2138:	0e c0       	rjmp	.+28     	; 0x2156 <vfprintf+0x368>
    213a:	88 e5       	ldi	r24, 0x58	; 88
    213c:	90 e0       	ldi	r25, 0x00	; 0
    213e:	0b c0       	rjmp	.+22     	; 0x2156 <vfprintf+0x368>
    2140:	80 2f       	mov	r24, r16
    2142:	86 78       	andi	r24, 0x86	; 134
    2144:	91 f0       	breq	.+36     	; 0x216a <vfprintf+0x37c>
    2146:	01 ff       	sbrs	r16, 1
    2148:	02 c0       	rjmp	.+4      	; 0x214e <vfprintf+0x360>
    214a:	8b e2       	ldi	r24, 0x2B	; 43
    214c:	01 c0       	rjmp	.+2      	; 0x2150 <vfprintf+0x362>
    214e:	80 e2       	ldi	r24, 0x20	; 32
    2150:	f7 fc       	sbrc	r15, 7
    2152:	8d e2       	ldi	r24, 0x2D	; 45
    2154:	90 e0       	ldi	r25, 0x00	; 0
    2156:	b3 01       	movw	r22, r6
    2158:	0e 94 e4 13 	call	0x27c8	; 0x27c8 <fputc>
    215c:	06 c0       	rjmp	.+12     	; 0x216a <vfprintf+0x37c>
    215e:	80 e3       	ldi	r24, 0x30	; 48
    2160:	90 e0       	ldi	r25, 0x00	; 0
    2162:	b3 01       	movw	r22, r6
    2164:	0e 94 e4 13 	call	0x27c8	; 0x27c8 <fputc>
    2168:	9a 94       	dec	r9
    216a:	d9 14       	cp	r13, r9
    216c:	c0 f3       	brcs	.-16     	; 0x215e <vfprintf+0x370>
    216e:	da 94       	dec	r13
    2170:	f1 01       	movw	r30, r2
    2172:	ed 0d       	add	r30, r13
    2174:	f1 1d       	adc	r31, r1
    2176:	80 81       	ld	r24, Z
    2178:	90 e0       	ldi	r25, 0x00	; 0
    217a:	b3 01       	movw	r22, r6
    217c:	0e 94 e4 13 	call	0x27c8	; 0x27c8 <fputc>
    2180:	dd 20       	and	r13, r13
    2182:	a9 f7       	brne	.-22     	; 0x216e <vfprintf+0x380>
    2184:	06 c0       	rjmp	.+12     	; 0x2192 <vfprintf+0x3a4>
    2186:	80 e2       	ldi	r24, 0x20	; 32
    2188:	90 e0       	ldi	r25, 0x00	; 0
    218a:	b3 01       	movw	r22, r6
    218c:	0e 94 e4 13 	call	0x27c8	; 0x27c8 <fputc>
    2190:	ea 94       	dec	r14
    2192:	ee 20       	and	r14, r14
    2194:	c1 f7       	brne	.-16     	; 0x2186 <vfprintf+0x398>
    2196:	43 ce       	rjmp	.-890    	; 0x1e1e <vfprintf+0x30>
    2198:	f3 01       	movw	r30, r6
    219a:	66 81       	ldd	r22, Z+6	; 0x06
    219c:	77 81       	ldd	r23, Z+7	; 0x07
    219e:	cb 01       	movw	r24, r22
    21a0:	2b 96       	adiw	r28, 0x0b	; 11
    21a2:	e2 e1       	ldi	r30, 0x12	; 18
    21a4:	0c 94 7d 0e 	jmp	0x1cfa	; 0x1cfa <__epilogue_restores__>

000021a8 <putval>:
    21a8:	fc 01       	movw	r30, r24
    21aa:	20 fd       	sbrc	r18, 0
    21ac:	08 c0       	rjmp	.+16     	; 0x21be <putval+0x16>
    21ae:	23 fd       	sbrc	r18, 3
    21b0:	05 c0       	rjmp	.+10     	; 0x21bc <putval+0x14>
    21b2:	22 ff       	sbrs	r18, 2
    21b4:	02 c0       	rjmp	.+4      	; 0x21ba <putval+0x12>
    21b6:	73 83       	std	Z+3, r23	; 0x03
    21b8:	62 83       	std	Z+2, r22	; 0x02
    21ba:	51 83       	std	Z+1, r21	; 0x01
    21bc:	40 83       	st	Z, r20
    21be:	08 95       	ret

000021c0 <mulacc>:
    21c0:	ef 92       	push	r14
    21c2:	ff 92       	push	r15
    21c4:	0f 93       	push	r16
    21c6:	1f 93       	push	r17
    21c8:	44 ff       	sbrs	r20, 4
    21ca:	02 c0       	rjmp	.+4      	; 0x21d0 <mulacc+0x10>
    21cc:	33 e0       	ldi	r19, 0x03	; 3
    21ce:	11 c0       	rjmp	.+34     	; 0x21f2 <mulacc+0x32>
    21d0:	46 ff       	sbrs	r20, 6
    21d2:	02 c0       	rjmp	.+4      	; 0x21d8 <mulacc+0x18>
    21d4:	34 e0       	ldi	r19, 0x04	; 4
    21d6:	0d c0       	rjmp	.+26     	; 0x21f2 <mulacc+0x32>
    21d8:	db 01       	movw	r26, r22
    21da:	fc 01       	movw	r30, r24
    21dc:	aa 0f       	add	r26, r26
    21de:	bb 1f       	adc	r27, r27
    21e0:	ee 1f       	adc	r30, r30
    21e2:	ff 1f       	adc	r31, r31
    21e4:	10 94       	com	r1
    21e6:	d1 f7       	brne	.-12     	; 0x21dc <mulacc+0x1c>
    21e8:	6a 0f       	add	r22, r26
    21ea:	7b 1f       	adc	r23, r27
    21ec:	8e 1f       	adc	r24, r30
    21ee:	9f 1f       	adc	r25, r31
    21f0:	31 e0       	ldi	r19, 0x01	; 1
    21f2:	66 0f       	add	r22, r22
    21f4:	77 1f       	adc	r23, r23
    21f6:	88 1f       	adc	r24, r24
    21f8:	99 1f       	adc	r25, r25
    21fa:	31 50       	subi	r19, 0x01	; 1
    21fc:	d1 f7       	brne	.-12     	; 0x21f2 <mulacc+0x32>
    21fe:	7b 01       	movw	r14, r22
    2200:	8c 01       	movw	r16, r24
    2202:	e2 0e       	add	r14, r18
    2204:	f1 1c       	adc	r15, r1
    2206:	01 1d       	adc	r16, r1
    2208:	11 1d       	adc	r17, r1
    220a:	a8 01       	movw	r20, r16
    220c:	97 01       	movw	r18, r14
    220e:	b7 01       	movw	r22, r14
    2210:	ca 01       	movw	r24, r20
    2212:	1f 91       	pop	r17
    2214:	0f 91       	pop	r16
    2216:	ff 90       	pop	r15
    2218:	ef 90       	pop	r14
    221a:	08 95       	ret

0000221c <skip_spaces>:
    221c:	0f 93       	push	r16
    221e:	1f 93       	push	r17
    2220:	cf 93       	push	r28
    2222:	df 93       	push	r29
    2224:	8c 01       	movw	r16, r24
    2226:	c8 01       	movw	r24, r16
    2228:	0e 94 a2 13 	call	0x2744	; 0x2744 <fgetc>
    222c:	ec 01       	movw	r28, r24
    222e:	97 fd       	sbrc	r25, 7
    2230:	08 c0       	rjmp	.+16     	; 0x2242 <skip_spaces+0x26>
    2232:	0e 94 69 13 	call	0x26d2	; 0x26d2 <isspace>
    2236:	89 2b       	or	r24, r25
    2238:	b1 f7       	brne	.-20     	; 0x2226 <skip_spaces+0xa>
    223a:	ce 01       	movw	r24, r28
    223c:	b8 01       	movw	r22, r16
    223e:	0e 94 10 14 	call	0x2820	; 0x2820 <ungetc>
    2242:	ce 01       	movw	r24, r28
    2244:	df 91       	pop	r29
    2246:	cf 91       	pop	r28
    2248:	1f 91       	pop	r17
    224a:	0f 91       	pop	r16
    224c:	08 95       	ret

0000224e <conv_int>:
    224e:	a0 e0       	ldi	r26, 0x00	; 0
    2250:	b0 e0       	ldi	r27, 0x00	; 0
    2252:	ed e2       	ldi	r30, 0x2D	; 45
    2254:	f1 e1       	ldi	r31, 0x11	; 17
    2256:	0c 94 69 0e 	jmp	0x1cd2	; 0x1cd2 <__prologue_saves__+0x10>
    225a:	ec 01       	movw	r28, r24
    225c:	c6 2e       	mov	r12, r22
    225e:	5a 01       	movw	r10, r20
    2260:	12 2f       	mov	r17, r18
    2262:	0e 94 a2 13 	call	0x2744	; 0x2744 <fgetc>
    2266:	ac 01       	movw	r20, r24
    2268:	8b 32       	cpi	r24, 0x2B	; 43
    226a:	19 f0       	breq	.+6      	; 0x2272 <conv_int+0x24>
    226c:	8d 32       	cpi	r24, 0x2D	; 45
    226e:	51 f4       	brne	.+20     	; 0x2284 <conv_int+0x36>
    2270:	10 68       	ori	r17, 0x80	; 128
    2272:	ca 94       	dec	r12
    2274:	09 f4       	brne	.+2      	; 0x2278 <conv_int+0x2a>
    2276:	6d c0       	rjmp	.+218    	; 0x2352 <conv_int+0x104>
    2278:	ce 01       	movw	r24, r28
    227a:	0e 94 a2 13 	call	0x2744	; 0x2744 <fgetc>
    227e:	ac 01       	movw	r20, r24
    2280:	97 fd       	sbrc	r25, 7
    2282:	67 c0       	rjmp	.+206    	; 0x2352 <conv_int+0x104>
    2284:	6d ef       	ldi	r22, 0xFD	; 253
    2286:	d6 2e       	mov	r13, r22
    2288:	d1 22       	and	r13, r17
    228a:	8d 2d       	mov	r24, r13
    228c:	80 73       	andi	r24, 0x30	; 48
    228e:	01 f5       	brne	.+64     	; 0x22d0 <conv_int+0x82>
    2290:	40 33       	cpi	r20, 0x30	; 48
    2292:	f1 f4       	brne	.+60     	; 0x22d0 <conv_int+0x82>
    2294:	ca 94       	dec	r12
    2296:	09 f4       	brne	.+2      	; 0x229a <conv_int+0x4c>
    2298:	47 c0       	rjmp	.+142    	; 0x2328 <conv_int+0xda>
    229a:	ce 01       	movw	r24, r28
    229c:	0e 94 a2 13 	call	0x2744	; 0x2744 <fgetc>
    22a0:	ac 01       	movw	r20, r24
    22a2:	97 fd       	sbrc	r25, 7
    22a4:	41 c0       	rjmp	.+130    	; 0x2328 <conv_int+0xda>
    22a6:	82 e0       	ldi	r24, 0x02	; 2
    22a8:	d8 2a       	or	r13, r24
    22aa:	48 37       	cpi	r20, 0x78	; 120
    22ac:	11 f0       	breq	.+4      	; 0x22b2 <conv_int+0x64>
    22ae:	48 35       	cpi	r20, 0x58	; 88
    22b0:	59 f4       	brne	.+22     	; 0x22c8 <conv_int+0x7a>
    22b2:	80 e4       	ldi	r24, 0x40	; 64
    22b4:	d8 2a       	or	r13, r24
    22b6:	ca 94       	dec	r12
    22b8:	b9 f1       	breq	.+110    	; 0x2328 <conv_int+0xda>
    22ba:	ce 01       	movw	r24, r28
    22bc:	0e 94 a2 13 	call	0x2744	; 0x2744 <fgetc>
    22c0:	ac 01       	movw	r20, r24
    22c2:	99 23       	and	r25, r25
    22c4:	2c f4       	brge	.+10     	; 0x22d0 <conv_int+0x82>
    22c6:	30 c0       	rjmp	.+96     	; 0x2328 <conv_int+0xda>
    22c8:	d6 fc       	sbrc	r13, 6
    22ca:	02 c0       	rjmp	.+4      	; 0x22d0 <conv_int+0x82>
    22cc:	80 e1       	ldi	r24, 0x10	; 16
    22ce:	d8 2a       	or	r13, r24
    22d0:	ee 24       	eor	r14, r14
    22d2:	ff 24       	eor	r15, r15
    22d4:	87 01       	movw	r16, r14
    22d6:	24 2f       	mov	r18, r20
    22d8:	20 53       	subi	r18, 0x30	; 48
    22da:	28 30       	cpi	r18, 0x08	; 8
    22dc:	88 f0       	brcs	.+34     	; 0x2300 <conv_int+0xb2>
    22de:	d4 fc       	sbrc	r13, 4
    22e0:	09 c0       	rjmp	.+18     	; 0x22f4 <conv_int+0xa6>
    22e2:	2a 30       	cpi	r18, 0x0A	; 10
    22e4:	68 f0       	brcs	.+26     	; 0x2300 <conv_int+0xb2>
    22e6:	d6 fe       	sbrs	r13, 6
    22e8:	05 c0       	rjmp	.+10     	; 0x22f4 <conv_int+0xa6>
    22ea:	2f 7d       	andi	r18, 0xDF	; 223
    22ec:	82 2f       	mov	r24, r18
    22ee:	81 51       	subi	r24, 0x11	; 17
    22f0:	86 30       	cpi	r24, 0x06	; 6
    22f2:	28 f0       	brcs	.+10     	; 0x22fe <conv_int+0xb0>
    22f4:	ca 01       	movw	r24, r20
    22f6:	be 01       	movw	r22, r28
    22f8:	0e 94 10 14 	call	0x2820	; 0x2820 <ungetc>
    22fc:	12 c0       	rjmp	.+36     	; 0x2322 <conv_int+0xd4>
    22fe:	27 50       	subi	r18, 0x07	; 7
    2300:	c8 01       	movw	r24, r16
    2302:	b7 01       	movw	r22, r14
    2304:	4d 2d       	mov	r20, r13
    2306:	0e 94 e0 10 	call	0x21c0	; 0x21c0 <mulacc>
    230a:	7b 01       	movw	r14, r22
    230c:	8c 01       	movw	r16, r24
    230e:	82 e0       	ldi	r24, 0x02	; 2
    2310:	d8 2a       	or	r13, r24
    2312:	ca 94       	dec	r12
    2314:	61 f0       	breq	.+24     	; 0x232e <conv_int+0xe0>
    2316:	ce 01       	movw	r24, r28
    2318:	0e 94 a2 13 	call	0x2744	; 0x2744 <fgetc>
    231c:	ac 01       	movw	r20, r24
    231e:	97 ff       	sbrs	r25, 7
    2320:	da cf       	rjmp	.-76     	; 0x22d6 <conv_int+0x88>
    2322:	d1 fc       	sbrc	r13, 1
    2324:	04 c0       	rjmp	.+8      	; 0x232e <conv_int+0xe0>
    2326:	15 c0       	rjmp	.+42     	; 0x2352 <conv_int+0x104>
    2328:	ee 24       	eor	r14, r14
    232a:	ff 24       	eor	r15, r15
    232c:	87 01       	movw	r16, r14
    232e:	d7 fe       	sbrs	r13, 7
    2330:	08 c0       	rjmp	.+16     	; 0x2342 <conv_int+0xf4>
    2332:	10 95       	com	r17
    2334:	00 95       	com	r16
    2336:	f0 94       	com	r15
    2338:	e0 94       	com	r14
    233a:	e1 1c       	adc	r14, r1
    233c:	f1 1c       	adc	r15, r1
    233e:	01 1d       	adc	r16, r1
    2340:	11 1d       	adc	r17, r1
    2342:	c5 01       	movw	r24, r10
    2344:	b8 01       	movw	r22, r16
    2346:	a7 01       	movw	r20, r14
    2348:	2d 2d       	mov	r18, r13
    234a:	0e 94 d4 10 	call	0x21a8	; 0x21a8 <putval>
    234e:	81 e0       	ldi	r24, 0x01	; 1
    2350:	01 c0       	rjmp	.+2      	; 0x2354 <conv_int+0x106>
    2352:	80 e0       	ldi	r24, 0x00	; 0
    2354:	cd b7       	in	r28, 0x3d	; 61
    2356:	de b7       	in	r29, 0x3e	; 62
    2358:	ea e0       	ldi	r30, 0x0A	; 10
    235a:	0c 94 85 0e 	jmp	0x1d0a	; 0x1d0a <__epilogue_restores__+0x10>

0000235e <conv_brk>:
    235e:	a0 e2       	ldi	r26, 0x20	; 32
    2360:	b0 e0       	ldi	r27, 0x00	; 0
    2362:	e5 eb       	ldi	r30, 0xB5	; 181
    2364:	f1 e1       	ldi	r31, 0x11	; 17
    2366:	0c 94 65 0e 	jmp	0x1cca	; 0x1cca <__prologue_saves__+0x8>
    236a:	6c 01       	movw	r12, r24
    236c:	a6 2e       	mov	r10, r22
    236e:	8a 01       	movw	r16, r20
    2370:	79 01       	movw	r14, r18
    2372:	fe 01       	movw	r30, r28
    2374:	31 96       	adiw	r30, 0x01	; 1
    2376:	80 e2       	ldi	r24, 0x20	; 32
    2378:	df 01       	movw	r26, r30
    237a:	1d 92       	st	X+, r1
    237c:	8a 95       	dec	r24
    237e:	e9 f7       	brne	.-6      	; 0x237a <conv_brk+0x1c>
    2380:	70 e0       	ldi	r23, 0x00	; 0
    2382:	30 e0       	ldi	r19, 0x00	; 0
    2384:	60 e0       	ldi	r22, 0x00	; 0
    2386:	40 e0       	ldi	r20, 0x00	; 0
    2388:	50 e0       	ldi	r21, 0x00	; 0
    238a:	4f 01       	movw	r8, r30
    238c:	a1 e0       	ldi	r26, 0x01	; 1
    238e:	b0 e0       	ldi	r27, 0x00	; 0
    2390:	f6 01       	movw	r30, r12
    2392:	83 81       	ldd	r24, Z+3	; 0x03
    2394:	f7 01       	movw	r30, r14
    2396:	83 fd       	sbrc	r24, 3
    2398:	25 91       	lpm	r18, Z+
    239a:	83 ff       	sbrs	r24, 3
    239c:	21 91       	ld	r18, Z+
    239e:	7f 01       	movw	r14, r30
    23a0:	22 23       	and	r18, r18
    23a2:	09 f4       	brne	.+2      	; 0x23a6 <conv_brk+0x48>
    23a4:	7e c0       	rjmp	.+252    	; 0x24a2 <conv_brk+0x144>
    23a6:	2e 35       	cpi	r18, 0x5E	; 94
    23a8:	19 f4       	brne	.+6      	; 0x23b0 <conv_brk+0x52>
    23aa:	41 15       	cp	r20, r1
    23ac:	51 05       	cpc	r21, r1
    23ae:	69 f1       	breq	.+90     	; 0x240a <conv_brk+0xac>
    23b0:	87 2f       	mov	r24, r23
    23b2:	90 e0       	ldi	r25, 0x00	; 0
    23b4:	84 17       	cp	r24, r20
    23b6:	95 07       	cpc	r25, r21
    23b8:	44 f4       	brge	.+16     	; 0x23ca <conv_brk+0x6c>
    23ba:	2d 35       	cpi	r18, 0x5D	; 93
    23bc:	51 f1       	breq	.+84     	; 0x2412 <conv_brk+0xb4>
    23be:	2d 32       	cpi	r18, 0x2D	; 45
    23c0:	21 f4       	brne	.+8      	; 0x23ca <conv_brk+0x6c>
    23c2:	33 23       	and	r19, r19
    23c4:	29 f4       	brne	.+10     	; 0x23d0 <conv_brk+0x72>
    23c6:	31 e0       	ldi	r19, 0x01	; 1
    23c8:	21 c0       	rjmp	.+66     	; 0x240c <conv_brk+0xae>
    23ca:	33 23       	and	r19, r19
    23cc:	09 f4       	brne	.+2      	; 0x23d0 <conv_brk+0x72>
    23ce:	62 2f       	mov	r22, r18
    23d0:	32 2f       	mov	r19, r18
    23d2:	83 2f       	mov	r24, r19
    23d4:	86 95       	lsr	r24
    23d6:	86 95       	lsr	r24
    23d8:	86 95       	lsr	r24
    23da:	f4 01       	movw	r30, r8
    23dc:	e8 0f       	add	r30, r24
    23de:	f1 1d       	adc	r31, r1
    23e0:	83 2f       	mov	r24, r19
    23e2:	87 70       	andi	r24, 0x07	; 7
    23e4:	3d 01       	movw	r6, r26
    23e6:	02 c0       	rjmp	.+4      	; 0x23ec <conv_brk+0x8e>
    23e8:	66 0c       	add	r6, r6
    23ea:	77 1c       	adc	r7, r7
    23ec:	8a 95       	dec	r24
    23ee:	e2 f7       	brpl	.-8      	; 0x23e8 <conv_brk+0x8a>
    23f0:	20 81       	ld	r18, Z
    23f2:	26 29       	or	r18, r6
    23f4:	20 83       	st	Z, r18
    23f6:	36 17       	cp	r19, r22
    23f8:	11 f4       	brne	.+4      	; 0x23fe <conv_brk+0xa0>
    23fa:	30 e0       	ldi	r19, 0x00	; 0
    23fc:	07 c0       	rjmp	.+14     	; 0x240c <conv_brk+0xae>
    23fe:	36 17       	cp	r19, r22
    2400:	10 f4       	brcc	.+4      	; 0x2406 <conv_brk+0xa8>
    2402:	3f 5f       	subi	r19, 0xFF	; 255
    2404:	e6 cf       	rjmp	.-52     	; 0x23d2 <conv_brk+0x74>
    2406:	31 50       	subi	r19, 0x01	; 1
    2408:	e4 cf       	rjmp	.-56     	; 0x23d2 <conv_brk+0x74>
    240a:	71 e0       	ldi	r23, 0x01	; 1
    240c:	4f 5f       	subi	r20, 0xFF	; 255
    240e:	5f 4f       	sbci	r21, 0xFF	; 255
    2410:	bf cf       	rjmp	.-130    	; 0x2390 <conv_brk+0x32>
    2412:	33 23       	and	r19, r19
    2414:	19 f0       	breq	.+6      	; 0x241c <conv_brk+0xbe>
    2416:	8e 81       	ldd	r24, Y+6	; 0x06
    2418:	80 62       	ori	r24, 0x20	; 32
    241a:	8e 83       	std	Y+6, r24	; 0x06
    241c:	77 23       	and	r23, r23
    241e:	59 f0       	breq	.+22     	; 0x2436 <conv_brk+0xd8>
    2420:	fe 01       	movw	r30, r28
    2422:	31 96       	adiw	r30, 0x01	; 1
    2424:	9e 01       	movw	r18, r28
    2426:	2f 5d       	subi	r18, 0xDF	; 223
    2428:	3f 4f       	sbci	r19, 0xFF	; 255
    242a:	80 81       	ld	r24, Z
    242c:	80 95       	com	r24
    242e:	81 93       	st	Z+, r24
    2430:	e2 17       	cp	r30, r18
    2432:	f3 07       	cpc	r31, r19
    2434:	d1 f7       	brne	.-12     	; 0x242a <conv_brk+0xcc>
    2436:	bb 24       	eor	r11, r11
    2438:	b3 94       	inc	r11
    243a:	4e 01       	movw	r8, r28
    243c:	08 94       	sec
    243e:	81 1c       	adc	r8, r1
    2440:	91 1c       	adc	r9, r1
    2442:	c6 01       	movw	r24, r12
    2444:	0e 94 a2 13 	call	0x2744	; 0x2744 <fgetc>
    2448:	ac 01       	movw	r20, r24
    244a:	97 fd       	sbrc	r25, 7
    244c:	22 c0       	rjmp	.+68     	; 0x2492 <conv_brk+0x134>
    244e:	86 95       	lsr	r24
    2450:	86 95       	lsr	r24
    2452:	86 95       	lsr	r24
    2454:	f4 01       	movw	r30, r8
    2456:	e8 0f       	add	r30, r24
    2458:	f1 1d       	adc	r31, r1
    245a:	80 81       	ld	r24, Z
    245c:	90 e0       	ldi	r25, 0x00	; 0
    245e:	9a 01       	movw	r18, r20
    2460:	27 70       	andi	r18, 0x07	; 7
    2462:	30 70       	andi	r19, 0x00	; 0
    2464:	02 c0       	rjmp	.+4      	; 0x246a <conv_brk+0x10c>
    2466:	95 95       	asr	r25
    2468:	87 95       	ror	r24
    246a:	2a 95       	dec	r18
    246c:	e2 f7       	brpl	.-8      	; 0x2466 <conv_brk+0x108>
    246e:	80 fd       	sbrc	r24, 0
    2470:	05 c0       	rjmp	.+10     	; 0x247c <conv_brk+0x11e>
    2472:	ca 01       	movw	r24, r20
    2474:	b6 01       	movw	r22, r12
    2476:	0e 94 10 14 	call	0x2820	; 0x2820 <ungetc>
    247a:	0b c0       	rjmp	.+22     	; 0x2492 <conv_brk+0x134>
    247c:	01 15       	cp	r16, r1
    247e:	11 05       	cpc	r17, r1
    2480:	19 f0       	breq	.+6      	; 0x2488 <conv_brk+0x12a>
    2482:	d8 01       	movw	r26, r16
    2484:	4d 93       	st	X+, r20
    2486:	8d 01       	movw	r16, r26
    2488:	aa 94       	dec	r10
    248a:	bb 24       	eor	r11, r11
    248c:	aa 20       	and	r10, r10
    248e:	c9 f6       	brne	.-78     	; 0x2442 <conv_brk+0xe4>
    2490:	02 c0       	rjmp	.+4      	; 0x2496 <conv_brk+0x138>
    2492:	bb 20       	and	r11, r11
    2494:	31 f4       	brne	.+12     	; 0x24a2 <conv_brk+0x144>
    2496:	01 15       	cp	r16, r1
    2498:	11 05       	cpc	r17, r1
    249a:	29 f0       	breq	.+10     	; 0x24a6 <conv_brk+0x148>
    249c:	f8 01       	movw	r30, r16
    249e:	10 82       	st	Z, r1
    24a0:	02 c0       	rjmp	.+4      	; 0x24a6 <conv_brk+0x148>
    24a2:	ee 24       	eor	r14, r14
    24a4:	ff 24       	eor	r15, r15
    24a6:	c7 01       	movw	r24, r14
    24a8:	a0 96       	adiw	r28, 0x20	; 32
    24aa:	ee e0       	ldi	r30, 0x0E	; 14
    24ac:	0c 94 81 0e 	jmp	0x1d02	; 0x1d02 <__epilogue_restores__+0x8>

000024b0 <vfscanf>:
    24b0:	a0 e0       	ldi	r26, 0x00	; 0
    24b2:	b0 e0       	ldi	r27, 0x00	; 0
    24b4:	ee e5       	ldi	r30, 0x5E	; 94
    24b6:	f2 e1       	ldi	r31, 0x12	; 18
    24b8:	0c 94 65 0e 	jmp	0x1cca	; 0x1cca <__prologue_saves__+0x8>
    24bc:	5c 01       	movw	r10, r24
    24be:	6b 01       	movw	r12, r22
    24c0:	3a 01       	movw	r6, r20
    24c2:	fc 01       	movw	r30, r24
    24c4:	17 82       	std	Z+7, r1	; 0x07
    24c6:	16 82       	std	Z+6, r1	; 0x06
    24c8:	88 24       	eor	r8, r8
    24ca:	ea c0       	rjmp	.+468    	; 0x26a0 <vfscanf+0x1f0>
    24cc:	81 2f       	mov	r24, r17
    24ce:	90 e0       	ldi	r25, 0x00	; 0
    24d0:	0e 94 69 13 	call	0x26d2	; 0x26d2 <isspace>
    24d4:	89 2b       	or	r24, r25
    24d6:	21 f0       	breq	.+8      	; 0x24e0 <vfscanf+0x30>
    24d8:	c5 01       	movw	r24, r10
    24da:	0e 94 0e 11 	call	0x221c	; 0x221c <skip_spaces>
    24de:	e0 c0       	rjmp	.+448    	; 0x26a0 <vfscanf+0x1f0>
    24e0:	15 32       	cpi	r17, 0x25	; 37
    24e2:	49 f4       	brne	.+18     	; 0x24f6 <vfscanf+0x46>
    24e4:	f6 01       	movw	r30, r12
    24e6:	f3 fc       	sbrc	r15, 3
    24e8:	65 91       	lpm	r22, Z+
    24ea:	f3 fe       	sbrs	r15, 3
    24ec:	61 91       	ld	r22, Z+
    24ee:	6f 01       	movw	r12, r30
    24f0:	65 32       	cpi	r22, 0x25	; 37
    24f2:	69 f4       	brne	.+26     	; 0x250e <vfscanf+0x5e>
    24f4:	15 e2       	ldi	r17, 0x25	; 37
    24f6:	c5 01       	movw	r24, r10
    24f8:	0e 94 a2 13 	call	0x2744	; 0x2744 <fgetc>
    24fc:	97 fd       	sbrc	r25, 7
    24fe:	dc c0       	rjmp	.+440    	; 0x26b8 <vfscanf+0x208>
    2500:	18 17       	cp	r17, r24
    2502:	09 f4       	brne	.+2      	; 0x2506 <vfscanf+0x56>
    2504:	cd c0       	rjmp	.+410    	; 0x26a0 <vfscanf+0x1f0>
    2506:	b5 01       	movw	r22, r10
    2508:	0e 94 10 14 	call	0x2820	; 0x2820 <ungetc>
    250c:	da c0       	rjmp	.+436    	; 0x26c2 <vfscanf+0x212>
    250e:	6a 32       	cpi	r22, 0x2A	; 42
    2510:	19 f0       	breq	.+6      	; 0x2518 <vfscanf+0x68>
    2512:	16 2f       	mov	r17, r22
    2514:	00 e0       	ldi	r16, 0x00	; 0
    2516:	06 c0       	rjmp	.+12     	; 0x2524 <vfscanf+0x74>
    2518:	f3 fc       	sbrc	r15, 3
    251a:	15 91       	lpm	r17, Z+
    251c:	f3 fe       	sbrs	r15, 3
    251e:	11 91       	ld	r17, Z+
    2520:	6f 01       	movw	r12, r30
    2522:	01 e0       	ldi	r16, 0x01	; 1
    2524:	99 24       	eor	r9, r9
    2526:	0f c0       	rjmp	.+30     	; 0x2546 <vfscanf+0x96>
    2528:	02 60       	ori	r16, 0x02	; 2
    252a:	69 2d       	mov	r22, r9
    252c:	70 e0       	ldi	r23, 0x00	; 0
    252e:	80 e0       	ldi	r24, 0x00	; 0
    2530:	90 e0       	ldi	r25, 0x00	; 0
    2532:	40 e2       	ldi	r20, 0x20	; 32
    2534:	0e 94 e0 10 	call	0x21c0	; 0x21c0 <mulacc>
    2538:	96 2e       	mov	r9, r22
    253a:	f6 01       	movw	r30, r12
    253c:	f3 fc       	sbrc	r15, 3
    253e:	15 91       	lpm	r17, Z+
    2540:	f3 fe       	sbrs	r15, 3
    2542:	11 91       	ld	r17, Z+
    2544:	6f 01       	movw	r12, r30
    2546:	21 2f       	mov	r18, r17
    2548:	20 53       	subi	r18, 0x30	; 48
    254a:	2a 30       	cpi	r18, 0x0A	; 10
    254c:	68 f3       	brcs	.-38     	; 0x2528 <vfscanf+0x78>
    254e:	01 fd       	sbrc	r16, 1
    2550:	03 c0       	rjmp	.+6      	; 0x2558 <vfscanf+0xa8>
    2552:	99 24       	eor	r9, r9
    2554:	9a 94       	dec	r9
    2556:	03 c0       	rjmp	.+6      	; 0x255e <vfscanf+0xae>
    2558:	99 20       	and	r9, r9
    255a:	09 f4       	brne	.+2      	; 0x255e <vfscanf+0xae>
    255c:	b2 c0       	rjmp	.+356    	; 0x26c2 <vfscanf+0x212>
    255e:	18 36       	cpi	r17, 0x68	; 104
    2560:	21 f0       	breq	.+8      	; 0x256a <vfscanf+0xba>
    2562:	1c 36       	cpi	r17, 0x6C	; 108
    2564:	99 f4       	brne	.+38     	; 0x258c <vfscanf+0xdc>
    2566:	f6 01       	movw	r30, r12
    2568:	0b c0       	rjmp	.+22     	; 0x2580 <vfscanf+0xd0>
    256a:	f6 01       	movw	r30, r12
    256c:	f3 fc       	sbrc	r15, 3
    256e:	65 91       	lpm	r22, Z+
    2570:	f3 fe       	sbrs	r15, 3
    2572:	61 91       	ld	r22, Z+
    2574:	68 36       	cpi	r22, 0x68	; 104
    2576:	19 f0       	breq	.+6      	; 0x257e <vfscanf+0xce>
    2578:	6f 01       	movw	r12, r30
    257a:	16 2f       	mov	r17, r22
    257c:	07 c0       	rjmp	.+14     	; 0x258c <vfscanf+0xdc>
    257e:	08 60       	ori	r16, 0x08	; 8
    2580:	04 60       	ori	r16, 0x04	; 4
    2582:	f3 fc       	sbrc	r15, 3
    2584:	15 91       	lpm	r17, Z+
    2586:	f3 fe       	sbrs	r15, 3
    2588:	11 91       	ld	r17, Z+
    258a:	6f 01       	movw	r12, r30
    258c:	11 23       	and	r17, r17
    258e:	09 f4       	brne	.+2      	; 0x2592 <vfscanf+0xe2>
    2590:	98 c0       	rjmp	.+304    	; 0x26c2 <vfscanf+0x212>
    2592:	84 e5       	ldi	r24, 0x54	; 84
    2594:	90 e0       	ldi	r25, 0x00	; 0
    2596:	61 2f       	mov	r22, r17
    2598:	70 e0       	ldi	r23, 0x00	; 0
    259a:	0e 94 71 13 	call	0x26e2	; 0x26e2 <strchr_P>
    259e:	89 2b       	or	r24, r25
    25a0:	09 f4       	brne	.+2      	; 0x25a4 <vfscanf+0xf4>
    25a2:	8f c0       	rjmp	.+286    	; 0x26c2 <vfscanf+0x212>
    25a4:	80 2f       	mov	r24, r16
    25a6:	00 ff       	sbrs	r16, 0
    25a8:	03 c0       	rjmp	.+6      	; 0x25b0 <vfscanf+0x100>
    25aa:	ee 24       	eor	r14, r14
    25ac:	ff 24       	eor	r15, r15
    25ae:	07 c0       	rjmp	.+14     	; 0x25be <vfscanf+0x10e>
    25b0:	f3 01       	movw	r30, r6
    25b2:	e0 80       	ld	r14, Z
    25b4:	f1 80       	ldd	r15, Z+1	; 0x01
    25b6:	22 e0       	ldi	r18, 0x02	; 2
    25b8:	30 e0       	ldi	r19, 0x00	; 0
    25ba:	62 0e       	add	r6, r18
    25bc:	73 1e       	adc	r7, r19
    25be:	1e 36       	cpi	r17, 0x6E	; 110
    25c0:	51 f4       	brne	.+20     	; 0x25d6 <vfscanf+0x126>
    25c2:	f5 01       	movw	r30, r10
    25c4:	46 81       	ldd	r20, Z+6	; 0x06
    25c6:	57 81       	ldd	r21, Z+7	; 0x07
    25c8:	60 e0       	ldi	r22, 0x00	; 0
    25ca:	70 e0       	ldi	r23, 0x00	; 0
    25cc:	c7 01       	movw	r24, r14
    25ce:	20 2f       	mov	r18, r16
    25d0:	0e 94 d4 10 	call	0x21a8	; 0x21a8 <putval>
    25d4:	65 c0       	rjmp	.+202    	; 0x26a0 <vfscanf+0x1f0>
    25d6:	13 36       	cpi	r17, 0x63	; 99
    25d8:	91 f4       	brne	.+36     	; 0x25fe <vfscanf+0x14e>
    25da:	81 fd       	sbrc	r24, 1
    25dc:	02 c0       	rjmp	.+4      	; 0x25e2 <vfscanf+0x132>
    25de:	99 24       	eor	r9, r9
    25e0:	93 94       	inc	r9
    25e2:	c5 01       	movw	r24, r10
    25e4:	0e 94 a2 13 	call	0x2744	; 0x2744 <fgetc>
    25e8:	97 fd       	sbrc	r25, 7
    25ea:	66 c0       	rjmp	.+204    	; 0x26b8 <vfscanf+0x208>
    25ec:	e1 14       	cp	r14, r1
    25ee:	f1 04       	cpc	r15, r1
    25f0:	19 f0       	breq	.+6      	; 0x25f8 <vfscanf+0x148>
    25f2:	f7 01       	movw	r30, r14
    25f4:	81 93       	st	Z+, r24
    25f6:	7f 01       	movw	r14, r30
    25f8:	9a 94       	dec	r9
    25fa:	99 f7       	brne	.-26     	; 0x25e2 <vfscanf+0x132>
    25fc:	4f c0       	rjmp	.+158    	; 0x269c <vfscanf+0x1ec>
    25fe:	1b 35       	cpi	r17, 0x5B	; 91
    2600:	59 f4       	brne	.+22     	; 0x2618 <vfscanf+0x168>
    2602:	c5 01       	movw	r24, r10
    2604:	69 2d       	mov	r22, r9
    2606:	a7 01       	movw	r20, r14
    2608:	96 01       	movw	r18, r12
    260a:	0e 94 af 11 	call	0x235e	; 0x235e <conv_brk>
    260e:	6c 01       	movw	r12, r24
    2610:	00 97       	sbiw	r24, 0x00	; 0
    2612:	09 f0       	breq	.+2      	; 0x2616 <vfscanf+0x166>
    2614:	43 c0       	rjmp	.+134    	; 0x269c <vfscanf+0x1ec>
    2616:	3d c0       	rjmp	.+122    	; 0x2692 <vfscanf+0x1e2>
    2618:	c5 01       	movw	r24, r10
    261a:	0e 94 0e 11 	call	0x221c	; 0x221c <skip_spaces>
    261e:	97 fd       	sbrc	r25, 7
    2620:	4b c0       	rjmp	.+150    	; 0x26b8 <vfscanf+0x208>
    2622:	1f 36       	cpi	r17, 0x6F	; 111
    2624:	59 f1       	breq	.+86     	; 0x267c <vfscanf+0x1cc>
    2626:	10 37       	cpi	r17, 0x70	; 112
    2628:	28 f4       	brcc	.+10     	; 0x2634 <vfscanf+0x184>
    262a:	14 36       	cpi	r17, 0x64	; 100
    262c:	29 f1       	breq	.+74     	; 0x2678 <vfscanf+0x1c8>
    262e:	19 36       	cpi	r17, 0x69	; 105
    2630:	39 f5       	brne	.+78     	; 0x2680 <vfscanf+0x1d0>
    2632:	27 c0       	rjmp	.+78     	; 0x2682 <vfscanf+0x1d2>
    2634:	13 37       	cpi	r17, 0x73	; 115
    2636:	19 f0       	breq	.+6      	; 0x263e <vfscanf+0x18e>
    2638:	15 37       	cpi	r17, 0x75	; 117
    263a:	11 f5       	brne	.+68     	; 0x2680 <vfscanf+0x1d0>
    263c:	1d c0       	rjmp	.+58     	; 0x2678 <vfscanf+0x1c8>
    263e:	c5 01       	movw	r24, r10
    2640:	0e 94 a2 13 	call	0x2744	; 0x2744 <fgetc>
    2644:	ec 01       	movw	r28, r24
    2646:	97 fd       	sbrc	r25, 7
    2648:	11 c0       	rjmp	.+34     	; 0x266c <vfscanf+0x1bc>
    264a:	0e 94 69 13 	call	0x26d2	; 0x26d2 <isspace>
    264e:	89 2b       	or	r24, r25
    2650:	29 f0       	breq	.+10     	; 0x265c <vfscanf+0x1ac>
    2652:	ce 01       	movw	r24, r28
    2654:	b5 01       	movw	r22, r10
    2656:	0e 94 10 14 	call	0x2820	; 0x2820 <ungetc>
    265a:	08 c0       	rjmp	.+16     	; 0x266c <vfscanf+0x1bc>
    265c:	e1 14       	cp	r14, r1
    265e:	f1 04       	cpc	r15, r1
    2660:	19 f0       	breq	.+6      	; 0x2668 <vfscanf+0x1b8>
    2662:	f7 01       	movw	r30, r14
    2664:	c1 93       	st	Z+, r28
    2666:	7f 01       	movw	r14, r30
    2668:	9a 94       	dec	r9
    266a:	49 f7       	brne	.-46     	; 0x263e <vfscanf+0x18e>
    266c:	e1 14       	cp	r14, r1
    266e:	f1 04       	cpc	r15, r1
    2670:	a9 f0       	breq	.+42     	; 0x269c <vfscanf+0x1ec>
    2672:	f7 01       	movw	r30, r14
    2674:	10 82       	st	Z, r1
    2676:	12 c0       	rjmp	.+36     	; 0x269c <vfscanf+0x1ec>
    2678:	00 62       	ori	r16, 0x20	; 32
    267a:	03 c0       	rjmp	.+6      	; 0x2682 <vfscanf+0x1d2>
    267c:	00 61       	ori	r16, 0x10	; 16
    267e:	01 c0       	rjmp	.+2      	; 0x2682 <vfscanf+0x1d2>
    2680:	00 64       	ori	r16, 0x40	; 64
    2682:	c5 01       	movw	r24, r10
    2684:	69 2d       	mov	r22, r9
    2686:	a7 01       	movw	r20, r14
    2688:	20 2f       	mov	r18, r16
    268a:	0e 94 27 11 	call	0x224e	; 0x224e <conv_int>
    268e:	88 23       	and	r24, r24
    2690:	29 f4       	brne	.+10     	; 0x269c <vfscanf+0x1ec>
    2692:	f5 01       	movw	r30, r10
    2694:	83 81       	ldd	r24, Z+3	; 0x03
    2696:	80 73       	andi	r24, 0x30	; 48
    2698:	79 f4       	brne	.+30     	; 0x26b8 <vfscanf+0x208>
    269a:	13 c0       	rjmp	.+38     	; 0x26c2 <vfscanf+0x212>
    269c:	00 ff       	sbrs	r16, 0
    269e:	83 94       	inc	r8
    26a0:	f5 01       	movw	r30, r10
    26a2:	f3 80       	ldd	r15, Z+3	; 0x03
    26a4:	f6 01       	movw	r30, r12
    26a6:	f3 fc       	sbrc	r15, 3
    26a8:	15 91       	lpm	r17, Z+
    26aa:	f3 fe       	sbrs	r15, 3
    26ac:	11 91       	ld	r17, Z+
    26ae:	6f 01       	movw	r12, r30
    26b0:	11 23       	and	r17, r17
    26b2:	09 f0       	breq	.+2      	; 0x26b6 <vfscanf+0x206>
    26b4:	0b cf       	rjmp	.-490    	; 0x24cc <vfscanf+0x1c>
    26b6:	05 c0       	rjmp	.+10     	; 0x26c2 <vfscanf+0x212>
    26b8:	88 20       	and	r8, r8
    26ba:	19 f4       	brne	.+6      	; 0x26c2 <vfscanf+0x212>
    26bc:	2f ef       	ldi	r18, 0xFF	; 255
    26be:	3f ef       	ldi	r19, 0xFF	; 255
    26c0:	02 c0       	rjmp	.+4      	; 0x26c6 <vfscanf+0x216>
    26c2:	28 2d       	mov	r18, r8
    26c4:	30 e0       	ldi	r19, 0x00	; 0
    26c6:	c9 01       	movw	r24, r18
    26c8:	cd b7       	in	r28, 0x3d	; 61
    26ca:	de b7       	in	r29, 0x3e	; 62
    26cc:	ee e0       	ldi	r30, 0x0E	; 14
    26ce:	0c 94 81 0e 	jmp	0x1d02	; 0x1d02 <__epilogue_restores__+0x8>

000026d2 <isspace>:
    26d2:	91 11       	cpse	r25, r1
    26d4:	1d c1       	rjmp	.+570    	; 0x2910 <__ctype_isfalse>
    26d6:	80 32       	cpi	r24, 0x20	; 32
    26d8:	19 f0       	breq	.+6      	; 0x26e0 <isspace+0xe>
    26da:	89 50       	subi	r24, 0x09	; 9
    26dc:	85 50       	subi	r24, 0x05	; 5
    26de:	d0 f7       	brcc	.-12     	; 0x26d4 <isspace+0x2>
    26e0:	08 95       	ret

000026e2 <strchr_P>:
    26e2:	fc 01       	movw	r30, r24
    26e4:	05 90       	lpm	r0, Z+
    26e6:	06 16       	cp	r0, r22
    26e8:	21 f0       	breq	.+8      	; 0x26f2 <strchr_P+0x10>
    26ea:	00 20       	and	r0, r0
    26ec:	d9 f7       	brne	.-10     	; 0x26e4 <strchr_P+0x2>
    26ee:	c0 01       	movw	r24, r0
    26f0:	08 95       	ret
    26f2:	31 97       	sbiw	r30, 0x01	; 1
    26f4:	cf 01       	movw	r24, r30
    26f6:	08 95       	ret

000026f8 <strnlen_P>:
    26f8:	fc 01       	movw	r30, r24
    26fa:	05 90       	lpm	r0, Z+
    26fc:	61 50       	subi	r22, 0x01	; 1
    26fe:	70 40       	sbci	r23, 0x00	; 0
    2700:	01 10       	cpse	r0, r1
    2702:	d8 f7       	brcc	.-10     	; 0x26fa <strnlen_P+0x2>
    2704:	80 95       	com	r24
    2706:	90 95       	com	r25
    2708:	8e 0f       	add	r24, r30
    270a:	9f 1f       	adc	r25, r31
    270c:	08 95       	ret

0000270e <strnlen>:
    270e:	fc 01       	movw	r30, r24
    2710:	61 50       	subi	r22, 0x01	; 1
    2712:	70 40       	sbci	r23, 0x00	; 0
    2714:	01 90       	ld	r0, Z+
    2716:	01 10       	cpse	r0, r1
    2718:	d8 f7       	brcc	.-10     	; 0x2710 <strnlen+0x2>
    271a:	80 95       	com	r24
    271c:	90 95       	com	r25
    271e:	8e 0f       	add	r24, r30
    2720:	9f 1f       	adc	r25, r31
    2722:	08 95       	ret

00002724 <strrev>:
    2724:	dc 01       	movw	r26, r24
    2726:	fc 01       	movw	r30, r24
    2728:	67 2f       	mov	r22, r23
    272a:	71 91       	ld	r23, Z+
    272c:	77 23       	and	r23, r23
    272e:	e1 f7       	brne	.-8      	; 0x2728 <strrev+0x4>
    2730:	32 97       	sbiw	r30, 0x02	; 2
    2732:	04 c0       	rjmp	.+8      	; 0x273c <strrev+0x18>
    2734:	7c 91       	ld	r23, X
    2736:	6d 93       	st	X+, r22
    2738:	70 83       	st	Z, r23
    273a:	62 91       	ld	r22, -Z
    273c:	ae 17       	cp	r26, r30
    273e:	bf 07       	cpc	r27, r31
    2740:	c8 f3       	brcs	.-14     	; 0x2734 <strrev+0x10>
    2742:	08 95       	ret

00002744 <fgetc>:
    2744:	cf 93       	push	r28
    2746:	df 93       	push	r29
    2748:	ec 01       	movw	r28, r24
    274a:	4b 81       	ldd	r20, Y+3	; 0x03
    274c:	40 ff       	sbrs	r20, 0
    274e:	1a c0       	rjmp	.+52     	; 0x2784 <fgetc+0x40>
    2750:	46 ff       	sbrs	r20, 6
    2752:	0a c0       	rjmp	.+20     	; 0x2768 <fgetc+0x24>
    2754:	4f 7b       	andi	r20, 0xBF	; 191
    2756:	4b 83       	std	Y+3, r20	; 0x03
    2758:	8e 81       	ldd	r24, Y+6	; 0x06
    275a:	9f 81       	ldd	r25, Y+7	; 0x07
    275c:	01 96       	adiw	r24, 0x01	; 1
    275e:	9f 83       	std	Y+7, r25	; 0x07
    2760:	8e 83       	std	Y+6, r24	; 0x06
    2762:	8a 81       	ldd	r24, Y+2	; 0x02
    2764:	28 2f       	mov	r18, r24
    2766:	2b c0       	rjmp	.+86     	; 0x27be <fgetc+0x7a>
    2768:	42 ff       	sbrs	r20, 2
    276a:	13 c0       	rjmp	.+38     	; 0x2792 <fgetc+0x4e>
    276c:	e8 81       	ld	r30, Y
    276e:	f9 81       	ldd	r31, Y+1	; 0x01
    2770:	80 81       	ld	r24, Z
    2772:	28 2f       	mov	r18, r24
    2774:	33 27       	eor	r19, r19
    2776:	27 fd       	sbrc	r18, 7
    2778:	30 95       	com	r19
    277a:	21 15       	cp	r18, r1
    277c:	31 05       	cpc	r19, r1
    277e:	29 f4       	brne	.+10     	; 0x278a <fgetc+0x46>
    2780:	40 62       	ori	r20, 0x20	; 32
    2782:	4b 83       	std	Y+3, r20	; 0x03
    2784:	2f ef       	ldi	r18, 0xFF	; 255
    2786:	3f ef       	ldi	r19, 0xFF	; 255
    2788:	1b c0       	rjmp	.+54     	; 0x27c0 <fgetc+0x7c>
    278a:	31 96       	adiw	r30, 0x01	; 1
    278c:	f9 83       	std	Y+1, r31	; 0x01
    278e:	e8 83       	st	Y, r30
    2790:	11 c0       	rjmp	.+34     	; 0x27b4 <fgetc+0x70>
    2792:	ea 85       	ldd	r30, Y+10	; 0x0a
    2794:	fb 85       	ldd	r31, Y+11	; 0x0b
    2796:	ce 01       	movw	r24, r28
    2798:	09 95       	icall
    279a:	9c 01       	movw	r18, r24
    279c:	97 ff       	sbrs	r25, 7
    279e:	0a c0       	rjmp	.+20     	; 0x27b4 <fgetc+0x70>
    27a0:	9b 81       	ldd	r25, Y+3	; 0x03
    27a2:	2f 5f       	subi	r18, 0xFF	; 255
    27a4:	3f 4f       	sbci	r19, 0xFF	; 255
    27a6:	11 f0       	breq	.+4      	; 0x27ac <fgetc+0x68>
    27a8:	80 e2       	ldi	r24, 0x20	; 32
    27aa:	01 c0       	rjmp	.+2      	; 0x27ae <fgetc+0x6a>
    27ac:	80 e1       	ldi	r24, 0x10	; 16
    27ae:	89 2b       	or	r24, r25
    27b0:	8b 83       	std	Y+3, r24	; 0x03
    27b2:	e8 cf       	rjmp	.-48     	; 0x2784 <fgetc+0x40>
    27b4:	8e 81       	ldd	r24, Y+6	; 0x06
    27b6:	9f 81       	ldd	r25, Y+7	; 0x07
    27b8:	01 96       	adiw	r24, 0x01	; 1
    27ba:	9f 83       	std	Y+7, r25	; 0x07
    27bc:	8e 83       	std	Y+6, r24	; 0x06
    27be:	30 e0       	ldi	r19, 0x00	; 0
    27c0:	c9 01       	movw	r24, r18
    27c2:	df 91       	pop	r29
    27c4:	cf 91       	pop	r28
    27c6:	08 95       	ret

000027c8 <fputc>:
    27c8:	0f 93       	push	r16
    27ca:	1f 93       	push	r17
    27cc:	cf 93       	push	r28
    27ce:	df 93       	push	r29
    27d0:	8c 01       	movw	r16, r24
    27d2:	eb 01       	movw	r28, r22
    27d4:	8b 81       	ldd	r24, Y+3	; 0x03
    27d6:	81 ff       	sbrs	r24, 1
    27d8:	1b c0       	rjmp	.+54     	; 0x2810 <fputc+0x48>
    27da:	82 ff       	sbrs	r24, 2
    27dc:	0d c0       	rjmp	.+26     	; 0x27f8 <fputc+0x30>
    27de:	2e 81       	ldd	r18, Y+6	; 0x06
    27e0:	3f 81       	ldd	r19, Y+7	; 0x07
    27e2:	8c 81       	ldd	r24, Y+4	; 0x04
    27e4:	9d 81       	ldd	r25, Y+5	; 0x05
    27e6:	28 17       	cp	r18, r24
    27e8:	39 07       	cpc	r19, r25
    27ea:	64 f4       	brge	.+24     	; 0x2804 <fputc+0x3c>
    27ec:	e8 81       	ld	r30, Y
    27ee:	f9 81       	ldd	r31, Y+1	; 0x01
    27f0:	01 93       	st	Z+, r16
    27f2:	f9 83       	std	Y+1, r31	; 0x01
    27f4:	e8 83       	st	Y, r30
    27f6:	06 c0       	rjmp	.+12     	; 0x2804 <fputc+0x3c>
    27f8:	e8 85       	ldd	r30, Y+8	; 0x08
    27fa:	f9 85       	ldd	r31, Y+9	; 0x09
    27fc:	80 2f       	mov	r24, r16
    27fe:	09 95       	icall
    2800:	89 2b       	or	r24, r25
    2802:	31 f4       	brne	.+12     	; 0x2810 <fputc+0x48>
    2804:	8e 81       	ldd	r24, Y+6	; 0x06
    2806:	9f 81       	ldd	r25, Y+7	; 0x07
    2808:	01 96       	adiw	r24, 0x01	; 1
    280a:	9f 83       	std	Y+7, r25	; 0x07
    280c:	8e 83       	std	Y+6, r24	; 0x06
    280e:	02 c0       	rjmp	.+4      	; 0x2814 <fputc+0x4c>
    2810:	0f ef       	ldi	r16, 0xFF	; 255
    2812:	1f ef       	ldi	r17, 0xFF	; 255
    2814:	c8 01       	movw	r24, r16
    2816:	df 91       	pop	r29
    2818:	cf 91       	pop	r28
    281a:	1f 91       	pop	r17
    281c:	0f 91       	pop	r16
    281e:	08 95       	ret

00002820 <ungetc>:
    2820:	9c 01       	movw	r18, r24
    2822:	fb 01       	movw	r30, r22
    2824:	83 81       	ldd	r24, Z+3	; 0x03
    2826:	80 ff       	sbrs	r24, 0
    2828:	11 c0       	rjmp	.+34     	; 0x284c <ungetc+0x2c>
    282a:	86 fd       	sbrc	r24, 6
    282c:	0f c0       	rjmp	.+30     	; 0x284c <ungetc+0x2c>
    282e:	9f ef       	ldi	r25, 0xFF	; 255
    2830:	2f 3f       	cpi	r18, 0xFF	; 255
    2832:	39 07       	cpc	r19, r25
    2834:	59 f0       	breq	.+22     	; 0x284c <ungetc+0x2c>
    2836:	22 83       	std	Z+2, r18	; 0x02
    2838:	80 64       	ori	r24, 0x40	; 64
    283a:	8f 7d       	andi	r24, 0xDF	; 223
    283c:	83 83       	std	Z+3, r24	; 0x03
    283e:	86 81       	ldd	r24, Z+6	; 0x06
    2840:	97 81       	ldd	r25, Z+7	; 0x07
    2842:	01 97       	sbiw	r24, 0x01	; 1
    2844:	97 83       	std	Z+7, r25	; 0x07
    2846:	86 83       	std	Z+6, r24	; 0x06
    2848:	30 e0       	ldi	r19, 0x00	; 0
    284a:	02 c0       	rjmp	.+4      	; 0x2850 <ungetc+0x30>
    284c:	2f ef       	ldi	r18, 0xFF	; 255
    284e:	3f ef       	ldi	r19, 0xFF	; 255
    2850:	c9 01       	movw	r24, r18
    2852:	08 95       	ret

00002854 <__ultoa_invert>:
    2854:	fa 01       	movw	r30, r20
    2856:	aa 27       	eor	r26, r26
    2858:	28 30       	cpi	r18, 0x08	; 8
    285a:	51 f1       	breq	.+84     	; 0x28b0 <__ultoa_invert+0x5c>
    285c:	20 31       	cpi	r18, 0x10	; 16
    285e:	81 f1       	breq	.+96     	; 0x28c0 <__ultoa_invert+0x6c>
    2860:	e8 94       	clt
    2862:	6f 93       	push	r22
    2864:	6e 7f       	andi	r22, 0xFE	; 254
    2866:	6e 5f       	subi	r22, 0xFE	; 254
    2868:	7f 4f       	sbci	r23, 0xFF	; 255
    286a:	8f 4f       	sbci	r24, 0xFF	; 255
    286c:	9f 4f       	sbci	r25, 0xFF	; 255
    286e:	af 4f       	sbci	r26, 0xFF	; 255
    2870:	b1 e0       	ldi	r27, 0x01	; 1
    2872:	3e d0       	rcall	.+124    	; 0x28f0 <__ultoa_invert+0x9c>
    2874:	b4 e0       	ldi	r27, 0x04	; 4
    2876:	3c d0       	rcall	.+120    	; 0x28f0 <__ultoa_invert+0x9c>
    2878:	67 0f       	add	r22, r23
    287a:	78 1f       	adc	r23, r24
    287c:	89 1f       	adc	r24, r25
    287e:	9a 1f       	adc	r25, r26
    2880:	a1 1d       	adc	r26, r1
    2882:	68 0f       	add	r22, r24
    2884:	79 1f       	adc	r23, r25
    2886:	8a 1f       	adc	r24, r26
    2888:	91 1d       	adc	r25, r1
    288a:	a1 1d       	adc	r26, r1
    288c:	6a 0f       	add	r22, r26
    288e:	71 1d       	adc	r23, r1
    2890:	81 1d       	adc	r24, r1
    2892:	91 1d       	adc	r25, r1
    2894:	a1 1d       	adc	r26, r1
    2896:	20 d0       	rcall	.+64     	; 0x28d8 <__ultoa_invert+0x84>
    2898:	09 f4       	brne	.+2      	; 0x289c <__ultoa_invert+0x48>
    289a:	68 94       	set
    289c:	3f 91       	pop	r19
    289e:	2a e0       	ldi	r18, 0x0A	; 10
    28a0:	26 9f       	mul	r18, r22
    28a2:	11 24       	eor	r1, r1
    28a4:	30 19       	sub	r19, r0
    28a6:	30 5d       	subi	r19, 0xD0	; 208
    28a8:	31 93       	st	Z+, r19
    28aa:	de f6       	brtc	.-74     	; 0x2862 <__ultoa_invert+0xe>
    28ac:	cf 01       	movw	r24, r30
    28ae:	08 95       	ret
    28b0:	46 2f       	mov	r20, r22
    28b2:	47 70       	andi	r20, 0x07	; 7
    28b4:	40 5d       	subi	r20, 0xD0	; 208
    28b6:	41 93       	st	Z+, r20
    28b8:	b3 e0       	ldi	r27, 0x03	; 3
    28ba:	0f d0       	rcall	.+30     	; 0x28da <__ultoa_invert+0x86>
    28bc:	c9 f7       	brne	.-14     	; 0x28b0 <__ultoa_invert+0x5c>
    28be:	f6 cf       	rjmp	.-20     	; 0x28ac <__ultoa_invert+0x58>
    28c0:	46 2f       	mov	r20, r22
    28c2:	4f 70       	andi	r20, 0x0F	; 15
    28c4:	40 5d       	subi	r20, 0xD0	; 208
    28c6:	4a 33       	cpi	r20, 0x3A	; 58
    28c8:	18 f0       	brcs	.+6      	; 0x28d0 <__ultoa_invert+0x7c>
    28ca:	49 5d       	subi	r20, 0xD9	; 217
    28cc:	31 fd       	sbrc	r19, 1
    28ce:	40 52       	subi	r20, 0x20	; 32
    28d0:	41 93       	st	Z+, r20
    28d2:	02 d0       	rcall	.+4      	; 0x28d8 <__ultoa_invert+0x84>
    28d4:	a9 f7       	brne	.-22     	; 0x28c0 <__ultoa_invert+0x6c>
    28d6:	ea cf       	rjmp	.-44     	; 0x28ac <__ultoa_invert+0x58>
    28d8:	b4 e0       	ldi	r27, 0x04	; 4
    28da:	a6 95       	lsr	r26
    28dc:	97 95       	ror	r25
    28de:	87 95       	ror	r24
    28e0:	77 95       	ror	r23
    28e2:	67 95       	ror	r22
    28e4:	ba 95       	dec	r27
    28e6:	c9 f7       	brne	.-14     	; 0x28da <__ultoa_invert+0x86>
    28e8:	00 97       	sbiw	r24, 0x00	; 0
    28ea:	61 05       	cpc	r22, r1
    28ec:	71 05       	cpc	r23, r1
    28ee:	08 95       	ret
    28f0:	9b 01       	movw	r18, r22
    28f2:	ac 01       	movw	r20, r24
    28f4:	0a 2e       	mov	r0, r26
    28f6:	06 94       	lsr	r0
    28f8:	57 95       	ror	r21
    28fa:	47 95       	ror	r20
    28fc:	37 95       	ror	r19
    28fe:	27 95       	ror	r18
    2900:	ba 95       	dec	r27
    2902:	c9 f7       	brne	.-14     	; 0x28f6 <__ultoa_invert+0xa2>
    2904:	62 0f       	add	r22, r18
    2906:	73 1f       	adc	r23, r19
    2908:	84 1f       	adc	r24, r20
    290a:	95 1f       	adc	r25, r21
    290c:	a0 1d       	adc	r26, r0
    290e:	08 95       	ret

00002910 <__ctype_isfalse>:
    2910:	99 27       	eor	r25, r25
    2912:	88 27       	eor	r24, r24

00002914 <__ctype_istrue>:
    2914:	08 95       	ret

00002916 <_exit>:
    2916:	f8 94       	cli

00002918 <__stop_program>:
    2918:	ff cf       	rjmp	.-2      	; 0x2918 <__stop_program>
