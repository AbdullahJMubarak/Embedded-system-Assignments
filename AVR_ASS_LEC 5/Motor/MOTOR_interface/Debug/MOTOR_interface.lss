
MOTOR_interface.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000015fa  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  000015fa  0000166e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001080  00000000  00000000  00001678  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000d4c  00000000  00000000  000026f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00003444  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00003584  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  000036f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000533d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  00006228  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00006fd8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  00007138  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  000073c5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00007b93  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	29 c0       	rjmp	.+82     	; 0x54 <__ctors_end>
       2:	00 00       	nop
       4:	3c c0       	rjmp	.+120    	; 0x7e <__bad_interrupt>
       6:	00 00       	nop
       8:	3a c0       	rjmp	.+116    	; 0x7e <__bad_interrupt>
       a:	00 00       	nop
       c:	38 c0       	rjmp	.+112    	; 0x7e <__bad_interrupt>
       e:	00 00       	nop
      10:	36 c0       	rjmp	.+108    	; 0x7e <__bad_interrupt>
      12:	00 00       	nop
      14:	34 c0       	rjmp	.+104    	; 0x7e <__bad_interrupt>
      16:	00 00       	nop
      18:	32 c0       	rjmp	.+100    	; 0x7e <__bad_interrupt>
      1a:	00 00       	nop
      1c:	30 c0       	rjmp	.+96     	; 0x7e <__bad_interrupt>
      1e:	00 00       	nop
      20:	2e c0       	rjmp	.+92     	; 0x7e <__bad_interrupt>
      22:	00 00       	nop
      24:	2c c0       	rjmp	.+88     	; 0x7e <__bad_interrupt>
      26:	00 00       	nop
      28:	2a c0       	rjmp	.+84     	; 0x7e <__bad_interrupt>
      2a:	00 00       	nop
      2c:	28 c0       	rjmp	.+80     	; 0x7e <__bad_interrupt>
      2e:	00 00       	nop
      30:	26 c0       	rjmp	.+76     	; 0x7e <__bad_interrupt>
      32:	00 00       	nop
      34:	24 c0       	rjmp	.+72     	; 0x7e <__bad_interrupt>
      36:	00 00       	nop
      38:	22 c0       	rjmp	.+68     	; 0x7e <__bad_interrupt>
      3a:	00 00       	nop
      3c:	20 c0       	rjmp	.+64     	; 0x7e <__bad_interrupt>
      3e:	00 00       	nop
      40:	1e c0       	rjmp	.+60     	; 0x7e <__bad_interrupt>
      42:	00 00       	nop
      44:	1c c0       	rjmp	.+56     	; 0x7e <__bad_interrupt>
      46:	00 00       	nop
      48:	1a c0       	rjmp	.+52     	; 0x7e <__bad_interrupt>
      4a:	00 00       	nop
      4c:	18 c0       	rjmp	.+48     	; 0x7e <__bad_interrupt>
      4e:	00 00       	nop
      50:	16 c0       	rjmp	.+44     	; 0x7e <__bad_interrupt>
	...

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea ef       	ldi	r30, 0xFA	; 250
      68:	f5 e1       	ldi	r31, 0x15	; 21
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <main>
      7a:	0c 94 fb 0a 	jmp	0x15f6	; 0x15f6 <_exit>

0000007e <__bad_interrupt>:
      7e:	c0 cf       	rjmp	.-128    	; 0x0 <__vectors>

00000080 <__fixunssfsi>:
      80:	ef 92       	push	r14
      82:	ff 92       	push	r15
      84:	0f 93       	push	r16
      86:	1f 93       	push	r17
      88:	7b 01       	movw	r14, r22
      8a:	8c 01       	movw	r16, r24
      8c:	20 e0       	ldi	r18, 0x00	; 0
      8e:	30 e0       	ldi	r19, 0x00	; 0
      90:	40 e0       	ldi	r20, 0x00	; 0
      92:	5f e4       	ldi	r21, 0x4F	; 79
      94:	e0 d2       	rcall	.+1472   	; 0x656 <__gesf2>
      96:	88 23       	and	r24, r24
      98:	7c f0       	brlt	.+30     	; 0xb8 <__fixunssfsi+0x38>
      9a:	c8 01       	movw	r24, r16
      9c:	b7 01       	movw	r22, r14
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	60 d1       	rcall	.+704    	; 0x368 <__subsf3>
      a8:	2c d3       	rcall	.+1624   	; 0x702 <__fixsfsi>
      aa:	9b 01       	movw	r18, r22
      ac:	ac 01       	movw	r20, r24
      ae:	20 50       	subi	r18, 0x00	; 0
      b0:	30 40       	sbci	r19, 0x00	; 0
      b2:	40 40       	sbci	r20, 0x00	; 0
      b4:	50 48       	sbci	r21, 0x80	; 128
      b6:	05 c0       	rjmp	.+10     	; 0xc2 <__fixunssfsi+0x42>
      b8:	c8 01       	movw	r24, r16
      ba:	b7 01       	movw	r22, r14
      bc:	22 d3       	rcall	.+1604   	; 0x702 <__fixsfsi>
      be:	9b 01       	movw	r18, r22
      c0:	ac 01       	movw	r20, r24
      c2:	b9 01       	movw	r22, r18
      c4:	ca 01       	movw	r24, r20
      c6:	1f 91       	pop	r17
      c8:	0f 91       	pop	r16
      ca:	ff 90       	pop	r15
      cc:	ef 90       	pop	r14
      ce:	08 95       	ret

000000d0 <_fpadd_parts>:
      d0:	a0 e0       	ldi	r26, 0x00	; 0
      d2:	b0 e0       	ldi	r27, 0x00	; 0
      d4:	ee e6       	ldi	r30, 0x6E	; 110
      d6:	f0 e0       	ldi	r31, 0x00	; 0
      d8:	0c 94 c4 0a 	jmp	0x1588	; 0x1588 <__prologue_saves__>
      dc:	dc 01       	movw	r26, r24
      de:	2b 01       	movw	r4, r22
      e0:	fa 01       	movw	r30, r20
      e2:	9c 91       	ld	r25, X
      e4:	92 30       	cpi	r25, 0x02	; 2
      e6:	08 f4       	brcc	.+2      	; 0xea <_fpadd_parts+0x1a>
      e8:	39 c1       	rjmp	.+626    	; 0x35c <_fpadd_parts+0x28c>
      ea:	eb 01       	movw	r28, r22
      ec:	88 81       	ld	r24, Y
      ee:	82 30       	cpi	r24, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x24>
      f2:	33 c1       	rjmp	.+614    	; 0x35a <_fpadd_parts+0x28a>
      f4:	94 30       	cpi	r25, 0x04	; 4
      f6:	69 f4       	brne	.+26     	; 0x112 <_fpadd_parts+0x42>
      f8:	84 30       	cpi	r24, 0x04	; 4
      fa:	09 f0       	breq	.+2      	; 0xfe <_fpadd_parts+0x2e>
      fc:	2f c1       	rjmp	.+606    	; 0x35c <_fpadd_parts+0x28c>
      fe:	11 96       	adiw	r26, 0x01	; 1
     100:	9c 91       	ld	r25, X
     102:	11 97       	sbiw	r26, 0x01	; 1
     104:	89 81       	ldd	r24, Y+1	; 0x01
     106:	98 17       	cp	r25, r24
     108:	09 f4       	brne	.+2      	; 0x10c <_fpadd_parts+0x3c>
     10a:	28 c1       	rjmp	.+592    	; 0x35c <_fpadd_parts+0x28c>
     10c:	a0 e6       	ldi	r26, 0x60	; 96
     10e:	b0 e0       	ldi	r27, 0x00	; 0
     110:	25 c1       	rjmp	.+586    	; 0x35c <_fpadd_parts+0x28c>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f4       	brne	.+2      	; 0x118 <_fpadd_parts+0x48>
     116:	21 c1       	rjmp	.+578    	; 0x35a <_fpadd_parts+0x28a>
     118:	82 30       	cpi	r24, 0x02	; 2
     11a:	a9 f4       	brne	.+42     	; 0x146 <_fpadd_parts+0x76>
     11c:	92 30       	cpi	r25, 0x02	; 2
     11e:	09 f0       	breq	.+2      	; 0x122 <_fpadd_parts+0x52>
     120:	1d c1       	rjmp	.+570    	; 0x35c <_fpadd_parts+0x28c>
     122:	9a 01       	movw	r18, r20
     124:	ad 01       	movw	r20, r26
     126:	88 e0       	ldi	r24, 0x08	; 8
     128:	ea 01       	movw	r28, r20
     12a:	09 90       	ld	r0, Y+
     12c:	ae 01       	movw	r20, r28
     12e:	e9 01       	movw	r28, r18
     130:	09 92       	st	Y+, r0
     132:	9e 01       	movw	r18, r28
     134:	81 50       	subi	r24, 0x01	; 1
     136:	c1 f7       	brne	.-16     	; 0x128 <_fpadd_parts+0x58>
     138:	e2 01       	movw	r28, r4
     13a:	89 81       	ldd	r24, Y+1	; 0x01
     13c:	11 96       	adiw	r26, 0x01	; 1
     13e:	9c 91       	ld	r25, X
     140:	89 23       	and	r24, r25
     142:	81 83       	std	Z+1, r24	; 0x01
     144:	08 c1       	rjmp	.+528    	; 0x356 <_fpadd_parts+0x286>
     146:	92 30       	cpi	r25, 0x02	; 2
     148:	09 f4       	brne	.+2      	; 0x14c <_fpadd_parts+0x7c>
     14a:	07 c1       	rjmp	.+526    	; 0x35a <_fpadd_parts+0x28a>
     14c:	12 96       	adiw	r26, 0x02	; 2
     14e:	2d 90       	ld	r2, X+
     150:	3c 90       	ld	r3, X
     152:	13 97       	sbiw	r26, 0x03	; 3
     154:	eb 01       	movw	r28, r22
     156:	8a 81       	ldd	r24, Y+2	; 0x02
     158:	9b 81       	ldd	r25, Y+3	; 0x03
     15a:	14 96       	adiw	r26, 0x04	; 4
     15c:	ad 90       	ld	r10, X+
     15e:	bd 90       	ld	r11, X+
     160:	cd 90       	ld	r12, X+
     162:	dc 90       	ld	r13, X
     164:	17 97       	sbiw	r26, 0x07	; 7
     166:	ec 80       	ldd	r14, Y+4	; 0x04
     168:	fd 80       	ldd	r15, Y+5	; 0x05
     16a:	0e 81       	ldd	r16, Y+6	; 0x06
     16c:	1f 81       	ldd	r17, Y+7	; 0x07
     16e:	91 01       	movw	r18, r2
     170:	28 1b       	sub	r18, r24
     172:	39 0b       	sbc	r19, r25
     174:	b9 01       	movw	r22, r18
     176:	37 ff       	sbrs	r19, 7
     178:	04 c0       	rjmp	.+8      	; 0x182 <_fpadd_parts+0xb2>
     17a:	66 27       	eor	r22, r22
     17c:	77 27       	eor	r23, r23
     17e:	62 1b       	sub	r22, r18
     180:	73 0b       	sbc	r23, r19
     182:	60 32       	cpi	r22, 0x20	; 32
     184:	71 05       	cpc	r23, r1
     186:	0c f0       	brlt	.+2      	; 0x18a <_fpadd_parts+0xba>
     188:	61 c0       	rjmp	.+194    	; 0x24c <_fpadd_parts+0x17c>
     18a:	12 16       	cp	r1, r18
     18c:	13 06       	cpc	r1, r19
     18e:	6c f5       	brge	.+90     	; 0x1ea <_fpadd_parts+0x11a>
     190:	37 01       	movw	r6, r14
     192:	48 01       	movw	r8, r16
     194:	06 2e       	mov	r0, r22
     196:	04 c0       	rjmp	.+8      	; 0x1a0 <_fpadd_parts+0xd0>
     198:	96 94       	lsr	r9
     19a:	87 94       	ror	r8
     19c:	77 94       	ror	r7
     19e:	67 94       	ror	r6
     1a0:	0a 94       	dec	r0
     1a2:	d2 f7       	brpl	.-12     	; 0x198 <_fpadd_parts+0xc8>
     1a4:	21 e0       	ldi	r18, 0x01	; 1
     1a6:	30 e0       	ldi	r19, 0x00	; 0
     1a8:	40 e0       	ldi	r20, 0x00	; 0
     1aa:	50 e0       	ldi	r21, 0x00	; 0
     1ac:	04 c0       	rjmp	.+8      	; 0x1b6 <_fpadd_parts+0xe6>
     1ae:	22 0f       	add	r18, r18
     1b0:	33 1f       	adc	r19, r19
     1b2:	44 1f       	adc	r20, r20
     1b4:	55 1f       	adc	r21, r21
     1b6:	6a 95       	dec	r22
     1b8:	d2 f7       	brpl	.-12     	; 0x1ae <_fpadd_parts+0xde>
     1ba:	21 50       	subi	r18, 0x01	; 1
     1bc:	30 40       	sbci	r19, 0x00	; 0
     1be:	40 40       	sbci	r20, 0x00	; 0
     1c0:	50 40       	sbci	r21, 0x00	; 0
     1c2:	2e 21       	and	r18, r14
     1c4:	3f 21       	and	r19, r15
     1c6:	40 23       	and	r20, r16
     1c8:	51 23       	and	r21, r17
     1ca:	21 15       	cp	r18, r1
     1cc:	31 05       	cpc	r19, r1
     1ce:	41 05       	cpc	r20, r1
     1d0:	51 05       	cpc	r21, r1
     1d2:	21 f0       	breq	.+8      	; 0x1dc <_fpadd_parts+0x10c>
     1d4:	21 e0       	ldi	r18, 0x01	; 1
     1d6:	30 e0       	ldi	r19, 0x00	; 0
     1d8:	40 e0       	ldi	r20, 0x00	; 0
     1da:	50 e0       	ldi	r21, 0x00	; 0
     1dc:	79 01       	movw	r14, r18
     1de:	8a 01       	movw	r16, r20
     1e0:	e6 28       	or	r14, r6
     1e2:	f7 28       	or	r15, r7
     1e4:	08 29       	or	r16, r8
     1e6:	19 29       	or	r17, r9
     1e8:	3c c0       	rjmp	.+120    	; 0x262 <_fpadd_parts+0x192>
     1ea:	23 2b       	or	r18, r19
     1ec:	d1 f1       	breq	.+116    	; 0x262 <_fpadd_parts+0x192>
     1ee:	26 0e       	add	r2, r22
     1f0:	37 1e       	adc	r3, r23
     1f2:	35 01       	movw	r6, r10
     1f4:	46 01       	movw	r8, r12
     1f6:	06 2e       	mov	r0, r22
     1f8:	04 c0       	rjmp	.+8      	; 0x202 <_fpadd_parts+0x132>
     1fa:	96 94       	lsr	r9
     1fc:	87 94       	ror	r8
     1fe:	77 94       	ror	r7
     200:	67 94       	ror	r6
     202:	0a 94       	dec	r0
     204:	d2 f7       	brpl	.-12     	; 0x1fa <_fpadd_parts+0x12a>
     206:	21 e0       	ldi	r18, 0x01	; 1
     208:	30 e0       	ldi	r19, 0x00	; 0
     20a:	40 e0       	ldi	r20, 0x00	; 0
     20c:	50 e0       	ldi	r21, 0x00	; 0
     20e:	04 c0       	rjmp	.+8      	; 0x218 <_fpadd_parts+0x148>
     210:	22 0f       	add	r18, r18
     212:	33 1f       	adc	r19, r19
     214:	44 1f       	adc	r20, r20
     216:	55 1f       	adc	r21, r21
     218:	6a 95       	dec	r22
     21a:	d2 f7       	brpl	.-12     	; 0x210 <_fpadd_parts+0x140>
     21c:	21 50       	subi	r18, 0x01	; 1
     21e:	30 40       	sbci	r19, 0x00	; 0
     220:	40 40       	sbci	r20, 0x00	; 0
     222:	50 40       	sbci	r21, 0x00	; 0
     224:	2a 21       	and	r18, r10
     226:	3b 21       	and	r19, r11
     228:	4c 21       	and	r20, r12
     22a:	5d 21       	and	r21, r13
     22c:	21 15       	cp	r18, r1
     22e:	31 05       	cpc	r19, r1
     230:	41 05       	cpc	r20, r1
     232:	51 05       	cpc	r21, r1
     234:	21 f0       	breq	.+8      	; 0x23e <_fpadd_parts+0x16e>
     236:	21 e0       	ldi	r18, 0x01	; 1
     238:	30 e0       	ldi	r19, 0x00	; 0
     23a:	40 e0       	ldi	r20, 0x00	; 0
     23c:	50 e0       	ldi	r21, 0x00	; 0
     23e:	59 01       	movw	r10, r18
     240:	6a 01       	movw	r12, r20
     242:	a6 28       	or	r10, r6
     244:	b7 28       	or	r11, r7
     246:	c8 28       	or	r12, r8
     248:	d9 28       	or	r13, r9
     24a:	0b c0       	rjmp	.+22     	; 0x262 <_fpadd_parts+0x192>
     24c:	82 15       	cp	r24, r2
     24e:	93 05       	cpc	r25, r3
     250:	2c f0       	brlt	.+10     	; 0x25c <_fpadd_parts+0x18c>
     252:	1c 01       	movw	r2, r24
     254:	aa 24       	eor	r10, r10
     256:	bb 24       	eor	r11, r11
     258:	65 01       	movw	r12, r10
     25a:	03 c0       	rjmp	.+6      	; 0x262 <_fpadd_parts+0x192>
     25c:	ee 24       	eor	r14, r14
     25e:	ff 24       	eor	r15, r15
     260:	87 01       	movw	r16, r14
     262:	11 96       	adiw	r26, 0x01	; 1
     264:	9c 91       	ld	r25, X
     266:	d2 01       	movw	r26, r4
     268:	11 96       	adiw	r26, 0x01	; 1
     26a:	8c 91       	ld	r24, X
     26c:	98 17       	cp	r25, r24
     26e:	09 f4       	brne	.+2      	; 0x272 <_fpadd_parts+0x1a2>
     270:	45 c0       	rjmp	.+138    	; 0x2fc <_fpadd_parts+0x22c>
     272:	99 23       	and	r25, r25
     274:	39 f0       	breq	.+14     	; 0x284 <_fpadd_parts+0x1b4>
     276:	a8 01       	movw	r20, r16
     278:	97 01       	movw	r18, r14
     27a:	2a 19       	sub	r18, r10
     27c:	3b 09       	sbc	r19, r11
     27e:	4c 09       	sbc	r20, r12
     280:	5d 09       	sbc	r21, r13
     282:	06 c0       	rjmp	.+12     	; 0x290 <_fpadd_parts+0x1c0>
     284:	a6 01       	movw	r20, r12
     286:	95 01       	movw	r18, r10
     288:	2e 19       	sub	r18, r14
     28a:	3f 09       	sbc	r19, r15
     28c:	40 0b       	sbc	r20, r16
     28e:	51 0b       	sbc	r21, r17
     290:	57 fd       	sbrc	r21, 7
     292:	08 c0       	rjmp	.+16     	; 0x2a4 <_fpadd_parts+0x1d4>
     294:	11 82       	std	Z+1, r1	; 0x01
     296:	33 82       	std	Z+3, r3	; 0x03
     298:	22 82       	std	Z+2, r2	; 0x02
     29a:	24 83       	std	Z+4, r18	; 0x04
     29c:	35 83       	std	Z+5, r19	; 0x05
     29e:	46 83       	std	Z+6, r20	; 0x06
     2a0:	57 83       	std	Z+7, r21	; 0x07
     2a2:	1d c0       	rjmp	.+58     	; 0x2de <_fpadd_parts+0x20e>
     2a4:	81 e0       	ldi	r24, 0x01	; 1
     2a6:	81 83       	std	Z+1, r24	; 0x01
     2a8:	33 82       	std	Z+3, r3	; 0x03
     2aa:	22 82       	std	Z+2, r2	; 0x02
     2ac:	88 27       	eor	r24, r24
     2ae:	99 27       	eor	r25, r25
     2b0:	dc 01       	movw	r26, r24
     2b2:	82 1b       	sub	r24, r18
     2b4:	93 0b       	sbc	r25, r19
     2b6:	a4 0b       	sbc	r26, r20
     2b8:	b5 0b       	sbc	r27, r21
     2ba:	84 83       	std	Z+4, r24	; 0x04
     2bc:	95 83       	std	Z+5, r25	; 0x05
     2be:	a6 83       	std	Z+6, r26	; 0x06
     2c0:	b7 83       	std	Z+7, r27	; 0x07
     2c2:	0d c0       	rjmp	.+26     	; 0x2de <_fpadd_parts+0x20e>
     2c4:	22 0f       	add	r18, r18
     2c6:	33 1f       	adc	r19, r19
     2c8:	44 1f       	adc	r20, r20
     2ca:	55 1f       	adc	r21, r21
     2cc:	24 83       	std	Z+4, r18	; 0x04
     2ce:	35 83       	std	Z+5, r19	; 0x05
     2d0:	46 83       	std	Z+6, r20	; 0x06
     2d2:	57 83       	std	Z+7, r21	; 0x07
     2d4:	82 81       	ldd	r24, Z+2	; 0x02
     2d6:	93 81       	ldd	r25, Z+3	; 0x03
     2d8:	01 97       	sbiw	r24, 0x01	; 1
     2da:	93 83       	std	Z+3, r25	; 0x03
     2dc:	82 83       	std	Z+2, r24	; 0x02
     2de:	24 81       	ldd	r18, Z+4	; 0x04
     2e0:	35 81       	ldd	r19, Z+5	; 0x05
     2e2:	46 81       	ldd	r20, Z+6	; 0x06
     2e4:	57 81       	ldd	r21, Z+7	; 0x07
     2e6:	da 01       	movw	r26, r20
     2e8:	c9 01       	movw	r24, r18
     2ea:	01 97       	sbiw	r24, 0x01	; 1
     2ec:	a1 09       	sbc	r26, r1
     2ee:	b1 09       	sbc	r27, r1
     2f0:	8f 5f       	subi	r24, 0xFF	; 255
     2f2:	9f 4f       	sbci	r25, 0xFF	; 255
     2f4:	af 4f       	sbci	r26, 0xFF	; 255
     2f6:	bf 43       	sbci	r27, 0x3F	; 63
     2f8:	28 f3       	brcs	.-54     	; 0x2c4 <_fpadd_parts+0x1f4>
     2fa:	0b c0       	rjmp	.+22     	; 0x312 <_fpadd_parts+0x242>
     2fc:	91 83       	std	Z+1, r25	; 0x01
     2fe:	33 82       	std	Z+3, r3	; 0x03
     300:	22 82       	std	Z+2, r2	; 0x02
     302:	ea 0c       	add	r14, r10
     304:	fb 1c       	adc	r15, r11
     306:	0c 1d       	adc	r16, r12
     308:	1d 1d       	adc	r17, r13
     30a:	e4 82       	std	Z+4, r14	; 0x04
     30c:	f5 82       	std	Z+5, r15	; 0x05
     30e:	06 83       	std	Z+6, r16	; 0x06
     310:	17 83       	std	Z+7, r17	; 0x07
     312:	83 e0       	ldi	r24, 0x03	; 3
     314:	80 83       	st	Z, r24
     316:	24 81       	ldd	r18, Z+4	; 0x04
     318:	35 81       	ldd	r19, Z+5	; 0x05
     31a:	46 81       	ldd	r20, Z+6	; 0x06
     31c:	57 81       	ldd	r21, Z+7	; 0x07
     31e:	57 ff       	sbrs	r21, 7
     320:	1a c0       	rjmp	.+52     	; 0x356 <_fpadd_parts+0x286>
     322:	c9 01       	movw	r24, r18
     324:	aa 27       	eor	r26, r26
     326:	97 fd       	sbrc	r25, 7
     328:	a0 95       	com	r26
     32a:	ba 2f       	mov	r27, r26
     32c:	81 70       	andi	r24, 0x01	; 1
     32e:	90 70       	andi	r25, 0x00	; 0
     330:	a0 70       	andi	r26, 0x00	; 0
     332:	b0 70       	andi	r27, 0x00	; 0
     334:	56 95       	lsr	r21
     336:	47 95       	ror	r20
     338:	37 95       	ror	r19
     33a:	27 95       	ror	r18
     33c:	82 2b       	or	r24, r18
     33e:	93 2b       	or	r25, r19
     340:	a4 2b       	or	r26, r20
     342:	b5 2b       	or	r27, r21
     344:	84 83       	std	Z+4, r24	; 0x04
     346:	95 83       	std	Z+5, r25	; 0x05
     348:	a6 83       	std	Z+6, r26	; 0x06
     34a:	b7 83       	std	Z+7, r27	; 0x07
     34c:	82 81       	ldd	r24, Z+2	; 0x02
     34e:	93 81       	ldd	r25, Z+3	; 0x03
     350:	01 96       	adiw	r24, 0x01	; 1
     352:	93 83       	std	Z+3, r25	; 0x03
     354:	82 83       	std	Z+2, r24	; 0x02
     356:	df 01       	movw	r26, r30
     358:	01 c0       	rjmp	.+2      	; 0x35c <_fpadd_parts+0x28c>
     35a:	d2 01       	movw	r26, r4
     35c:	cd 01       	movw	r24, r26
     35e:	cd b7       	in	r28, 0x3d	; 61
     360:	de b7       	in	r29, 0x3e	; 62
     362:	e2 e1       	ldi	r30, 0x12	; 18
     364:	0c 94 e0 0a 	jmp	0x15c0	; 0x15c0 <__epilogue_restores__>

00000368 <__subsf3>:
     368:	a0 e2       	ldi	r26, 0x20	; 32
     36a:	b0 e0       	ldi	r27, 0x00	; 0
     36c:	ea eb       	ldi	r30, 0xBA	; 186
     36e:	f1 e0       	ldi	r31, 0x01	; 1
     370:	0c 94 d0 0a 	jmp	0x15a0	; 0x15a0 <__prologue_saves__+0x18>
     374:	69 83       	std	Y+1, r22	; 0x01
     376:	7a 83       	std	Y+2, r23	; 0x02
     378:	8b 83       	std	Y+3, r24	; 0x03
     37a:	9c 83       	std	Y+4, r25	; 0x04
     37c:	2d 83       	std	Y+5, r18	; 0x05
     37e:	3e 83       	std	Y+6, r19	; 0x06
     380:	4f 83       	std	Y+7, r20	; 0x07
     382:	58 87       	std	Y+8, r21	; 0x08
     384:	e9 e0       	ldi	r30, 0x09	; 9
     386:	ee 2e       	mov	r14, r30
     388:	f1 2c       	mov	r15, r1
     38a:	ec 0e       	add	r14, r28
     38c:	fd 1e       	adc	r15, r29
     38e:	ce 01       	movw	r24, r28
     390:	01 96       	adiw	r24, 0x01	; 1
     392:	b7 01       	movw	r22, r14
     394:	dc d2       	rcall	.+1464   	; 0x94e <__unpack_f>
     396:	8e 01       	movw	r16, r28
     398:	0f 5e       	subi	r16, 0xEF	; 239
     39a:	1f 4f       	sbci	r17, 0xFF	; 255
     39c:	ce 01       	movw	r24, r28
     39e:	05 96       	adiw	r24, 0x05	; 5
     3a0:	b8 01       	movw	r22, r16
     3a2:	d5 d2       	rcall	.+1450   	; 0x94e <__unpack_f>
     3a4:	8a 89       	ldd	r24, Y+18	; 0x12
     3a6:	91 e0       	ldi	r25, 0x01	; 1
     3a8:	89 27       	eor	r24, r25
     3aa:	8a 8b       	std	Y+18, r24	; 0x12
     3ac:	c7 01       	movw	r24, r14
     3ae:	b8 01       	movw	r22, r16
     3b0:	ae 01       	movw	r20, r28
     3b2:	47 5e       	subi	r20, 0xE7	; 231
     3b4:	5f 4f       	sbci	r21, 0xFF	; 255
     3b6:	8c de       	rcall	.-744    	; 0xd0 <_fpadd_parts>
     3b8:	f5 d1       	rcall	.+1002   	; 0x7a4 <__pack_f>
     3ba:	a0 96       	adiw	r28, 0x20	; 32
     3bc:	e6 e0       	ldi	r30, 0x06	; 6
     3be:	0c 94 ec 0a 	jmp	0x15d8	; 0x15d8 <__epilogue_restores__+0x18>

000003c2 <__addsf3>:
     3c2:	a0 e2       	ldi	r26, 0x20	; 32
     3c4:	b0 e0       	ldi	r27, 0x00	; 0
     3c6:	e7 ee       	ldi	r30, 0xE7	; 231
     3c8:	f1 e0       	ldi	r31, 0x01	; 1
     3ca:	0c 94 d0 0a 	jmp	0x15a0	; 0x15a0 <__prologue_saves__+0x18>
     3ce:	69 83       	std	Y+1, r22	; 0x01
     3d0:	7a 83       	std	Y+2, r23	; 0x02
     3d2:	8b 83       	std	Y+3, r24	; 0x03
     3d4:	9c 83       	std	Y+4, r25	; 0x04
     3d6:	2d 83       	std	Y+5, r18	; 0x05
     3d8:	3e 83       	std	Y+6, r19	; 0x06
     3da:	4f 83       	std	Y+7, r20	; 0x07
     3dc:	58 87       	std	Y+8, r21	; 0x08
     3de:	f9 e0       	ldi	r31, 0x09	; 9
     3e0:	ef 2e       	mov	r14, r31
     3e2:	f1 2c       	mov	r15, r1
     3e4:	ec 0e       	add	r14, r28
     3e6:	fd 1e       	adc	r15, r29
     3e8:	ce 01       	movw	r24, r28
     3ea:	01 96       	adiw	r24, 0x01	; 1
     3ec:	b7 01       	movw	r22, r14
     3ee:	af d2       	rcall	.+1374   	; 0x94e <__unpack_f>
     3f0:	8e 01       	movw	r16, r28
     3f2:	0f 5e       	subi	r16, 0xEF	; 239
     3f4:	1f 4f       	sbci	r17, 0xFF	; 255
     3f6:	ce 01       	movw	r24, r28
     3f8:	05 96       	adiw	r24, 0x05	; 5
     3fa:	b8 01       	movw	r22, r16
     3fc:	a8 d2       	rcall	.+1360   	; 0x94e <__unpack_f>
     3fe:	c7 01       	movw	r24, r14
     400:	b8 01       	movw	r22, r16
     402:	ae 01       	movw	r20, r28
     404:	47 5e       	subi	r20, 0xE7	; 231
     406:	5f 4f       	sbci	r21, 0xFF	; 255
     408:	63 de       	rcall	.-826    	; 0xd0 <_fpadd_parts>
     40a:	cc d1       	rcall	.+920    	; 0x7a4 <__pack_f>
     40c:	a0 96       	adiw	r28, 0x20	; 32
     40e:	e6 e0       	ldi	r30, 0x06	; 6
     410:	0c 94 ec 0a 	jmp	0x15d8	; 0x15d8 <__epilogue_restores__+0x18>

00000414 <__mulsf3>:
     414:	a0 e2       	ldi	r26, 0x20	; 32
     416:	b0 e0       	ldi	r27, 0x00	; 0
     418:	e0 e1       	ldi	r30, 0x10	; 16
     41a:	f2 e0       	ldi	r31, 0x02	; 2
     41c:	0c 94 c4 0a 	jmp	0x1588	; 0x1588 <__prologue_saves__>
     420:	69 83       	std	Y+1, r22	; 0x01
     422:	7a 83       	std	Y+2, r23	; 0x02
     424:	8b 83       	std	Y+3, r24	; 0x03
     426:	9c 83       	std	Y+4, r25	; 0x04
     428:	2d 83       	std	Y+5, r18	; 0x05
     42a:	3e 83       	std	Y+6, r19	; 0x06
     42c:	4f 83       	std	Y+7, r20	; 0x07
     42e:	58 87       	std	Y+8, r21	; 0x08
     430:	ce 01       	movw	r24, r28
     432:	01 96       	adiw	r24, 0x01	; 1
     434:	be 01       	movw	r22, r28
     436:	67 5f       	subi	r22, 0xF7	; 247
     438:	7f 4f       	sbci	r23, 0xFF	; 255
     43a:	89 d2       	rcall	.+1298   	; 0x94e <__unpack_f>
     43c:	ce 01       	movw	r24, r28
     43e:	05 96       	adiw	r24, 0x05	; 5
     440:	be 01       	movw	r22, r28
     442:	6f 5e       	subi	r22, 0xEF	; 239
     444:	7f 4f       	sbci	r23, 0xFF	; 255
     446:	83 d2       	rcall	.+1286   	; 0x94e <__unpack_f>
     448:	99 85       	ldd	r25, Y+9	; 0x09
     44a:	92 30       	cpi	r25, 0x02	; 2
     44c:	88 f0       	brcs	.+34     	; 0x470 <__mulsf3+0x5c>
     44e:	89 89       	ldd	r24, Y+17	; 0x11
     450:	82 30       	cpi	r24, 0x02	; 2
     452:	c8 f0       	brcs	.+50     	; 0x486 <__mulsf3+0x72>
     454:	94 30       	cpi	r25, 0x04	; 4
     456:	19 f4       	brne	.+6      	; 0x45e <__mulsf3+0x4a>
     458:	82 30       	cpi	r24, 0x02	; 2
     45a:	51 f4       	brne	.+20     	; 0x470 <__mulsf3+0x5c>
     45c:	04 c0       	rjmp	.+8      	; 0x466 <__mulsf3+0x52>
     45e:	84 30       	cpi	r24, 0x04	; 4
     460:	29 f4       	brne	.+10     	; 0x46c <__mulsf3+0x58>
     462:	92 30       	cpi	r25, 0x02	; 2
     464:	81 f4       	brne	.+32     	; 0x486 <__mulsf3+0x72>
     466:	80 e6       	ldi	r24, 0x60	; 96
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	c6 c0       	rjmp	.+396    	; 0x5f8 <__mulsf3+0x1e4>
     46c:	92 30       	cpi	r25, 0x02	; 2
     46e:	49 f4       	brne	.+18     	; 0x482 <__mulsf3+0x6e>
     470:	20 e0       	ldi	r18, 0x00	; 0
     472:	9a 85       	ldd	r25, Y+10	; 0x0a
     474:	8a 89       	ldd	r24, Y+18	; 0x12
     476:	98 13       	cpse	r25, r24
     478:	21 e0       	ldi	r18, 0x01	; 1
     47a:	2a 87       	std	Y+10, r18	; 0x0a
     47c:	ce 01       	movw	r24, r28
     47e:	09 96       	adiw	r24, 0x09	; 9
     480:	bb c0       	rjmp	.+374    	; 0x5f8 <__mulsf3+0x1e4>
     482:	82 30       	cpi	r24, 0x02	; 2
     484:	49 f4       	brne	.+18     	; 0x498 <__mulsf3+0x84>
     486:	20 e0       	ldi	r18, 0x00	; 0
     488:	9a 85       	ldd	r25, Y+10	; 0x0a
     48a:	8a 89       	ldd	r24, Y+18	; 0x12
     48c:	98 13       	cpse	r25, r24
     48e:	21 e0       	ldi	r18, 0x01	; 1
     490:	2a 8b       	std	Y+18, r18	; 0x12
     492:	ce 01       	movw	r24, r28
     494:	41 96       	adiw	r24, 0x11	; 17
     496:	b0 c0       	rjmp	.+352    	; 0x5f8 <__mulsf3+0x1e4>
     498:	2d 84       	ldd	r2, Y+13	; 0x0d
     49a:	3e 84       	ldd	r3, Y+14	; 0x0e
     49c:	4f 84       	ldd	r4, Y+15	; 0x0f
     49e:	58 88       	ldd	r5, Y+16	; 0x10
     4a0:	6d 88       	ldd	r6, Y+21	; 0x15
     4a2:	7e 88       	ldd	r7, Y+22	; 0x16
     4a4:	8f 88       	ldd	r8, Y+23	; 0x17
     4a6:	98 8c       	ldd	r9, Y+24	; 0x18
     4a8:	ee 24       	eor	r14, r14
     4aa:	ff 24       	eor	r15, r15
     4ac:	87 01       	movw	r16, r14
     4ae:	aa 24       	eor	r10, r10
     4b0:	bb 24       	eor	r11, r11
     4b2:	65 01       	movw	r12, r10
     4b4:	40 e0       	ldi	r20, 0x00	; 0
     4b6:	50 e0       	ldi	r21, 0x00	; 0
     4b8:	60 e0       	ldi	r22, 0x00	; 0
     4ba:	70 e0       	ldi	r23, 0x00	; 0
     4bc:	e0 e0       	ldi	r30, 0x00	; 0
     4be:	f0 e0       	ldi	r31, 0x00	; 0
     4c0:	c1 01       	movw	r24, r2
     4c2:	81 70       	andi	r24, 0x01	; 1
     4c4:	90 70       	andi	r25, 0x00	; 0
     4c6:	89 2b       	or	r24, r25
     4c8:	e9 f0       	breq	.+58     	; 0x504 <__mulsf3+0xf0>
     4ca:	e6 0c       	add	r14, r6
     4cc:	f7 1c       	adc	r15, r7
     4ce:	08 1d       	adc	r16, r8
     4d0:	19 1d       	adc	r17, r9
     4d2:	9a 01       	movw	r18, r20
     4d4:	ab 01       	movw	r20, r22
     4d6:	2a 0d       	add	r18, r10
     4d8:	3b 1d       	adc	r19, r11
     4da:	4c 1d       	adc	r20, r12
     4dc:	5d 1d       	adc	r21, r13
     4de:	80 e0       	ldi	r24, 0x00	; 0
     4e0:	90 e0       	ldi	r25, 0x00	; 0
     4e2:	a0 e0       	ldi	r26, 0x00	; 0
     4e4:	b0 e0       	ldi	r27, 0x00	; 0
     4e6:	e6 14       	cp	r14, r6
     4e8:	f7 04       	cpc	r15, r7
     4ea:	08 05       	cpc	r16, r8
     4ec:	19 05       	cpc	r17, r9
     4ee:	20 f4       	brcc	.+8      	; 0x4f8 <__mulsf3+0xe4>
     4f0:	81 e0       	ldi	r24, 0x01	; 1
     4f2:	90 e0       	ldi	r25, 0x00	; 0
     4f4:	a0 e0       	ldi	r26, 0x00	; 0
     4f6:	b0 e0       	ldi	r27, 0x00	; 0
     4f8:	ba 01       	movw	r22, r20
     4fa:	a9 01       	movw	r20, r18
     4fc:	48 0f       	add	r20, r24
     4fe:	59 1f       	adc	r21, r25
     500:	6a 1f       	adc	r22, r26
     502:	7b 1f       	adc	r23, r27
     504:	aa 0c       	add	r10, r10
     506:	bb 1c       	adc	r11, r11
     508:	cc 1c       	adc	r12, r12
     50a:	dd 1c       	adc	r13, r13
     50c:	97 fe       	sbrs	r9, 7
     50e:	08 c0       	rjmp	.+16     	; 0x520 <__mulsf3+0x10c>
     510:	81 e0       	ldi	r24, 0x01	; 1
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	a0 e0       	ldi	r26, 0x00	; 0
     516:	b0 e0       	ldi	r27, 0x00	; 0
     518:	a8 2a       	or	r10, r24
     51a:	b9 2a       	or	r11, r25
     51c:	ca 2a       	or	r12, r26
     51e:	db 2a       	or	r13, r27
     520:	31 96       	adiw	r30, 0x01	; 1
     522:	e0 32       	cpi	r30, 0x20	; 32
     524:	f1 05       	cpc	r31, r1
     526:	49 f0       	breq	.+18     	; 0x53a <__mulsf3+0x126>
     528:	66 0c       	add	r6, r6
     52a:	77 1c       	adc	r7, r7
     52c:	88 1c       	adc	r8, r8
     52e:	99 1c       	adc	r9, r9
     530:	56 94       	lsr	r5
     532:	47 94       	ror	r4
     534:	37 94       	ror	r3
     536:	27 94       	ror	r2
     538:	c3 cf       	rjmp	.-122    	; 0x4c0 <__mulsf3+0xac>
     53a:	fa 85       	ldd	r31, Y+10	; 0x0a
     53c:	ea 89       	ldd	r30, Y+18	; 0x12
     53e:	2b 89       	ldd	r18, Y+19	; 0x13
     540:	3c 89       	ldd	r19, Y+20	; 0x14
     542:	8b 85       	ldd	r24, Y+11	; 0x0b
     544:	9c 85       	ldd	r25, Y+12	; 0x0c
     546:	28 0f       	add	r18, r24
     548:	39 1f       	adc	r19, r25
     54a:	2e 5f       	subi	r18, 0xFE	; 254
     54c:	3f 4f       	sbci	r19, 0xFF	; 255
     54e:	17 c0       	rjmp	.+46     	; 0x57e <__mulsf3+0x16a>
     550:	ca 01       	movw	r24, r20
     552:	81 70       	andi	r24, 0x01	; 1
     554:	90 70       	andi	r25, 0x00	; 0
     556:	89 2b       	or	r24, r25
     558:	61 f0       	breq	.+24     	; 0x572 <__mulsf3+0x15e>
     55a:	16 95       	lsr	r17
     55c:	07 95       	ror	r16
     55e:	f7 94       	ror	r15
     560:	e7 94       	ror	r14
     562:	80 e0       	ldi	r24, 0x00	; 0
     564:	90 e0       	ldi	r25, 0x00	; 0
     566:	a0 e0       	ldi	r26, 0x00	; 0
     568:	b0 e8       	ldi	r27, 0x80	; 128
     56a:	e8 2a       	or	r14, r24
     56c:	f9 2a       	or	r15, r25
     56e:	0a 2b       	or	r16, r26
     570:	1b 2b       	or	r17, r27
     572:	76 95       	lsr	r23
     574:	67 95       	ror	r22
     576:	57 95       	ror	r21
     578:	47 95       	ror	r20
     57a:	2f 5f       	subi	r18, 0xFF	; 255
     57c:	3f 4f       	sbci	r19, 0xFF	; 255
     57e:	77 fd       	sbrc	r23, 7
     580:	e7 cf       	rjmp	.-50     	; 0x550 <__mulsf3+0x13c>
     582:	0c c0       	rjmp	.+24     	; 0x59c <__mulsf3+0x188>
     584:	44 0f       	add	r20, r20
     586:	55 1f       	adc	r21, r21
     588:	66 1f       	adc	r22, r22
     58a:	77 1f       	adc	r23, r23
     58c:	17 fd       	sbrc	r17, 7
     58e:	41 60       	ori	r20, 0x01	; 1
     590:	ee 0c       	add	r14, r14
     592:	ff 1c       	adc	r15, r15
     594:	00 1f       	adc	r16, r16
     596:	11 1f       	adc	r17, r17
     598:	21 50       	subi	r18, 0x01	; 1
     59a:	30 40       	sbci	r19, 0x00	; 0
     59c:	40 30       	cpi	r20, 0x00	; 0
     59e:	90 e0       	ldi	r25, 0x00	; 0
     5a0:	59 07       	cpc	r21, r25
     5a2:	90 e0       	ldi	r25, 0x00	; 0
     5a4:	69 07       	cpc	r22, r25
     5a6:	90 e4       	ldi	r25, 0x40	; 64
     5a8:	79 07       	cpc	r23, r25
     5aa:	60 f3       	brcs	.-40     	; 0x584 <__mulsf3+0x170>
     5ac:	2b 8f       	std	Y+27, r18	; 0x1b
     5ae:	3c 8f       	std	Y+28, r19	; 0x1c
     5b0:	db 01       	movw	r26, r22
     5b2:	ca 01       	movw	r24, r20
     5b4:	8f 77       	andi	r24, 0x7F	; 127
     5b6:	90 70       	andi	r25, 0x00	; 0
     5b8:	a0 70       	andi	r26, 0x00	; 0
     5ba:	b0 70       	andi	r27, 0x00	; 0
     5bc:	80 34       	cpi	r24, 0x40	; 64
     5be:	91 05       	cpc	r25, r1
     5c0:	a1 05       	cpc	r26, r1
     5c2:	b1 05       	cpc	r27, r1
     5c4:	61 f4       	brne	.+24     	; 0x5de <__mulsf3+0x1ca>
     5c6:	47 fd       	sbrc	r20, 7
     5c8:	0a c0       	rjmp	.+20     	; 0x5de <__mulsf3+0x1ca>
     5ca:	e1 14       	cp	r14, r1
     5cc:	f1 04       	cpc	r15, r1
     5ce:	01 05       	cpc	r16, r1
     5d0:	11 05       	cpc	r17, r1
     5d2:	29 f0       	breq	.+10     	; 0x5de <__mulsf3+0x1ca>
     5d4:	40 5c       	subi	r20, 0xC0	; 192
     5d6:	5f 4f       	sbci	r21, 0xFF	; 255
     5d8:	6f 4f       	sbci	r22, 0xFF	; 255
     5da:	7f 4f       	sbci	r23, 0xFF	; 255
     5dc:	40 78       	andi	r20, 0x80	; 128
     5de:	1a 8e       	std	Y+26, r1	; 0x1a
     5e0:	fe 17       	cp	r31, r30
     5e2:	11 f0       	breq	.+4      	; 0x5e8 <__mulsf3+0x1d4>
     5e4:	81 e0       	ldi	r24, 0x01	; 1
     5e6:	8a 8f       	std	Y+26, r24	; 0x1a
     5e8:	4d 8f       	std	Y+29, r20	; 0x1d
     5ea:	5e 8f       	std	Y+30, r21	; 0x1e
     5ec:	6f 8f       	std	Y+31, r22	; 0x1f
     5ee:	78 a3       	std	Y+32, r23	; 0x20
     5f0:	83 e0       	ldi	r24, 0x03	; 3
     5f2:	89 8f       	std	Y+25, r24	; 0x19
     5f4:	ce 01       	movw	r24, r28
     5f6:	49 96       	adiw	r24, 0x19	; 25
     5f8:	d5 d0       	rcall	.+426    	; 0x7a4 <__pack_f>
     5fa:	a0 96       	adiw	r28, 0x20	; 32
     5fc:	e2 e1       	ldi	r30, 0x12	; 18
     5fe:	e0 c7       	rjmp	.+4032   	; 0x15c0 <__epilogue_restores__>

00000600 <__gtsf2>:
     600:	a8 e1       	ldi	r26, 0x18	; 24
     602:	b0 e0       	ldi	r27, 0x00	; 0
     604:	e5 e0       	ldi	r30, 0x05	; 5
     606:	f3 e0       	ldi	r31, 0x03	; 3
     608:	cb c7       	rjmp	.+3990   	; 0x15a0 <__prologue_saves__+0x18>
     60a:	69 83       	std	Y+1, r22	; 0x01
     60c:	7a 83       	std	Y+2, r23	; 0x02
     60e:	8b 83       	std	Y+3, r24	; 0x03
     610:	9c 83       	std	Y+4, r25	; 0x04
     612:	2d 83       	std	Y+5, r18	; 0x05
     614:	3e 83       	std	Y+6, r19	; 0x06
     616:	4f 83       	std	Y+7, r20	; 0x07
     618:	58 87       	std	Y+8, r21	; 0x08
     61a:	89 e0       	ldi	r24, 0x09	; 9
     61c:	e8 2e       	mov	r14, r24
     61e:	f1 2c       	mov	r15, r1
     620:	ec 0e       	add	r14, r28
     622:	fd 1e       	adc	r15, r29
     624:	ce 01       	movw	r24, r28
     626:	01 96       	adiw	r24, 0x01	; 1
     628:	b7 01       	movw	r22, r14
     62a:	91 d1       	rcall	.+802    	; 0x94e <__unpack_f>
     62c:	8e 01       	movw	r16, r28
     62e:	0f 5e       	subi	r16, 0xEF	; 239
     630:	1f 4f       	sbci	r17, 0xFF	; 255
     632:	ce 01       	movw	r24, r28
     634:	05 96       	adiw	r24, 0x05	; 5
     636:	b8 01       	movw	r22, r16
     638:	8a d1       	rcall	.+788    	; 0x94e <__unpack_f>
     63a:	89 85       	ldd	r24, Y+9	; 0x09
     63c:	82 30       	cpi	r24, 0x02	; 2
     63e:	38 f0       	brcs	.+14     	; 0x64e <__gtsf2+0x4e>
     640:	89 89       	ldd	r24, Y+17	; 0x11
     642:	82 30       	cpi	r24, 0x02	; 2
     644:	20 f0       	brcs	.+8      	; 0x64e <__gtsf2+0x4e>
     646:	c7 01       	movw	r24, r14
     648:	b8 01       	movw	r22, r16
     64a:	f9 d1       	rcall	.+1010   	; 0xa3e <__fpcmp_parts_f>
     64c:	01 c0       	rjmp	.+2      	; 0x650 <__gtsf2+0x50>
     64e:	8f ef       	ldi	r24, 0xFF	; 255
     650:	68 96       	adiw	r28, 0x18	; 24
     652:	e6 e0       	ldi	r30, 0x06	; 6
     654:	c1 c7       	rjmp	.+3970   	; 0x15d8 <__epilogue_restores__+0x18>

00000656 <__gesf2>:
     656:	a8 e1       	ldi	r26, 0x18	; 24
     658:	b0 e0       	ldi	r27, 0x00	; 0
     65a:	e0 e3       	ldi	r30, 0x30	; 48
     65c:	f3 e0       	ldi	r31, 0x03	; 3
     65e:	a0 c7       	rjmp	.+3904   	; 0x15a0 <__prologue_saves__+0x18>
     660:	69 83       	std	Y+1, r22	; 0x01
     662:	7a 83       	std	Y+2, r23	; 0x02
     664:	8b 83       	std	Y+3, r24	; 0x03
     666:	9c 83       	std	Y+4, r25	; 0x04
     668:	2d 83       	std	Y+5, r18	; 0x05
     66a:	3e 83       	std	Y+6, r19	; 0x06
     66c:	4f 83       	std	Y+7, r20	; 0x07
     66e:	58 87       	std	Y+8, r21	; 0x08
     670:	89 e0       	ldi	r24, 0x09	; 9
     672:	e8 2e       	mov	r14, r24
     674:	f1 2c       	mov	r15, r1
     676:	ec 0e       	add	r14, r28
     678:	fd 1e       	adc	r15, r29
     67a:	ce 01       	movw	r24, r28
     67c:	01 96       	adiw	r24, 0x01	; 1
     67e:	b7 01       	movw	r22, r14
     680:	66 d1       	rcall	.+716    	; 0x94e <__unpack_f>
     682:	8e 01       	movw	r16, r28
     684:	0f 5e       	subi	r16, 0xEF	; 239
     686:	1f 4f       	sbci	r17, 0xFF	; 255
     688:	ce 01       	movw	r24, r28
     68a:	05 96       	adiw	r24, 0x05	; 5
     68c:	b8 01       	movw	r22, r16
     68e:	5f d1       	rcall	.+702    	; 0x94e <__unpack_f>
     690:	89 85       	ldd	r24, Y+9	; 0x09
     692:	82 30       	cpi	r24, 0x02	; 2
     694:	38 f0       	brcs	.+14     	; 0x6a4 <__gesf2+0x4e>
     696:	89 89       	ldd	r24, Y+17	; 0x11
     698:	82 30       	cpi	r24, 0x02	; 2
     69a:	20 f0       	brcs	.+8      	; 0x6a4 <__gesf2+0x4e>
     69c:	c7 01       	movw	r24, r14
     69e:	b8 01       	movw	r22, r16
     6a0:	ce d1       	rcall	.+924    	; 0xa3e <__fpcmp_parts_f>
     6a2:	01 c0       	rjmp	.+2      	; 0x6a6 <__gesf2+0x50>
     6a4:	8f ef       	ldi	r24, 0xFF	; 255
     6a6:	68 96       	adiw	r28, 0x18	; 24
     6a8:	e6 e0       	ldi	r30, 0x06	; 6
     6aa:	96 c7       	rjmp	.+3884   	; 0x15d8 <__epilogue_restores__+0x18>

000006ac <__ltsf2>:
     6ac:	a8 e1       	ldi	r26, 0x18	; 24
     6ae:	b0 e0       	ldi	r27, 0x00	; 0
     6b0:	eb e5       	ldi	r30, 0x5B	; 91
     6b2:	f3 e0       	ldi	r31, 0x03	; 3
     6b4:	75 c7       	rjmp	.+3818   	; 0x15a0 <__prologue_saves__+0x18>
     6b6:	69 83       	std	Y+1, r22	; 0x01
     6b8:	7a 83       	std	Y+2, r23	; 0x02
     6ba:	8b 83       	std	Y+3, r24	; 0x03
     6bc:	9c 83       	std	Y+4, r25	; 0x04
     6be:	2d 83       	std	Y+5, r18	; 0x05
     6c0:	3e 83       	std	Y+6, r19	; 0x06
     6c2:	4f 83       	std	Y+7, r20	; 0x07
     6c4:	58 87       	std	Y+8, r21	; 0x08
     6c6:	89 e0       	ldi	r24, 0x09	; 9
     6c8:	e8 2e       	mov	r14, r24
     6ca:	f1 2c       	mov	r15, r1
     6cc:	ec 0e       	add	r14, r28
     6ce:	fd 1e       	adc	r15, r29
     6d0:	ce 01       	movw	r24, r28
     6d2:	01 96       	adiw	r24, 0x01	; 1
     6d4:	b7 01       	movw	r22, r14
     6d6:	3b d1       	rcall	.+630    	; 0x94e <__unpack_f>
     6d8:	8e 01       	movw	r16, r28
     6da:	0f 5e       	subi	r16, 0xEF	; 239
     6dc:	1f 4f       	sbci	r17, 0xFF	; 255
     6de:	ce 01       	movw	r24, r28
     6e0:	05 96       	adiw	r24, 0x05	; 5
     6e2:	b8 01       	movw	r22, r16
     6e4:	34 d1       	rcall	.+616    	; 0x94e <__unpack_f>
     6e6:	89 85       	ldd	r24, Y+9	; 0x09
     6e8:	82 30       	cpi	r24, 0x02	; 2
     6ea:	38 f0       	brcs	.+14     	; 0x6fa <__ltsf2+0x4e>
     6ec:	89 89       	ldd	r24, Y+17	; 0x11
     6ee:	82 30       	cpi	r24, 0x02	; 2
     6f0:	20 f0       	brcs	.+8      	; 0x6fa <__ltsf2+0x4e>
     6f2:	c7 01       	movw	r24, r14
     6f4:	b8 01       	movw	r22, r16
     6f6:	a3 d1       	rcall	.+838    	; 0xa3e <__fpcmp_parts_f>
     6f8:	01 c0       	rjmp	.+2      	; 0x6fc <__ltsf2+0x50>
     6fa:	81 e0       	ldi	r24, 0x01	; 1
     6fc:	68 96       	adiw	r28, 0x18	; 24
     6fe:	e6 e0       	ldi	r30, 0x06	; 6
     700:	6b c7       	rjmp	.+3798   	; 0x15d8 <__epilogue_restores__+0x18>

00000702 <__fixsfsi>:
     702:	ac e0       	ldi	r26, 0x0C	; 12
     704:	b0 e0       	ldi	r27, 0x00	; 0
     706:	e6 e8       	ldi	r30, 0x86	; 134
     708:	f3 e0       	ldi	r31, 0x03	; 3
     70a:	4e c7       	rjmp	.+3740   	; 0x15a8 <__prologue_saves__+0x20>
     70c:	69 83       	std	Y+1, r22	; 0x01
     70e:	7a 83       	std	Y+2, r23	; 0x02
     710:	8b 83       	std	Y+3, r24	; 0x03
     712:	9c 83       	std	Y+4, r25	; 0x04
     714:	ce 01       	movw	r24, r28
     716:	01 96       	adiw	r24, 0x01	; 1
     718:	be 01       	movw	r22, r28
     71a:	6b 5f       	subi	r22, 0xFB	; 251
     71c:	7f 4f       	sbci	r23, 0xFF	; 255
     71e:	17 d1       	rcall	.+558    	; 0x94e <__unpack_f>
     720:	8d 81       	ldd	r24, Y+5	; 0x05
     722:	82 30       	cpi	r24, 0x02	; 2
     724:	61 f1       	breq	.+88     	; 0x77e <__fixsfsi+0x7c>
     726:	82 30       	cpi	r24, 0x02	; 2
     728:	50 f1       	brcs	.+84     	; 0x77e <__fixsfsi+0x7c>
     72a:	84 30       	cpi	r24, 0x04	; 4
     72c:	21 f4       	brne	.+8      	; 0x736 <__fixsfsi+0x34>
     72e:	8e 81       	ldd	r24, Y+6	; 0x06
     730:	88 23       	and	r24, r24
     732:	51 f1       	breq	.+84     	; 0x788 <__fixsfsi+0x86>
     734:	2e c0       	rjmp	.+92     	; 0x792 <__fixsfsi+0x90>
     736:	2f 81       	ldd	r18, Y+7	; 0x07
     738:	38 85       	ldd	r19, Y+8	; 0x08
     73a:	37 fd       	sbrc	r19, 7
     73c:	20 c0       	rjmp	.+64     	; 0x77e <__fixsfsi+0x7c>
     73e:	6e 81       	ldd	r22, Y+6	; 0x06
     740:	2f 31       	cpi	r18, 0x1F	; 31
     742:	31 05       	cpc	r19, r1
     744:	1c f0       	brlt	.+6      	; 0x74c <__fixsfsi+0x4a>
     746:	66 23       	and	r22, r22
     748:	f9 f0       	breq	.+62     	; 0x788 <__fixsfsi+0x86>
     74a:	23 c0       	rjmp	.+70     	; 0x792 <__fixsfsi+0x90>
     74c:	8e e1       	ldi	r24, 0x1E	; 30
     74e:	90 e0       	ldi	r25, 0x00	; 0
     750:	82 1b       	sub	r24, r18
     752:	93 0b       	sbc	r25, r19
     754:	29 85       	ldd	r18, Y+9	; 0x09
     756:	3a 85       	ldd	r19, Y+10	; 0x0a
     758:	4b 85       	ldd	r20, Y+11	; 0x0b
     75a:	5c 85       	ldd	r21, Y+12	; 0x0c
     75c:	04 c0       	rjmp	.+8      	; 0x766 <__fixsfsi+0x64>
     75e:	56 95       	lsr	r21
     760:	47 95       	ror	r20
     762:	37 95       	ror	r19
     764:	27 95       	ror	r18
     766:	8a 95       	dec	r24
     768:	d2 f7       	brpl	.-12     	; 0x75e <__fixsfsi+0x5c>
     76a:	66 23       	and	r22, r22
     76c:	b1 f0       	breq	.+44     	; 0x79a <__fixsfsi+0x98>
     76e:	50 95       	com	r21
     770:	40 95       	com	r20
     772:	30 95       	com	r19
     774:	21 95       	neg	r18
     776:	3f 4f       	sbci	r19, 0xFF	; 255
     778:	4f 4f       	sbci	r20, 0xFF	; 255
     77a:	5f 4f       	sbci	r21, 0xFF	; 255
     77c:	0e c0       	rjmp	.+28     	; 0x79a <__fixsfsi+0x98>
     77e:	20 e0       	ldi	r18, 0x00	; 0
     780:	30 e0       	ldi	r19, 0x00	; 0
     782:	40 e0       	ldi	r20, 0x00	; 0
     784:	50 e0       	ldi	r21, 0x00	; 0
     786:	09 c0       	rjmp	.+18     	; 0x79a <__fixsfsi+0x98>
     788:	2f ef       	ldi	r18, 0xFF	; 255
     78a:	3f ef       	ldi	r19, 0xFF	; 255
     78c:	4f ef       	ldi	r20, 0xFF	; 255
     78e:	5f e7       	ldi	r21, 0x7F	; 127
     790:	04 c0       	rjmp	.+8      	; 0x79a <__fixsfsi+0x98>
     792:	20 e0       	ldi	r18, 0x00	; 0
     794:	30 e0       	ldi	r19, 0x00	; 0
     796:	40 e0       	ldi	r20, 0x00	; 0
     798:	50 e8       	ldi	r21, 0x80	; 128
     79a:	b9 01       	movw	r22, r18
     79c:	ca 01       	movw	r24, r20
     79e:	2c 96       	adiw	r28, 0x0c	; 12
     7a0:	e2 e0       	ldi	r30, 0x02	; 2
     7a2:	1e c7       	rjmp	.+3644   	; 0x15e0 <__epilogue_restores__+0x20>

000007a4 <__pack_f>:
     7a4:	df 92       	push	r13
     7a6:	ef 92       	push	r14
     7a8:	ff 92       	push	r15
     7aa:	0f 93       	push	r16
     7ac:	1f 93       	push	r17
     7ae:	fc 01       	movw	r30, r24
     7b0:	e4 80       	ldd	r14, Z+4	; 0x04
     7b2:	f5 80       	ldd	r15, Z+5	; 0x05
     7b4:	06 81       	ldd	r16, Z+6	; 0x06
     7b6:	17 81       	ldd	r17, Z+7	; 0x07
     7b8:	d1 80       	ldd	r13, Z+1	; 0x01
     7ba:	80 81       	ld	r24, Z
     7bc:	82 30       	cpi	r24, 0x02	; 2
     7be:	48 f4       	brcc	.+18     	; 0x7d2 <__pack_f+0x2e>
     7c0:	80 e0       	ldi	r24, 0x00	; 0
     7c2:	90 e0       	ldi	r25, 0x00	; 0
     7c4:	a0 e1       	ldi	r26, 0x10	; 16
     7c6:	b0 e0       	ldi	r27, 0x00	; 0
     7c8:	e8 2a       	or	r14, r24
     7ca:	f9 2a       	or	r15, r25
     7cc:	0a 2b       	or	r16, r26
     7ce:	1b 2b       	or	r17, r27
     7d0:	a5 c0       	rjmp	.+330    	; 0x91c <__stack+0xbd>
     7d2:	84 30       	cpi	r24, 0x04	; 4
     7d4:	09 f4       	brne	.+2      	; 0x7d8 <__pack_f+0x34>
     7d6:	9f c0       	rjmp	.+318    	; 0x916 <__stack+0xb7>
     7d8:	82 30       	cpi	r24, 0x02	; 2
     7da:	21 f4       	brne	.+8      	; 0x7e4 <__pack_f+0x40>
     7dc:	ee 24       	eor	r14, r14
     7de:	ff 24       	eor	r15, r15
     7e0:	87 01       	movw	r16, r14
     7e2:	05 c0       	rjmp	.+10     	; 0x7ee <__pack_f+0x4a>
     7e4:	e1 14       	cp	r14, r1
     7e6:	f1 04       	cpc	r15, r1
     7e8:	01 05       	cpc	r16, r1
     7ea:	11 05       	cpc	r17, r1
     7ec:	19 f4       	brne	.+6      	; 0x7f4 <__pack_f+0x50>
     7ee:	e0 e0       	ldi	r30, 0x00	; 0
     7f0:	f0 e0       	ldi	r31, 0x00	; 0
     7f2:	96 c0       	rjmp	.+300    	; 0x920 <__stack+0xc1>
     7f4:	62 81       	ldd	r22, Z+2	; 0x02
     7f6:	73 81       	ldd	r23, Z+3	; 0x03
     7f8:	9f ef       	ldi	r25, 0xFF	; 255
     7fa:	62 38       	cpi	r22, 0x82	; 130
     7fc:	79 07       	cpc	r23, r25
     7fe:	0c f0       	brlt	.+2      	; 0x802 <__pack_f+0x5e>
     800:	5b c0       	rjmp	.+182    	; 0x8b8 <__stack+0x59>
     802:	22 e8       	ldi	r18, 0x82	; 130
     804:	3f ef       	ldi	r19, 0xFF	; 255
     806:	26 1b       	sub	r18, r22
     808:	37 0b       	sbc	r19, r23
     80a:	2a 31       	cpi	r18, 0x1A	; 26
     80c:	31 05       	cpc	r19, r1
     80e:	2c f0       	brlt	.+10     	; 0x81a <__pack_f+0x76>
     810:	20 e0       	ldi	r18, 0x00	; 0
     812:	30 e0       	ldi	r19, 0x00	; 0
     814:	40 e0       	ldi	r20, 0x00	; 0
     816:	50 e0       	ldi	r21, 0x00	; 0
     818:	2a c0       	rjmp	.+84     	; 0x86e <__stack+0xf>
     81a:	b8 01       	movw	r22, r16
     81c:	a7 01       	movw	r20, r14
     81e:	02 2e       	mov	r0, r18
     820:	04 c0       	rjmp	.+8      	; 0x82a <__pack_f+0x86>
     822:	76 95       	lsr	r23
     824:	67 95       	ror	r22
     826:	57 95       	ror	r21
     828:	47 95       	ror	r20
     82a:	0a 94       	dec	r0
     82c:	d2 f7       	brpl	.-12     	; 0x822 <__pack_f+0x7e>
     82e:	81 e0       	ldi	r24, 0x01	; 1
     830:	90 e0       	ldi	r25, 0x00	; 0
     832:	a0 e0       	ldi	r26, 0x00	; 0
     834:	b0 e0       	ldi	r27, 0x00	; 0
     836:	04 c0       	rjmp	.+8      	; 0x840 <__pack_f+0x9c>
     838:	88 0f       	add	r24, r24
     83a:	99 1f       	adc	r25, r25
     83c:	aa 1f       	adc	r26, r26
     83e:	bb 1f       	adc	r27, r27
     840:	2a 95       	dec	r18
     842:	d2 f7       	brpl	.-12     	; 0x838 <__pack_f+0x94>
     844:	01 97       	sbiw	r24, 0x01	; 1
     846:	a1 09       	sbc	r26, r1
     848:	b1 09       	sbc	r27, r1
     84a:	8e 21       	and	r24, r14
     84c:	9f 21       	and	r25, r15
     84e:	a0 23       	and	r26, r16
     850:	b1 23       	and	r27, r17
     852:	00 97       	sbiw	r24, 0x00	; 0
     854:	a1 05       	cpc	r26, r1
     856:	b1 05       	cpc	r27, r1
     858:	21 f0       	breq	.+8      	; 0x862 <__stack+0x3>
     85a:	81 e0       	ldi	r24, 0x01	; 1
     85c:	90 e0       	ldi	r25, 0x00	; 0
     85e:	a0 e0       	ldi	r26, 0x00	; 0
     860:	b0 e0       	ldi	r27, 0x00	; 0
     862:	9a 01       	movw	r18, r20
     864:	ab 01       	movw	r20, r22
     866:	28 2b       	or	r18, r24
     868:	39 2b       	or	r19, r25
     86a:	4a 2b       	or	r20, r26
     86c:	5b 2b       	or	r21, r27
     86e:	da 01       	movw	r26, r20
     870:	c9 01       	movw	r24, r18
     872:	8f 77       	andi	r24, 0x7F	; 127
     874:	90 70       	andi	r25, 0x00	; 0
     876:	a0 70       	andi	r26, 0x00	; 0
     878:	b0 70       	andi	r27, 0x00	; 0
     87a:	80 34       	cpi	r24, 0x40	; 64
     87c:	91 05       	cpc	r25, r1
     87e:	a1 05       	cpc	r26, r1
     880:	b1 05       	cpc	r27, r1
     882:	39 f4       	brne	.+14     	; 0x892 <__stack+0x33>
     884:	27 ff       	sbrs	r18, 7
     886:	09 c0       	rjmp	.+18     	; 0x89a <__stack+0x3b>
     888:	20 5c       	subi	r18, 0xC0	; 192
     88a:	3f 4f       	sbci	r19, 0xFF	; 255
     88c:	4f 4f       	sbci	r20, 0xFF	; 255
     88e:	5f 4f       	sbci	r21, 0xFF	; 255
     890:	04 c0       	rjmp	.+8      	; 0x89a <__stack+0x3b>
     892:	21 5c       	subi	r18, 0xC1	; 193
     894:	3f 4f       	sbci	r19, 0xFF	; 255
     896:	4f 4f       	sbci	r20, 0xFF	; 255
     898:	5f 4f       	sbci	r21, 0xFF	; 255
     89a:	e0 e0       	ldi	r30, 0x00	; 0
     89c:	f0 e0       	ldi	r31, 0x00	; 0
     89e:	20 30       	cpi	r18, 0x00	; 0
     8a0:	a0 e0       	ldi	r26, 0x00	; 0
     8a2:	3a 07       	cpc	r19, r26
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	4a 07       	cpc	r20, r26
     8a8:	a0 e4       	ldi	r26, 0x40	; 64
     8aa:	5a 07       	cpc	r21, r26
     8ac:	10 f0       	brcs	.+4      	; 0x8b2 <__stack+0x53>
     8ae:	e1 e0       	ldi	r30, 0x01	; 1
     8b0:	f0 e0       	ldi	r31, 0x00	; 0
     8b2:	79 01       	movw	r14, r18
     8b4:	8a 01       	movw	r16, r20
     8b6:	27 c0       	rjmp	.+78     	; 0x906 <__stack+0xa7>
     8b8:	60 38       	cpi	r22, 0x80	; 128
     8ba:	71 05       	cpc	r23, r1
     8bc:	64 f5       	brge	.+88     	; 0x916 <__stack+0xb7>
     8be:	fb 01       	movw	r30, r22
     8c0:	e1 58       	subi	r30, 0x81	; 129
     8c2:	ff 4f       	sbci	r31, 0xFF	; 255
     8c4:	d8 01       	movw	r26, r16
     8c6:	c7 01       	movw	r24, r14
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	e7 fe       	sbrs	r14, 7
     8dc:	0d c0       	rjmp	.+26     	; 0x8f8 <__stack+0x99>
     8de:	80 e4       	ldi	r24, 0x40	; 64
     8e0:	90 e0       	ldi	r25, 0x00	; 0
     8e2:	a0 e0       	ldi	r26, 0x00	; 0
     8e4:	b0 e0       	ldi	r27, 0x00	; 0
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	8f e3       	ldi	r24, 0x3F	; 63
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	a0 e0       	ldi	r26, 0x00	; 0
     8ee:	b0 e0       	ldi	r27, 0x00	; 0
     8f0:	e8 0e       	add	r14, r24
     8f2:	f9 1e       	adc	r15, r25
     8f4:	0a 1f       	adc	r16, r26
     8f6:	1b 1f       	adc	r17, r27
     8f8:	17 ff       	sbrs	r17, 7
     8fa:	05 c0       	rjmp	.+10     	; 0x906 <__stack+0xa7>
     8fc:	16 95       	lsr	r17
     8fe:	07 95       	ror	r16
     900:	f7 94       	ror	r15
     902:	e7 94       	ror	r14
     904:	31 96       	adiw	r30, 0x01	; 1
     906:	87 e0       	ldi	r24, 0x07	; 7
     908:	16 95       	lsr	r17
     90a:	07 95       	ror	r16
     90c:	f7 94       	ror	r15
     90e:	e7 94       	ror	r14
     910:	8a 95       	dec	r24
     912:	d1 f7       	brne	.-12     	; 0x908 <__stack+0xa9>
     914:	05 c0       	rjmp	.+10     	; 0x920 <__stack+0xc1>
     916:	ee 24       	eor	r14, r14
     918:	ff 24       	eor	r15, r15
     91a:	87 01       	movw	r16, r14
     91c:	ef ef       	ldi	r30, 0xFF	; 255
     91e:	f0 e0       	ldi	r31, 0x00	; 0
     920:	6e 2f       	mov	r22, r30
     922:	67 95       	ror	r22
     924:	66 27       	eor	r22, r22
     926:	67 95       	ror	r22
     928:	90 2f       	mov	r25, r16
     92a:	9f 77       	andi	r25, 0x7F	; 127
     92c:	d7 94       	ror	r13
     92e:	dd 24       	eor	r13, r13
     930:	d7 94       	ror	r13
     932:	8e 2f       	mov	r24, r30
     934:	86 95       	lsr	r24
     936:	49 2f       	mov	r20, r25
     938:	46 2b       	or	r20, r22
     93a:	58 2f       	mov	r21, r24
     93c:	5d 29       	or	r21, r13
     93e:	b7 01       	movw	r22, r14
     940:	ca 01       	movw	r24, r20
     942:	1f 91       	pop	r17
     944:	0f 91       	pop	r16
     946:	ff 90       	pop	r15
     948:	ef 90       	pop	r14
     94a:	df 90       	pop	r13
     94c:	08 95       	ret

0000094e <__unpack_f>:
     94e:	fc 01       	movw	r30, r24
     950:	db 01       	movw	r26, r22
     952:	40 81       	ld	r20, Z
     954:	51 81       	ldd	r21, Z+1	; 0x01
     956:	22 81       	ldd	r18, Z+2	; 0x02
     958:	62 2f       	mov	r22, r18
     95a:	6f 77       	andi	r22, 0x7F	; 127
     95c:	70 e0       	ldi	r23, 0x00	; 0
     95e:	22 1f       	adc	r18, r18
     960:	22 27       	eor	r18, r18
     962:	22 1f       	adc	r18, r18
     964:	93 81       	ldd	r25, Z+3	; 0x03
     966:	89 2f       	mov	r24, r25
     968:	88 0f       	add	r24, r24
     96a:	82 2b       	or	r24, r18
     96c:	28 2f       	mov	r18, r24
     96e:	30 e0       	ldi	r19, 0x00	; 0
     970:	99 1f       	adc	r25, r25
     972:	99 27       	eor	r25, r25
     974:	99 1f       	adc	r25, r25
     976:	11 96       	adiw	r26, 0x01	; 1
     978:	9c 93       	st	X, r25
     97a:	11 97       	sbiw	r26, 0x01	; 1
     97c:	21 15       	cp	r18, r1
     97e:	31 05       	cpc	r19, r1
     980:	a9 f5       	brne	.+106    	; 0x9ec <__unpack_f+0x9e>
     982:	41 15       	cp	r20, r1
     984:	51 05       	cpc	r21, r1
     986:	61 05       	cpc	r22, r1
     988:	71 05       	cpc	r23, r1
     98a:	11 f4       	brne	.+4      	; 0x990 <__unpack_f+0x42>
     98c:	82 e0       	ldi	r24, 0x02	; 2
     98e:	37 c0       	rjmp	.+110    	; 0x9fe <__unpack_f+0xb0>
     990:	82 e8       	ldi	r24, 0x82	; 130
     992:	9f ef       	ldi	r25, 0xFF	; 255
     994:	13 96       	adiw	r26, 0x03	; 3
     996:	9c 93       	st	X, r25
     998:	8e 93       	st	-X, r24
     99a:	12 97       	sbiw	r26, 0x02	; 2
     99c:	9a 01       	movw	r18, r20
     99e:	ab 01       	movw	r20, r22
     9a0:	67 e0       	ldi	r22, 0x07	; 7
     9a2:	22 0f       	add	r18, r18
     9a4:	33 1f       	adc	r19, r19
     9a6:	44 1f       	adc	r20, r20
     9a8:	55 1f       	adc	r21, r21
     9aa:	6a 95       	dec	r22
     9ac:	d1 f7       	brne	.-12     	; 0x9a2 <__unpack_f+0x54>
     9ae:	83 e0       	ldi	r24, 0x03	; 3
     9b0:	8c 93       	st	X, r24
     9b2:	0d c0       	rjmp	.+26     	; 0x9ce <__unpack_f+0x80>
     9b4:	22 0f       	add	r18, r18
     9b6:	33 1f       	adc	r19, r19
     9b8:	44 1f       	adc	r20, r20
     9ba:	55 1f       	adc	r21, r21
     9bc:	12 96       	adiw	r26, 0x02	; 2
     9be:	8d 91       	ld	r24, X+
     9c0:	9c 91       	ld	r25, X
     9c2:	13 97       	sbiw	r26, 0x03	; 3
     9c4:	01 97       	sbiw	r24, 0x01	; 1
     9c6:	13 96       	adiw	r26, 0x03	; 3
     9c8:	9c 93       	st	X, r25
     9ca:	8e 93       	st	-X, r24
     9cc:	12 97       	sbiw	r26, 0x02	; 2
     9ce:	20 30       	cpi	r18, 0x00	; 0
     9d0:	80 e0       	ldi	r24, 0x00	; 0
     9d2:	38 07       	cpc	r19, r24
     9d4:	80 e0       	ldi	r24, 0x00	; 0
     9d6:	48 07       	cpc	r20, r24
     9d8:	80 e4       	ldi	r24, 0x40	; 64
     9da:	58 07       	cpc	r21, r24
     9dc:	58 f3       	brcs	.-42     	; 0x9b4 <__unpack_f+0x66>
     9de:	14 96       	adiw	r26, 0x04	; 4
     9e0:	2d 93       	st	X+, r18
     9e2:	3d 93       	st	X+, r19
     9e4:	4d 93       	st	X+, r20
     9e6:	5c 93       	st	X, r21
     9e8:	17 97       	sbiw	r26, 0x07	; 7
     9ea:	08 95       	ret
     9ec:	2f 3f       	cpi	r18, 0xFF	; 255
     9ee:	31 05       	cpc	r19, r1
     9f0:	79 f4       	brne	.+30     	; 0xa10 <__unpack_f+0xc2>
     9f2:	41 15       	cp	r20, r1
     9f4:	51 05       	cpc	r21, r1
     9f6:	61 05       	cpc	r22, r1
     9f8:	71 05       	cpc	r23, r1
     9fa:	19 f4       	brne	.+6      	; 0xa02 <__unpack_f+0xb4>
     9fc:	84 e0       	ldi	r24, 0x04	; 4
     9fe:	8c 93       	st	X, r24
     a00:	08 95       	ret
     a02:	64 ff       	sbrs	r22, 4
     a04:	03 c0       	rjmp	.+6      	; 0xa0c <__unpack_f+0xbe>
     a06:	81 e0       	ldi	r24, 0x01	; 1
     a08:	8c 93       	st	X, r24
     a0a:	12 c0       	rjmp	.+36     	; 0xa30 <__unpack_f+0xe2>
     a0c:	1c 92       	st	X, r1
     a0e:	10 c0       	rjmp	.+32     	; 0xa30 <__unpack_f+0xe2>
     a10:	2f 57       	subi	r18, 0x7F	; 127
     a12:	30 40       	sbci	r19, 0x00	; 0
     a14:	13 96       	adiw	r26, 0x03	; 3
     a16:	3c 93       	st	X, r19
     a18:	2e 93       	st	-X, r18
     a1a:	12 97       	sbiw	r26, 0x02	; 2
     a1c:	83 e0       	ldi	r24, 0x03	; 3
     a1e:	8c 93       	st	X, r24
     a20:	87 e0       	ldi	r24, 0x07	; 7
     a22:	44 0f       	add	r20, r20
     a24:	55 1f       	adc	r21, r21
     a26:	66 1f       	adc	r22, r22
     a28:	77 1f       	adc	r23, r23
     a2a:	8a 95       	dec	r24
     a2c:	d1 f7       	brne	.-12     	; 0xa22 <__unpack_f+0xd4>
     a2e:	70 64       	ori	r23, 0x40	; 64
     a30:	14 96       	adiw	r26, 0x04	; 4
     a32:	4d 93       	st	X+, r20
     a34:	5d 93       	st	X+, r21
     a36:	6d 93       	st	X+, r22
     a38:	7c 93       	st	X, r23
     a3a:	17 97       	sbiw	r26, 0x07	; 7
     a3c:	08 95       	ret

00000a3e <__fpcmp_parts_f>:
     a3e:	1f 93       	push	r17
     a40:	dc 01       	movw	r26, r24
     a42:	fb 01       	movw	r30, r22
     a44:	9c 91       	ld	r25, X
     a46:	92 30       	cpi	r25, 0x02	; 2
     a48:	08 f4       	brcc	.+2      	; 0xa4c <__fpcmp_parts_f+0xe>
     a4a:	47 c0       	rjmp	.+142    	; 0xada <__fpcmp_parts_f+0x9c>
     a4c:	80 81       	ld	r24, Z
     a4e:	82 30       	cpi	r24, 0x02	; 2
     a50:	08 f4       	brcc	.+2      	; 0xa54 <__fpcmp_parts_f+0x16>
     a52:	43 c0       	rjmp	.+134    	; 0xada <__fpcmp_parts_f+0x9c>
     a54:	94 30       	cpi	r25, 0x04	; 4
     a56:	51 f4       	brne	.+20     	; 0xa6c <__fpcmp_parts_f+0x2e>
     a58:	11 96       	adiw	r26, 0x01	; 1
     a5a:	1c 91       	ld	r17, X
     a5c:	84 30       	cpi	r24, 0x04	; 4
     a5e:	99 f5       	brne	.+102    	; 0xac6 <__fpcmp_parts_f+0x88>
     a60:	81 81       	ldd	r24, Z+1	; 0x01
     a62:	68 2f       	mov	r22, r24
     a64:	70 e0       	ldi	r23, 0x00	; 0
     a66:	61 1b       	sub	r22, r17
     a68:	71 09       	sbc	r23, r1
     a6a:	3f c0       	rjmp	.+126    	; 0xaea <__fpcmp_parts_f+0xac>
     a6c:	84 30       	cpi	r24, 0x04	; 4
     a6e:	21 f0       	breq	.+8      	; 0xa78 <__fpcmp_parts_f+0x3a>
     a70:	92 30       	cpi	r25, 0x02	; 2
     a72:	31 f4       	brne	.+12     	; 0xa80 <__fpcmp_parts_f+0x42>
     a74:	82 30       	cpi	r24, 0x02	; 2
     a76:	b9 f1       	breq	.+110    	; 0xae6 <__fpcmp_parts_f+0xa8>
     a78:	81 81       	ldd	r24, Z+1	; 0x01
     a7a:	88 23       	and	r24, r24
     a7c:	89 f1       	breq	.+98     	; 0xae0 <__fpcmp_parts_f+0xa2>
     a7e:	2d c0       	rjmp	.+90     	; 0xada <__fpcmp_parts_f+0x9c>
     a80:	11 96       	adiw	r26, 0x01	; 1
     a82:	1c 91       	ld	r17, X
     a84:	11 97       	sbiw	r26, 0x01	; 1
     a86:	82 30       	cpi	r24, 0x02	; 2
     a88:	f1 f0       	breq	.+60     	; 0xac6 <__fpcmp_parts_f+0x88>
     a8a:	81 81       	ldd	r24, Z+1	; 0x01
     a8c:	18 17       	cp	r17, r24
     a8e:	d9 f4       	brne	.+54     	; 0xac6 <__fpcmp_parts_f+0x88>
     a90:	12 96       	adiw	r26, 0x02	; 2
     a92:	2d 91       	ld	r18, X+
     a94:	3c 91       	ld	r19, X
     a96:	13 97       	sbiw	r26, 0x03	; 3
     a98:	82 81       	ldd	r24, Z+2	; 0x02
     a9a:	93 81       	ldd	r25, Z+3	; 0x03
     a9c:	82 17       	cp	r24, r18
     a9e:	93 07       	cpc	r25, r19
     aa0:	94 f0       	brlt	.+36     	; 0xac6 <__fpcmp_parts_f+0x88>
     aa2:	28 17       	cp	r18, r24
     aa4:	39 07       	cpc	r19, r25
     aa6:	bc f0       	brlt	.+46     	; 0xad6 <__fpcmp_parts_f+0x98>
     aa8:	14 96       	adiw	r26, 0x04	; 4
     aaa:	8d 91       	ld	r24, X+
     aac:	9d 91       	ld	r25, X+
     aae:	0d 90       	ld	r0, X+
     ab0:	bc 91       	ld	r27, X
     ab2:	a0 2d       	mov	r26, r0
     ab4:	24 81       	ldd	r18, Z+4	; 0x04
     ab6:	35 81       	ldd	r19, Z+5	; 0x05
     ab8:	46 81       	ldd	r20, Z+6	; 0x06
     aba:	57 81       	ldd	r21, Z+7	; 0x07
     abc:	28 17       	cp	r18, r24
     abe:	39 07       	cpc	r19, r25
     ac0:	4a 07       	cpc	r20, r26
     ac2:	5b 07       	cpc	r21, r27
     ac4:	18 f4       	brcc	.+6      	; 0xacc <__fpcmp_parts_f+0x8e>
     ac6:	11 23       	and	r17, r17
     ac8:	41 f0       	breq	.+16     	; 0xada <__fpcmp_parts_f+0x9c>
     aca:	0a c0       	rjmp	.+20     	; 0xae0 <__fpcmp_parts_f+0xa2>
     acc:	82 17       	cp	r24, r18
     ace:	93 07       	cpc	r25, r19
     ad0:	a4 07       	cpc	r26, r20
     ad2:	b5 07       	cpc	r27, r21
     ad4:	40 f4       	brcc	.+16     	; 0xae6 <__fpcmp_parts_f+0xa8>
     ad6:	11 23       	and	r17, r17
     ad8:	19 f0       	breq	.+6      	; 0xae0 <__fpcmp_parts_f+0xa2>
     ada:	61 e0       	ldi	r22, 0x01	; 1
     adc:	70 e0       	ldi	r23, 0x00	; 0
     ade:	05 c0       	rjmp	.+10     	; 0xaea <__fpcmp_parts_f+0xac>
     ae0:	6f ef       	ldi	r22, 0xFF	; 255
     ae2:	7f ef       	ldi	r23, 0xFF	; 255
     ae4:	02 c0       	rjmp	.+4      	; 0xaea <__fpcmp_parts_f+0xac>
     ae6:	60 e0       	ldi	r22, 0x00	; 0
     ae8:	70 e0       	ldi	r23, 0x00	; 0
     aea:	cb 01       	movw	r24, r22
     aec:	1f 91       	pop	r17
     aee:	08 95       	ret

00000af0 <DIO_voidSetpindirection>:
#include "DIO_interface.h"



void DIO_voidSetpindirection(u8 Copy_u8portName,u8 Copy_u8PinNumber,u8 Copy_pinstate)
{
     af0:	df 93       	push	r29
     af2:	cf 93       	push	r28
     af4:	cd b7       	in	r28, 0x3d	; 61
     af6:	de b7       	in	r29, 0x3e	; 62
     af8:	2d 97       	sbiw	r28, 0x0d	; 13
     afa:	0f b6       	in	r0, 0x3f	; 63
     afc:	f8 94       	cli
     afe:	de bf       	out	0x3e, r29	; 62
     b00:	0f be       	out	0x3f, r0	; 63
     b02:	cd bf       	out	0x3d, r28	; 61
     b04:	89 83       	std	Y+1, r24	; 0x01
     b06:	6a 83       	std	Y+2, r22	; 0x02
     b08:	4b 83       	std	Y+3, r20	; 0x03
switch(Copy_u8portName)
     b0a:	89 81       	ldd	r24, Y+1	; 0x01
     b0c:	28 2f       	mov	r18, r24
     b0e:	30 e0       	ldi	r19, 0x00	; 0
     b10:	3d 87       	std	Y+13, r19	; 0x0d
     b12:	2c 87       	std	Y+12, r18	; 0x0c
     b14:	8c 85       	ldd	r24, Y+12	; 0x0c
     b16:	9d 85       	ldd	r25, Y+13	; 0x0d
     b18:	81 30       	cpi	r24, 0x01	; 1
     b1a:	91 05       	cpc	r25, r1
     b1c:	09 f4       	brne	.+2      	; 0xb20 <DIO_voidSetpindirection+0x30>
     b1e:	4f c0       	rjmp	.+158    	; 0xbbe <DIO_voidSetpindirection+0xce>
     b20:	2c 85       	ldd	r18, Y+12	; 0x0c
     b22:	3d 85       	ldd	r19, Y+13	; 0x0d
     b24:	22 30       	cpi	r18, 0x02	; 2
     b26:	31 05       	cpc	r19, r1
     b28:	2c f4       	brge	.+10     	; 0xb34 <DIO_voidSetpindirection+0x44>
     b2a:	8c 85       	ldd	r24, Y+12	; 0x0c
     b2c:	9d 85       	ldd	r25, Y+13	; 0x0d
     b2e:	00 97       	sbiw	r24, 0x00	; 0
     b30:	71 f0       	breq	.+28     	; 0xb4e <DIO_voidSetpindirection+0x5e>
     b32:	eb c0       	rjmp	.+470    	; 0xd0a <DIO_voidSetpindirection+0x21a>
     b34:	2c 85       	ldd	r18, Y+12	; 0x0c
     b36:	3d 85       	ldd	r19, Y+13	; 0x0d
     b38:	22 30       	cpi	r18, 0x02	; 2
     b3a:	31 05       	cpc	r19, r1
     b3c:	09 f4       	brne	.+2      	; 0xb40 <DIO_voidSetpindirection+0x50>
     b3e:	77 c0       	rjmp	.+238    	; 0xc2e <DIO_voidSetpindirection+0x13e>
     b40:	8c 85       	ldd	r24, Y+12	; 0x0c
     b42:	9d 85       	ldd	r25, Y+13	; 0x0d
     b44:	83 30       	cpi	r24, 0x03	; 3
     b46:	91 05       	cpc	r25, r1
     b48:	09 f4       	brne	.+2      	; 0xb4c <DIO_voidSetpindirection+0x5c>
     b4a:	a9 c0       	rjmp	.+338    	; 0xc9e <DIO_voidSetpindirection+0x1ae>
     b4c:	de c0       	rjmp	.+444    	; 0xd0a <DIO_voidSetpindirection+0x21a>
{

case DIO_PORTA:
	switch(Copy_pinstate)
     b4e:	8b 81       	ldd	r24, Y+3	; 0x03
     b50:	28 2f       	mov	r18, r24
     b52:	30 e0       	ldi	r19, 0x00	; 0
     b54:	3b 87       	std	Y+11, r19	; 0x0b
     b56:	2a 87       	std	Y+10, r18	; 0x0a
     b58:	8a 85       	ldd	r24, Y+10	; 0x0a
     b5a:	9b 85       	ldd	r25, Y+11	; 0x0b
     b5c:	00 97       	sbiw	r24, 0x00	; 0
     b5e:	d1 f0       	breq	.+52     	; 0xb94 <DIO_voidSetpindirection+0xa4>
     b60:	2a 85       	ldd	r18, Y+10	; 0x0a
     b62:	3b 85       	ldd	r19, Y+11	; 0x0b
     b64:	21 30       	cpi	r18, 0x01	; 1
     b66:	31 05       	cpc	r19, r1
     b68:	09 f0       	breq	.+2      	; 0xb6c <DIO_voidSetpindirection+0x7c>
     b6a:	cf c0       	rjmp	.+414    	; 0xd0a <DIO_voidSetpindirection+0x21a>
	{
		case OUTPUT:
			SET_BIT(DDRA,Copy_u8PinNumber);
     b6c:	aa e3       	ldi	r26, 0x3A	; 58
     b6e:	b0 e0       	ldi	r27, 0x00	; 0
     b70:	ea e3       	ldi	r30, 0x3A	; 58
     b72:	f0 e0       	ldi	r31, 0x00	; 0
     b74:	80 81       	ld	r24, Z
     b76:	48 2f       	mov	r20, r24
     b78:	8a 81       	ldd	r24, Y+2	; 0x02
     b7a:	28 2f       	mov	r18, r24
     b7c:	30 e0       	ldi	r19, 0x00	; 0
     b7e:	81 e0       	ldi	r24, 0x01	; 1
     b80:	90 e0       	ldi	r25, 0x00	; 0
     b82:	02 2e       	mov	r0, r18
     b84:	02 c0       	rjmp	.+4      	; 0xb8a <DIO_voidSetpindirection+0x9a>
     b86:	88 0f       	add	r24, r24
     b88:	99 1f       	adc	r25, r25
     b8a:	0a 94       	dec	r0
     b8c:	e2 f7       	brpl	.-8      	; 0xb86 <DIO_voidSetpindirection+0x96>
     b8e:	84 2b       	or	r24, r20
     b90:	8c 93       	st	X, r24
     b92:	bb c0       	rjmp	.+374    	; 0xd0a <DIO_voidSetpindirection+0x21a>

			break;
		case INPUT:
			CLR_BIT(DDRA,Copy_u8PinNumber);
     b94:	aa e3       	ldi	r26, 0x3A	; 58
     b96:	b0 e0       	ldi	r27, 0x00	; 0
     b98:	ea e3       	ldi	r30, 0x3A	; 58
     b9a:	f0 e0       	ldi	r31, 0x00	; 0
     b9c:	80 81       	ld	r24, Z
     b9e:	48 2f       	mov	r20, r24
     ba0:	8a 81       	ldd	r24, Y+2	; 0x02
     ba2:	28 2f       	mov	r18, r24
     ba4:	30 e0       	ldi	r19, 0x00	; 0
     ba6:	81 e0       	ldi	r24, 0x01	; 1
     ba8:	90 e0       	ldi	r25, 0x00	; 0
     baa:	02 2e       	mov	r0, r18
     bac:	02 c0       	rjmp	.+4      	; 0xbb2 <DIO_voidSetpindirection+0xc2>
     bae:	88 0f       	add	r24, r24
     bb0:	99 1f       	adc	r25, r25
     bb2:	0a 94       	dec	r0
     bb4:	e2 f7       	brpl	.-8      	; 0xbae <DIO_voidSetpindirection+0xbe>
     bb6:	80 95       	com	r24
     bb8:	84 23       	and	r24, r20
     bba:	8c 93       	st	X, r24
     bbc:	a6 c0       	rjmp	.+332    	; 0xd0a <DIO_voidSetpindirection+0x21a>
	}
	break;
case DIO_PORTB:


	switch(Copy_pinstate)
     bbe:	8b 81       	ldd	r24, Y+3	; 0x03
     bc0:	28 2f       	mov	r18, r24
     bc2:	30 e0       	ldi	r19, 0x00	; 0
     bc4:	39 87       	std	Y+9, r19	; 0x09
     bc6:	28 87       	std	Y+8, r18	; 0x08
     bc8:	88 85       	ldd	r24, Y+8	; 0x08
     bca:	99 85       	ldd	r25, Y+9	; 0x09
     bcc:	00 97       	sbiw	r24, 0x00	; 0
     bce:	d1 f0       	breq	.+52     	; 0xc04 <DIO_voidSetpindirection+0x114>
     bd0:	28 85       	ldd	r18, Y+8	; 0x08
     bd2:	39 85       	ldd	r19, Y+9	; 0x09
     bd4:	21 30       	cpi	r18, 0x01	; 1
     bd6:	31 05       	cpc	r19, r1
     bd8:	09 f0       	breq	.+2      	; 0xbdc <DIO_voidSetpindirection+0xec>
     bda:	97 c0       	rjmp	.+302    	; 0xd0a <DIO_voidSetpindirection+0x21a>
	{
		case OUTPUT:
			SET_BIT(DDRB,Copy_u8PinNumber);
     bdc:	a7 e3       	ldi	r26, 0x37	; 55
     bde:	b0 e0       	ldi	r27, 0x00	; 0
     be0:	e7 e3       	ldi	r30, 0x37	; 55
     be2:	f0 e0       	ldi	r31, 0x00	; 0
     be4:	80 81       	ld	r24, Z
     be6:	48 2f       	mov	r20, r24
     be8:	8a 81       	ldd	r24, Y+2	; 0x02
     bea:	28 2f       	mov	r18, r24
     bec:	30 e0       	ldi	r19, 0x00	; 0
     bee:	81 e0       	ldi	r24, 0x01	; 1
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	02 2e       	mov	r0, r18
     bf4:	02 c0       	rjmp	.+4      	; 0xbfa <DIO_voidSetpindirection+0x10a>
     bf6:	88 0f       	add	r24, r24
     bf8:	99 1f       	adc	r25, r25
     bfa:	0a 94       	dec	r0
     bfc:	e2 f7       	brpl	.-8      	; 0xbf6 <DIO_voidSetpindirection+0x106>
     bfe:	84 2b       	or	r24, r20
     c00:	8c 93       	st	X, r24
     c02:	83 c0       	rjmp	.+262    	; 0xd0a <DIO_voidSetpindirection+0x21a>

			break;
		case INPUT:
			CLR_BIT(DDRB,Copy_u8PinNumber);
     c04:	a7 e3       	ldi	r26, 0x37	; 55
     c06:	b0 e0       	ldi	r27, 0x00	; 0
     c08:	e7 e3       	ldi	r30, 0x37	; 55
     c0a:	f0 e0       	ldi	r31, 0x00	; 0
     c0c:	80 81       	ld	r24, Z
     c0e:	48 2f       	mov	r20, r24
     c10:	8a 81       	ldd	r24, Y+2	; 0x02
     c12:	28 2f       	mov	r18, r24
     c14:	30 e0       	ldi	r19, 0x00	; 0
     c16:	81 e0       	ldi	r24, 0x01	; 1
     c18:	90 e0       	ldi	r25, 0x00	; 0
     c1a:	02 2e       	mov	r0, r18
     c1c:	02 c0       	rjmp	.+4      	; 0xc22 <DIO_voidSetpindirection+0x132>
     c1e:	88 0f       	add	r24, r24
     c20:	99 1f       	adc	r25, r25
     c22:	0a 94       	dec	r0
     c24:	e2 f7       	brpl	.-8      	; 0xc1e <DIO_voidSetpindirection+0x12e>
     c26:	80 95       	com	r24
     c28:	84 23       	and	r24, r20
     c2a:	8c 93       	st	X, r24
     c2c:	6e c0       	rjmp	.+220    	; 0xd0a <DIO_voidSetpindirection+0x21a>
	}

	break;
case DIO_PORTC:

	switch(Copy_pinstate)
     c2e:	8b 81       	ldd	r24, Y+3	; 0x03
     c30:	28 2f       	mov	r18, r24
     c32:	30 e0       	ldi	r19, 0x00	; 0
     c34:	3f 83       	std	Y+7, r19	; 0x07
     c36:	2e 83       	std	Y+6, r18	; 0x06
     c38:	8e 81       	ldd	r24, Y+6	; 0x06
     c3a:	9f 81       	ldd	r25, Y+7	; 0x07
     c3c:	00 97       	sbiw	r24, 0x00	; 0
     c3e:	d1 f0       	breq	.+52     	; 0xc74 <DIO_voidSetpindirection+0x184>
     c40:	2e 81       	ldd	r18, Y+6	; 0x06
     c42:	3f 81       	ldd	r19, Y+7	; 0x07
     c44:	21 30       	cpi	r18, 0x01	; 1
     c46:	31 05       	cpc	r19, r1
     c48:	09 f0       	breq	.+2      	; 0xc4c <DIO_voidSetpindirection+0x15c>
     c4a:	5f c0       	rjmp	.+190    	; 0xd0a <DIO_voidSetpindirection+0x21a>
	{
		case OUTPUT:
			SET_BIT(DDRC,Copy_u8PinNumber);
     c4c:	a4 e3       	ldi	r26, 0x34	; 52
     c4e:	b0 e0       	ldi	r27, 0x00	; 0
     c50:	e4 e3       	ldi	r30, 0x34	; 52
     c52:	f0 e0       	ldi	r31, 0x00	; 0
     c54:	80 81       	ld	r24, Z
     c56:	48 2f       	mov	r20, r24
     c58:	8a 81       	ldd	r24, Y+2	; 0x02
     c5a:	28 2f       	mov	r18, r24
     c5c:	30 e0       	ldi	r19, 0x00	; 0
     c5e:	81 e0       	ldi	r24, 0x01	; 1
     c60:	90 e0       	ldi	r25, 0x00	; 0
     c62:	02 2e       	mov	r0, r18
     c64:	02 c0       	rjmp	.+4      	; 0xc6a <DIO_voidSetpindirection+0x17a>
     c66:	88 0f       	add	r24, r24
     c68:	99 1f       	adc	r25, r25
     c6a:	0a 94       	dec	r0
     c6c:	e2 f7       	brpl	.-8      	; 0xc66 <DIO_voidSetpindirection+0x176>
     c6e:	84 2b       	or	r24, r20
     c70:	8c 93       	st	X, r24
     c72:	4b c0       	rjmp	.+150    	; 0xd0a <DIO_voidSetpindirection+0x21a>

			break;
		case INPUT:
			CLR_BIT(DDRC,Copy_u8PinNumber);
     c74:	a4 e3       	ldi	r26, 0x34	; 52
     c76:	b0 e0       	ldi	r27, 0x00	; 0
     c78:	e4 e3       	ldi	r30, 0x34	; 52
     c7a:	f0 e0       	ldi	r31, 0x00	; 0
     c7c:	80 81       	ld	r24, Z
     c7e:	48 2f       	mov	r20, r24
     c80:	8a 81       	ldd	r24, Y+2	; 0x02
     c82:	28 2f       	mov	r18, r24
     c84:	30 e0       	ldi	r19, 0x00	; 0
     c86:	81 e0       	ldi	r24, 0x01	; 1
     c88:	90 e0       	ldi	r25, 0x00	; 0
     c8a:	02 2e       	mov	r0, r18
     c8c:	02 c0       	rjmp	.+4      	; 0xc92 <DIO_voidSetpindirection+0x1a2>
     c8e:	88 0f       	add	r24, r24
     c90:	99 1f       	adc	r25, r25
     c92:	0a 94       	dec	r0
     c94:	e2 f7       	brpl	.-8      	; 0xc8e <DIO_voidSetpindirection+0x19e>
     c96:	80 95       	com	r24
     c98:	84 23       	and	r24, r20
     c9a:	8c 93       	st	X, r24
     c9c:	36 c0       	rjmp	.+108    	; 0xd0a <DIO_voidSetpindirection+0x21a>
	}

	break;
case DIO_PORTD:

	switch(Copy_pinstate)
     c9e:	8b 81       	ldd	r24, Y+3	; 0x03
     ca0:	28 2f       	mov	r18, r24
     ca2:	30 e0       	ldi	r19, 0x00	; 0
     ca4:	3d 83       	std	Y+5, r19	; 0x05
     ca6:	2c 83       	std	Y+4, r18	; 0x04
     ca8:	8c 81       	ldd	r24, Y+4	; 0x04
     caa:	9d 81       	ldd	r25, Y+5	; 0x05
     cac:	00 97       	sbiw	r24, 0x00	; 0
     cae:	c9 f0       	breq	.+50     	; 0xce2 <DIO_voidSetpindirection+0x1f2>
     cb0:	2c 81       	ldd	r18, Y+4	; 0x04
     cb2:	3d 81       	ldd	r19, Y+5	; 0x05
     cb4:	21 30       	cpi	r18, 0x01	; 1
     cb6:	31 05       	cpc	r19, r1
     cb8:	41 f5       	brne	.+80     	; 0xd0a <DIO_voidSetpindirection+0x21a>
	{
		case OUTPUT:
			SET_BIT(DDRD,Copy_u8PinNumber);
     cba:	a1 e3       	ldi	r26, 0x31	; 49
     cbc:	b0 e0       	ldi	r27, 0x00	; 0
     cbe:	e1 e3       	ldi	r30, 0x31	; 49
     cc0:	f0 e0       	ldi	r31, 0x00	; 0
     cc2:	80 81       	ld	r24, Z
     cc4:	48 2f       	mov	r20, r24
     cc6:	8a 81       	ldd	r24, Y+2	; 0x02
     cc8:	28 2f       	mov	r18, r24
     cca:	30 e0       	ldi	r19, 0x00	; 0
     ccc:	81 e0       	ldi	r24, 0x01	; 1
     cce:	90 e0       	ldi	r25, 0x00	; 0
     cd0:	02 2e       	mov	r0, r18
     cd2:	02 c0       	rjmp	.+4      	; 0xcd8 <DIO_voidSetpindirection+0x1e8>
     cd4:	88 0f       	add	r24, r24
     cd6:	99 1f       	adc	r25, r25
     cd8:	0a 94       	dec	r0
     cda:	e2 f7       	brpl	.-8      	; 0xcd4 <DIO_voidSetpindirection+0x1e4>
     cdc:	84 2b       	or	r24, r20
     cde:	8c 93       	st	X, r24
     ce0:	14 c0       	rjmp	.+40     	; 0xd0a <DIO_voidSetpindirection+0x21a>

			break;
		case INPUT:
			CLR_BIT(DDRD,Copy_u8PinNumber);
     ce2:	a1 e3       	ldi	r26, 0x31	; 49
     ce4:	b0 e0       	ldi	r27, 0x00	; 0
     ce6:	e1 e3       	ldi	r30, 0x31	; 49
     ce8:	f0 e0       	ldi	r31, 0x00	; 0
     cea:	80 81       	ld	r24, Z
     cec:	48 2f       	mov	r20, r24
     cee:	8a 81       	ldd	r24, Y+2	; 0x02
     cf0:	28 2f       	mov	r18, r24
     cf2:	30 e0       	ldi	r19, 0x00	; 0
     cf4:	81 e0       	ldi	r24, 0x01	; 1
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	02 2e       	mov	r0, r18
     cfa:	02 c0       	rjmp	.+4      	; 0xd00 <DIO_voidSetpindirection+0x210>
     cfc:	88 0f       	add	r24, r24
     cfe:	99 1f       	adc	r25, r25
     d00:	0a 94       	dec	r0
     d02:	e2 f7       	brpl	.-8      	; 0xcfc <DIO_voidSetpindirection+0x20c>
     d04:	80 95       	com	r24
     d06:	84 23       	and	r24, r20
     d08:	8c 93       	st	X, r24
	break;


}

}
     d0a:	2d 96       	adiw	r28, 0x0d	; 13
     d0c:	0f b6       	in	r0, 0x3f	; 63
     d0e:	f8 94       	cli
     d10:	de bf       	out	0x3e, r29	; 62
     d12:	0f be       	out	0x3f, r0	; 63
     d14:	cd bf       	out	0x3d, r28	; 61
     d16:	cf 91       	pop	r28
     d18:	df 91       	pop	r29
     d1a:	08 95       	ret

00000d1c <DIO_voidSetpinvalue>:

void DIO_voidSetpinvalue(u8 Copy_u8portName,u8 Copy_u8PinNumber,u8 Copy_pinvalue)
{
     d1c:	df 93       	push	r29
     d1e:	cf 93       	push	r28
     d20:	cd b7       	in	r28, 0x3d	; 61
     d22:	de b7       	in	r29, 0x3e	; 62
     d24:	2d 97       	sbiw	r28, 0x0d	; 13
     d26:	0f b6       	in	r0, 0x3f	; 63
     d28:	f8 94       	cli
     d2a:	de bf       	out	0x3e, r29	; 62
     d2c:	0f be       	out	0x3f, r0	; 63
     d2e:	cd bf       	out	0x3d, r28	; 61
     d30:	89 83       	std	Y+1, r24	; 0x01
     d32:	6a 83       	std	Y+2, r22	; 0x02
     d34:	4b 83       	std	Y+3, r20	; 0x03

	switch(Copy_u8portName)
     d36:	89 81       	ldd	r24, Y+1	; 0x01
     d38:	28 2f       	mov	r18, r24
     d3a:	30 e0       	ldi	r19, 0x00	; 0
     d3c:	3d 87       	std	Y+13, r19	; 0x0d
     d3e:	2c 87       	std	Y+12, r18	; 0x0c
     d40:	8c 85       	ldd	r24, Y+12	; 0x0c
     d42:	9d 85       	ldd	r25, Y+13	; 0x0d
     d44:	81 30       	cpi	r24, 0x01	; 1
     d46:	91 05       	cpc	r25, r1
     d48:	09 f4       	brne	.+2      	; 0xd4c <DIO_voidSetpinvalue+0x30>
     d4a:	4f c0       	rjmp	.+158    	; 0xdea <DIO_voidSetpinvalue+0xce>
     d4c:	2c 85       	ldd	r18, Y+12	; 0x0c
     d4e:	3d 85       	ldd	r19, Y+13	; 0x0d
     d50:	22 30       	cpi	r18, 0x02	; 2
     d52:	31 05       	cpc	r19, r1
     d54:	2c f4       	brge	.+10     	; 0xd60 <DIO_voidSetpinvalue+0x44>
     d56:	8c 85       	ldd	r24, Y+12	; 0x0c
     d58:	9d 85       	ldd	r25, Y+13	; 0x0d
     d5a:	00 97       	sbiw	r24, 0x00	; 0
     d5c:	71 f0       	breq	.+28     	; 0xd7a <DIO_voidSetpinvalue+0x5e>
     d5e:	eb c0       	rjmp	.+470    	; 0xf36 <DIO_voidSetpinvalue+0x21a>
     d60:	2c 85       	ldd	r18, Y+12	; 0x0c
     d62:	3d 85       	ldd	r19, Y+13	; 0x0d
     d64:	22 30       	cpi	r18, 0x02	; 2
     d66:	31 05       	cpc	r19, r1
     d68:	09 f4       	brne	.+2      	; 0xd6c <DIO_voidSetpinvalue+0x50>
     d6a:	77 c0       	rjmp	.+238    	; 0xe5a <DIO_voidSetpinvalue+0x13e>
     d6c:	8c 85       	ldd	r24, Y+12	; 0x0c
     d6e:	9d 85       	ldd	r25, Y+13	; 0x0d
     d70:	83 30       	cpi	r24, 0x03	; 3
     d72:	91 05       	cpc	r25, r1
     d74:	09 f4       	brne	.+2      	; 0xd78 <DIO_voidSetpinvalue+0x5c>
     d76:	a9 c0       	rjmp	.+338    	; 0xeca <DIO_voidSetpinvalue+0x1ae>
     d78:	de c0       	rjmp	.+444    	; 0xf36 <DIO_voidSetpinvalue+0x21a>
	{

	case DIO_PORTA:
		switch(Copy_pinvalue)
     d7a:	8b 81       	ldd	r24, Y+3	; 0x03
     d7c:	28 2f       	mov	r18, r24
     d7e:	30 e0       	ldi	r19, 0x00	; 0
     d80:	3b 87       	std	Y+11, r19	; 0x0b
     d82:	2a 87       	std	Y+10, r18	; 0x0a
     d84:	8a 85       	ldd	r24, Y+10	; 0x0a
     d86:	9b 85       	ldd	r25, Y+11	; 0x0b
     d88:	00 97       	sbiw	r24, 0x00	; 0
     d8a:	d1 f0       	breq	.+52     	; 0xdc0 <DIO_voidSetpinvalue+0xa4>
     d8c:	2a 85       	ldd	r18, Y+10	; 0x0a
     d8e:	3b 85       	ldd	r19, Y+11	; 0x0b
     d90:	21 30       	cpi	r18, 0x01	; 1
     d92:	31 05       	cpc	r19, r1
     d94:	09 f0       	breq	.+2      	; 0xd98 <DIO_voidSetpinvalue+0x7c>
     d96:	cf c0       	rjmp	.+414    	; 0xf36 <DIO_voidSetpinvalue+0x21a>
		{
			case HIGH:
				SET_BIT(PORTA,Copy_u8PinNumber);
     d98:	ab e3       	ldi	r26, 0x3B	; 59
     d9a:	b0 e0       	ldi	r27, 0x00	; 0
     d9c:	eb e3       	ldi	r30, 0x3B	; 59
     d9e:	f0 e0       	ldi	r31, 0x00	; 0
     da0:	80 81       	ld	r24, Z
     da2:	48 2f       	mov	r20, r24
     da4:	8a 81       	ldd	r24, Y+2	; 0x02
     da6:	28 2f       	mov	r18, r24
     da8:	30 e0       	ldi	r19, 0x00	; 0
     daa:	81 e0       	ldi	r24, 0x01	; 1
     dac:	90 e0       	ldi	r25, 0x00	; 0
     dae:	02 2e       	mov	r0, r18
     db0:	02 c0       	rjmp	.+4      	; 0xdb6 <DIO_voidSetpinvalue+0x9a>
     db2:	88 0f       	add	r24, r24
     db4:	99 1f       	adc	r25, r25
     db6:	0a 94       	dec	r0
     db8:	e2 f7       	brpl	.-8      	; 0xdb2 <DIO_voidSetpinvalue+0x96>
     dba:	84 2b       	or	r24, r20
     dbc:	8c 93       	st	X, r24
     dbe:	bb c0       	rjmp	.+374    	; 0xf36 <DIO_voidSetpinvalue+0x21a>

				break;
			case LOW:
				CLR_BIT(PORTA,Copy_u8PinNumber);
     dc0:	ab e3       	ldi	r26, 0x3B	; 59
     dc2:	b0 e0       	ldi	r27, 0x00	; 0
     dc4:	eb e3       	ldi	r30, 0x3B	; 59
     dc6:	f0 e0       	ldi	r31, 0x00	; 0
     dc8:	80 81       	ld	r24, Z
     dca:	48 2f       	mov	r20, r24
     dcc:	8a 81       	ldd	r24, Y+2	; 0x02
     dce:	28 2f       	mov	r18, r24
     dd0:	30 e0       	ldi	r19, 0x00	; 0
     dd2:	81 e0       	ldi	r24, 0x01	; 1
     dd4:	90 e0       	ldi	r25, 0x00	; 0
     dd6:	02 2e       	mov	r0, r18
     dd8:	02 c0       	rjmp	.+4      	; 0xdde <DIO_voidSetpinvalue+0xc2>
     dda:	88 0f       	add	r24, r24
     ddc:	99 1f       	adc	r25, r25
     dde:	0a 94       	dec	r0
     de0:	e2 f7       	brpl	.-8      	; 0xdda <DIO_voidSetpinvalue+0xbe>
     de2:	80 95       	com	r24
     de4:	84 23       	and	r24, r20
     de6:	8c 93       	st	X, r24
     de8:	a6 c0       	rjmp	.+332    	; 0xf36 <DIO_voidSetpinvalue+0x21a>
		}
		break;
	case DIO_PORTB:


		switch(Copy_pinvalue)
     dea:	8b 81       	ldd	r24, Y+3	; 0x03
     dec:	28 2f       	mov	r18, r24
     dee:	30 e0       	ldi	r19, 0x00	; 0
     df0:	39 87       	std	Y+9, r19	; 0x09
     df2:	28 87       	std	Y+8, r18	; 0x08
     df4:	88 85       	ldd	r24, Y+8	; 0x08
     df6:	99 85       	ldd	r25, Y+9	; 0x09
     df8:	00 97       	sbiw	r24, 0x00	; 0
     dfa:	d1 f0       	breq	.+52     	; 0xe30 <DIO_voidSetpinvalue+0x114>
     dfc:	28 85       	ldd	r18, Y+8	; 0x08
     dfe:	39 85       	ldd	r19, Y+9	; 0x09
     e00:	21 30       	cpi	r18, 0x01	; 1
     e02:	31 05       	cpc	r19, r1
     e04:	09 f0       	breq	.+2      	; 0xe08 <DIO_voidSetpinvalue+0xec>
     e06:	97 c0       	rjmp	.+302    	; 0xf36 <DIO_voidSetpinvalue+0x21a>
		{
			case HIGH:
				SET_BIT(PORTB,Copy_u8PinNumber);
     e08:	a8 e3       	ldi	r26, 0x38	; 56
     e0a:	b0 e0       	ldi	r27, 0x00	; 0
     e0c:	e8 e3       	ldi	r30, 0x38	; 56
     e0e:	f0 e0       	ldi	r31, 0x00	; 0
     e10:	80 81       	ld	r24, Z
     e12:	48 2f       	mov	r20, r24
     e14:	8a 81       	ldd	r24, Y+2	; 0x02
     e16:	28 2f       	mov	r18, r24
     e18:	30 e0       	ldi	r19, 0x00	; 0
     e1a:	81 e0       	ldi	r24, 0x01	; 1
     e1c:	90 e0       	ldi	r25, 0x00	; 0
     e1e:	02 2e       	mov	r0, r18
     e20:	02 c0       	rjmp	.+4      	; 0xe26 <DIO_voidSetpinvalue+0x10a>
     e22:	88 0f       	add	r24, r24
     e24:	99 1f       	adc	r25, r25
     e26:	0a 94       	dec	r0
     e28:	e2 f7       	brpl	.-8      	; 0xe22 <DIO_voidSetpinvalue+0x106>
     e2a:	84 2b       	or	r24, r20
     e2c:	8c 93       	st	X, r24
     e2e:	83 c0       	rjmp	.+262    	; 0xf36 <DIO_voidSetpinvalue+0x21a>

				break;
			case LOW:
				CLR_BIT(PORTB,Copy_u8PinNumber);
     e30:	a8 e3       	ldi	r26, 0x38	; 56
     e32:	b0 e0       	ldi	r27, 0x00	; 0
     e34:	e8 e3       	ldi	r30, 0x38	; 56
     e36:	f0 e0       	ldi	r31, 0x00	; 0
     e38:	80 81       	ld	r24, Z
     e3a:	48 2f       	mov	r20, r24
     e3c:	8a 81       	ldd	r24, Y+2	; 0x02
     e3e:	28 2f       	mov	r18, r24
     e40:	30 e0       	ldi	r19, 0x00	; 0
     e42:	81 e0       	ldi	r24, 0x01	; 1
     e44:	90 e0       	ldi	r25, 0x00	; 0
     e46:	02 2e       	mov	r0, r18
     e48:	02 c0       	rjmp	.+4      	; 0xe4e <DIO_voidSetpinvalue+0x132>
     e4a:	88 0f       	add	r24, r24
     e4c:	99 1f       	adc	r25, r25
     e4e:	0a 94       	dec	r0
     e50:	e2 f7       	brpl	.-8      	; 0xe4a <DIO_voidSetpinvalue+0x12e>
     e52:	80 95       	com	r24
     e54:	84 23       	and	r24, r20
     e56:	8c 93       	st	X, r24
     e58:	6e c0       	rjmp	.+220    	; 0xf36 <DIO_voidSetpinvalue+0x21a>
		}

		break;
	case DIO_PORTC:

		switch(Copy_pinvalue)
     e5a:	8b 81       	ldd	r24, Y+3	; 0x03
     e5c:	28 2f       	mov	r18, r24
     e5e:	30 e0       	ldi	r19, 0x00	; 0
     e60:	3f 83       	std	Y+7, r19	; 0x07
     e62:	2e 83       	std	Y+6, r18	; 0x06
     e64:	8e 81       	ldd	r24, Y+6	; 0x06
     e66:	9f 81       	ldd	r25, Y+7	; 0x07
     e68:	00 97       	sbiw	r24, 0x00	; 0
     e6a:	d1 f0       	breq	.+52     	; 0xea0 <DIO_voidSetpinvalue+0x184>
     e6c:	2e 81       	ldd	r18, Y+6	; 0x06
     e6e:	3f 81       	ldd	r19, Y+7	; 0x07
     e70:	21 30       	cpi	r18, 0x01	; 1
     e72:	31 05       	cpc	r19, r1
     e74:	09 f0       	breq	.+2      	; 0xe78 <DIO_voidSetpinvalue+0x15c>
     e76:	5f c0       	rjmp	.+190    	; 0xf36 <DIO_voidSetpinvalue+0x21a>
		{
			case HIGH:
				SET_BIT(PORTC,Copy_u8PinNumber);
     e78:	a5 e3       	ldi	r26, 0x35	; 53
     e7a:	b0 e0       	ldi	r27, 0x00	; 0
     e7c:	e5 e3       	ldi	r30, 0x35	; 53
     e7e:	f0 e0       	ldi	r31, 0x00	; 0
     e80:	80 81       	ld	r24, Z
     e82:	48 2f       	mov	r20, r24
     e84:	8a 81       	ldd	r24, Y+2	; 0x02
     e86:	28 2f       	mov	r18, r24
     e88:	30 e0       	ldi	r19, 0x00	; 0
     e8a:	81 e0       	ldi	r24, 0x01	; 1
     e8c:	90 e0       	ldi	r25, 0x00	; 0
     e8e:	02 2e       	mov	r0, r18
     e90:	02 c0       	rjmp	.+4      	; 0xe96 <DIO_voidSetpinvalue+0x17a>
     e92:	88 0f       	add	r24, r24
     e94:	99 1f       	adc	r25, r25
     e96:	0a 94       	dec	r0
     e98:	e2 f7       	brpl	.-8      	; 0xe92 <DIO_voidSetpinvalue+0x176>
     e9a:	84 2b       	or	r24, r20
     e9c:	8c 93       	st	X, r24
     e9e:	4b c0       	rjmp	.+150    	; 0xf36 <DIO_voidSetpinvalue+0x21a>

				break;
			case LOW:
				CLR_BIT(PORTC,Copy_u8PinNumber);
     ea0:	a5 e3       	ldi	r26, 0x35	; 53
     ea2:	b0 e0       	ldi	r27, 0x00	; 0
     ea4:	e5 e3       	ldi	r30, 0x35	; 53
     ea6:	f0 e0       	ldi	r31, 0x00	; 0
     ea8:	80 81       	ld	r24, Z
     eaa:	48 2f       	mov	r20, r24
     eac:	8a 81       	ldd	r24, Y+2	; 0x02
     eae:	28 2f       	mov	r18, r24
     eb0:	30 e0       	ldi	r19, 0x00	; 0
     eb2:	81 e0       	ldi	r24, 0x01	; 1
     eb4:	90 e0       	ldi	r25, 0x00	; 0
     eb6:	02 2e       	mov	r0, r18
     eb8:	02 c0       	rjmp	.+4      	; 0xebe <DIO_voidSetpinvalue+0x1a2>
     eba:	88 0f       	add	r24, r24
     ebc:	99 1f       	adc	r25, r25
     ebe:	0a 94       	dec	r0
     ec0:	e2 f7       	brpl	.-8      	; 0xeba <DIO_voidSetpinvalue+0x19e>
     ec2:	80 95       	com	r24
     ec4:	84 23       	and	r24, r20
     ec6:	8c 93       	st	X, r24
     ec8:	36 c0       	rjmp	.+108    	; 0xf36 <DIO_voidSetpinvalue+0x21a>
		}

		break;
	case DIO_PORTD:

		switch(Copy_pinvalue)
     eca:	8b 81       	ldd	r24, Y+3	; 0x03
     ecc:	28 2f       	mov	r18, r24
     ece:	30 e0       	ldi	r19, 0x00	; 0
     ed0:	3d 83       	std	Y+5, r19	; 0x05
     ed2:	2c 83       	std	Y+4, r18	; 0x04
     ed4:	8c 81       	ldd	r24, Y+4	; 0x04
     ed6:	9d 81       	ldd	r25, Y+5	; 0x05
     ed8:	00 97       	sbiw	r24, 0x00	; 0
     eda:	c9 f0       	breq	.+50     	; 0xf0e <DIO_voidSetpinvalue+0x1f2>
     edc:	2c 81       	ldd	r18, Y+4	; 0x04
     ede:	3d 81       	ldd	r19, Y+5	; 0x05
     ee0:	21 30       	cpi	r18, 0x01	; 1
     ee2:	31 05       	cpc	r19, r1
     ee4:	41 f5       	brne	.+80     	; 0xf36 <DIO_voidSetpinvalue+0x21a>
		{
			case HIGH:
				SET_BIT(PORTD,Copy_u8PinNumber);
     ee6:	a2 e3       	ldi	r26, 0x32	; 50
     ee8:	b0 e0       	ldi	r27, 0x00	; 0
     eea:	e2 e3       	ldi	r30, 0x32	; 50
     eec:	f0 e0       	ldi	r31, 0x00	; 0
     eee:	80 81       	ld	r24, Z
     ef0:	48 2f       	mov	r20, r24
     ef2:	8a 81       	ldd	r24, Y+2	; 0x02
     ef4:	28 2f       	mov	r18, r24
     ef6:	30 e0       	ldi	r19, 0x00	; 0
     ef8:	81 e0       	ldi	r24, 0x01	; 1
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	02 2e       	mov	r0, r18
     efe:	02 c0       	rjmp	.+4      	; 0xf04 <DIO_voidSetpinvalue+0x1e8>
     f00:	88 0f       	add	r24, r24
     f02:	99 1f       	adc	r25, r25
     f04:	0a 94       	dec	r0
     f06:	e2 f7       	brpl	.-8      	; 0xf00 <DIO_voidSetpinvalue+0x1e4>
     f08:	84 2b       	or	r24, r20
     f0a:	8c 93       	st	X, r24
     f0c:	14 c0       	rjmp	.+40     	; 0xf36 <DIO_voidSetpinvalue+0x21a>

				break;
			case LOW:
				CLR_BIT(PORTD,Copy_u8PinNumber);
     f0e:	a2 e3       	ldi	r26, 0x32	; 50
     f10:	b0 e0       	ldi	r27, 0x00	; 0
     f12:	e2 e3       	ldi	r30, 0x32	; 50
     f14:	f0 e0       	ldi	r31, 0x00	; 0
     f16:	80 81       	ld	r24, Z
     f18:	48 2f       	mov	r20, r24
     f1a:	8a 81       	ldd	r24, Y+2	; 0x02
     f1c:	28 2f       	mov	r18, r24
     f1e:	30 e0       	ldi	r19, 0x00	; 0
     f20:	81 e0       	ldi	r24, 0x01	; 1
     f22:	90 e0       	ldi	r25, 0x00	; 0
     f24:	02 2e       	mov	r0, r18
     f26:	02 c0       	rjmp	.+4      	; 0xf2c <DIO_voidSetpinvalue+0x210>
     f28:	88 0f       	add	r24, r24
     f2a:	99 1f       	adc	r25, r25
     f2c:	0a 94       	dec	r0
     f2e:	e2 f7       	brpl	.-8      	; 0xf28 <DIO_voidSetpinvalue+0x20c>
     f30:	80 95       	com	r24
     f32:	84 23       	and	r24, r20
     f34:	8c 93       	st	X, r24
	}




}
     f36:	2d 96       	adiw	r28, 0x0d	; 13
     f38:	0f b6       	in	r0, 0x3f	; 63
     f3a:	f8 94       	cli
     f3c:	de bf       	out	0x3e, r29	; 62
     f3e:	0f be       	out	0x3f, r0	; 63
     f40:	cd bf       	out	0x3d, r28	; 61
     f42:	cf 91       	pop	r28
     f44:	df 91       	pop	r29
     f46:	08 95       	ret

00000f48 <DIO_u8GetPinValue>:
u8 DIO_u8GetPinValue(u8 Copy_u8portName,u8 Copy_u8PinNumber)
{
     f48:	df 93       	push	r29
     f4a:	cf 93       	push	r28
     f4c:	00 d0       	rcall	.+0      	; 0xf4e <DIO_u8GetPinValue+0x6>
     f4e:	00 d0       	rcall	.+0      	; 0xf50 <DIO_u8GetPinValue+0x8>
     f50:	0f 92       	push	r0
     f52:	cd b7       	in	r28, 0x3d	; 61
     f54:	de b7       	in	r29, 0x3e	; 62
     f56:	8a 83       	std	Y+2, r24	; 0x02
     f58:	6b 83       	std	Y+3, r22	; 0x03

	u8 Local_u8PinValue;


	switch(Copy_u8portName)
     f5a:	8a 81       	ldd	r24, Y+2	; 0x02
     f5c:	28 2f       	mov	r18, r24
     f5e:	30 e0       	ldi	r19, 0x00	; 0
     f60:	3d 83       	std	Y+5, r19	; 0x05
     f62:	2c 83       	std	Y+4, r18	; 0x04
     f64:	4c 81       	ldd	r20, Y+4	; 0x04
     f66:	5d 81       	ldd	r21, Y+5	; 0x05
     f68:	41 30       	cpi	r20, 0x01	; 1
     f6a:	51 05       	cpc	r21, r1
     f6c:	41 f1       	breq	.+80     	; 0xfbe <DIO_u8GetPinValue+0x76>
     f6e:	8c 81       	ldd	r24, Y+4	; 0x04
     f70:	9d 81       	ldd	r25, Y+5	; 0x05
     f72:	82 30       	cpi	r24, 0x02	; 2
     f74:	91 05       	cpc	r25, r1
     f76:	34 f4       	brge	.+12     	; 0xf84 <DIO_u8GetPinValue+0x3c>
     f78:	2c 81       	ldd	r18, Y+4	; 0x04
     f7a:	3d 81       	ldd	r19, Y+5	; 0x05
     f7c:	21 15       	cp	r18, r1
     f7e:	31 05       	cpc	r19, r1
     f80:	61 f0       	breq	.+24     	; 0xf9a <DIO_u8GetPinValue+0x52>
     f82:	52 c0       	rjmp	.+164    	; 0x1028 <DIO_u8GetPinValue+0xe0>
     f84:	4c 81       	ldd	r20, Y+4	; 0x04
     f86:	5d 81       	ldd	r21, Y+5	; 0x05
     f88:	42 30       	cpi	r20, 0x02	; 2
     f8a:	51 05       	cpc	r21, r1
     f8c:	51 f1       	breq	.+84     	; 0xfe2 <DIO_u8GetPinValue+0x9a>
     f8e:	8c 81       	ldd	r24, Y+4	; 0x04
     f90:	9d 81       	ldd	r25, Y+5	; 0x05
     f92:	83 30       	cpi	r24, 0x03	; 3
     f94:	91 05       	cpc	r25, r1
     f96:	b9 f1       	breq	.+110    	; 0x1006 <DIO_u8GetPinValue+0xbe>
     f98:	47 c0       	rjmp	.+142    	; 0x1028 <DIO_u8GetPinValue+0xe0>
		{
			case DIO_PORTA:
				Local_u8PinValue=GET_BIT(PINA, Copy_u8PinNumber);
     f9a:	e9 e3       	ldi	r30, 0x39	; 57
     f9c:	f0 e0       	ldi	r31, 0x00	; 0
     f9e:	80 81       	ld	r24, Z
     fa0:	28 2f       	mov	r18, r24
     fa2:	30 e0       	ldi	r19, 0x00	; 0
     fa4:	8b 81       	ldd	r24, Y+3	; 0x03
     fa6:	88 2f       	mov	r24, r24
     fa8:	90 e0       	ldi	r25, 0x00	; 0
     faa:	a9 01       	movw	r20, r18
     fac:	02 c0       	rjmp	.+4      	; 0xfb2 <DIO_u8GetPinValue+0x6a>
     fae:	55 95       	asr	r21
     fb0:	47 95       	ror	r20
     fb2:	8a 95       	dec	r24
     fb4:	e2 f7       	brpl	.-8      	; 0xfae <DIO_u8GetPinValue+0x66>
     fb6:	ca 01       	movw	r24, r20
     fb8:	81 70       	andi	r24, 0x01	; 1
     fba:	89 83       	std	Y+1, r24	; 0x01
     fbc:	35 c0       	rjmp	.+106    	; 0x1028 <DIO_u8GetPinValue+0xe0>

				break;
			case DIO_PORTB:
							Local_u8PinValue=GET_BIT(PINB, Copy_u8PinNumber);
     fbe:	e6 e3       	ldi	r30, 0x36	; 54
     fc0:	f0 e0       	ldi	r31, 0x00	; 0
     fc2:	80 81       	ld	r24, Z
     fc4:	28 2f       	mov	r18, r24
     fc6:	30 e0       	ldi	r19, 0x00	; 0
     fc8:	8b 81       	ldd	r24, Y+3	; 0x03
     fca:	88 2f       	mov	r24, r24
     fcc:	90 e0       	ldi	r25, 0x00	; 0
     fce:	a9 01       	movw	r20, r18
     fd0:	02 c0       	rjmp	.+4      	; 0xfd6 <DIO_u8GetPinValue+0x8e>
     fd2:	55 95       	asr	r21
     fd4:	47 95       	ror	r20
     fd6:	8a 95       	dec	r24
     fd8:	e2 f7       	brpl	.-8      	; 0xfd2 <DIO_u8GetPinValue+0x8a>
     fda:	ca 01       	movw	r24, r20
     fdc:	81 70       	andi	r24, 0x01	; 1
     fde:	89 83       	std	Y+1, r24	; 0x01
     fe0:	23 c0       	rjmp	.+70     	; 0x1028 <DIO_u8GetPinValue+0xe0>

							break;
			case DIO_PORTC:
							Local_u8PinValue=GET_BIT(PINC, Copy_u8PinNumber);
     fe2:	e3 e3       	ldi	r30, 0x33	; 51
     fe4:	f0 e0       	ldi	r31, 0x00	; 0
     fe6:	80 81       	ld	r24, Z
     fe8:	28 2f       	mov	r18, r24
     fea:	30 e0       	ldi	r19, 0x00	; 0
     fec:	8b 81       	ldd	r24, Y+3	; 0x03
     fee:	88 2f       	mov	r24, r24
     ff0:	90 e0       	ldi	r25, 0x00	; 0
     ff2:	a9 01       	movw	r20, r18
     ff4:	02 c0       	rjmp	.+4      	; 0xffa <DIO_u8GetPinValue+0xb2>
     ff6:	55 95       	asr	r21
     ff8:	47 95       	ror	r20
     ffa:	8a 95       	dec	r24
     ffc:	e2 f7       	brpl	.-8      	; 0xff6 <DIO_u8GetPinValue+0xae>
     ffe:	ca 01       	movw	r24, r20
    1000:	81 70       	andi	r24, 0x01	; 1
    1002:	89 83       	std	Y+1, r24	; 0x01
    1004:	11 c0       	rjmp	.+34     	; 0x1028 <DIO_u8GetPinValue+0xe0>

							break;
			case DIO_PORTD:
							Local_u8PinValue=GET_BIT(PIND, Copy_u8PinNumber);
    1006:	e0 e3       	ldi	r30, 0x30	; 48
    1008:	f0 e0       	ldi	r31, 0x00	; 0
    100a:	80 81       	ld	r24, Z
    100c:	28 2f       	mov	r18, r24
    100e:	30 e0       	ldi	r19, 0x00	; 0
    1010:	8b 81       	ldd	r24, Y+3	; 0x03
    1012:	88 2f       	mov	r24, r24
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	a9 01       	movw	r20, r18
    1018:	02 c0       	rjmp	.+4      	; 0x101e <DIO_u8GetPinValue+0xd6>
    101a:	55 95       	asr	r21
    101c:	47 95       	ror	r20
    101e:	8a 95       	dec	r24
    1020:	e2 f7       	brpl	.-8      	; 0x101a <DIO_u8GetPinValue+0xd2>
    1022:	ca 01       	movw	r24, r20
    1024:	81 70       	andi	r24, 0x01	; 1
    1026:	89 83       	std	Y+1, r24	; 0x01
							break;


		}

	return Local_u8PinValue;
    1028:	89 81       	ldd	r24, Y+1	; 0x01

}
    102a:	0f 90       	pop	r0
    102c:	0f 90       	pop	r0
    102e:	0f 90       	pop	r0
    1030:	0f 90       	pop	r0
    1032:	0f 90       	pop	r0
    1034:	cf 91       	pop	r28
    1036:	df 91       	pop	r29
    1038:	08 95       	ret

0000103a <DIO_voidSetSpecificPortDirection>:
void DIO_voidSetSpecificPortDirection(u8 Copy_u8PortName,u8 Copy_PortState)
{
    103a:	df 93       	push	r29
    103c:	cf 93       	push	r28
    103e:	00 d0       	rcall	.+0      	; 0x1040 <DIO_voidSetSpecificPortDirection+0x6>
    1040:	00 d0       	rcall	.+0      	; 0x1042 <DIO_voidSetSpecificPortDirection+0x8>
    1042:	cd b7       	in	r28, 0x3d	; 61
    1044:	de b7       	in	r29, 0x3e	; 62
    1046:	89 83       	std	Y+1, r24	; 0x01
    1048:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortName)
    104a:	89 81       	ldd	r24, Y+1	; 0x01
    104c:	28 2f       	mov	r18, r24
    104e:	30 e0       	ldi	r19, 0x00	; 0
    1050:	3c 83       	std	Y+4, r19	; 0x04
    1052:	2b 83       	std	Y+3, r18	; 0x03
    1054:	8b 81       	ldd	r24, Y+3	; 0x03
    1056:	9c 81       	ldd	r25, Y+4	; 0x04
    1058:	81 30       	cpi	r24, 0x01	; 1
    105a:	91 05       	cpc	r25, r1
    105c:	d1 f0       	breq	.+52     	; 0x1092 <DIO_voidSetSpecificPortDirection+0x58>
    105e:	2b 81       	ldd	r18, Y+3	; 0x03
    1060:	3c 81       	ldd	r19, Y+4	; 0x04
    1062:	22 30       	cpi	r18, 0x02	; 2
    1064:	31 05       	cpc	r19, r1
    1066:	2c f4       	brge	.+10     	; 0x1072 <DIO_voidSetSpecificPortDirection+0x38>
    1068:	8b 81       	ldd	r24, Y+3	; 0x03
    106a:	9c 81       	ldd	r25, Y+4	; 0x04
    106c:	00 97       	sbiw	r24, 0x00	; 0
    106e:	61 f0       	breq	.+24     	; 0x1088 <DIO_voidSetSpecificPortDirection+0x4e>
    1070:	1e c0       	rjmp	.+60     	; 0x10ae <DIO_voidSetSpecificPortDirection+0x74>
    1072:	2b 81       	ldd	r18, Y+3	; 0x03
    1074:	3c 81       	ldd	r19, Y+4	; 0x04
    1076:	22 30       	cpi	r18, 0x02	; 2
    1078:	31 05       	cpc	r19, r1
    107a:	81 f0       	breq	.+32     	; 0x109c <DIO_voidSetSpecificPortDirection+0x62>
    107c:	8b 81       	ldd	r24, Y+3	; 0x03
    107e:	9c 81       	ldd	r25, Y+4	; 0x04
    1080:	83 30       	cpi	r24, 0x03	; 3
    1082:	91 05       	cpc	r25, r1
    1084:	81 f0       	breq	.+32     	; 0x10a6 <DIO_voidSetSpecificPortDirection+0x6c>
    1086:	13 c0       	rjmp	.+38     	; 0x10ae <DIO_voidSetSpecificPortDirection+0x74>
	{
	case DIO_PORTA:
		DDRA = Copy_PortState;
    1088:	ea e3       	ldi	r30, 0x3A	; 58
    108a:	f0 e0       	ldi	r31, 0x00	; 0
    108c:	8a 81       	ldd	r24, Y+2	; 0x02
    108e:	80 83       	st	Z, r24
    1090:	0e c0       	rjmp	.+28     	; 0x10ae <DIO_voidSetSpecificPortDirection+0x74>
		break;
	case DIO_PORTB:
		DDRB = Copy_PortState;
    1092:	e7 e3       	ldi	r30, 0x37	; 55
    1094:	f0 e0       	ldi	r31, 0x00	; 0
    1096:	8a 81       	ldd	r24, Y+2	; 0x02
    1098:	80 83       	st	Z, r24
    109a:	09 c0       	rjmp	.+18     	; 0x10ae <DIO_voidSetSpecificPortDirection+0x74>
		break;
	case DIO_PORTC:
		DDRC = Copy_PortState;
    109c:	e4 e3       	ldi	r30, 0x34	; 52
    109e:	f0 e0       	ldi	r31, 0x00	; 0
    10a0:	8a 81       	ldd	r24, Y+2	; 0x02
    10a2:	80 83       	st	Z, r24
    10a4:	04 c0       	rjmp	.+8      	; 0x10ae <DIO_voidSetSpecificPortDirection+0x74>
		break;
	case DIO_PORTD:
		DDRD = Copy_PortState;
    10a6:	e1 e3       	ldi	r30, 0x31	; 49
    10a8:	f0 e0       	ldi	r31, 0x00	; 0
    10aa:	8a 81       	ldd	r24, Y+2	; 0x02
    10ac:	80 83       	st	Z, r24
		break;
	}
}
    10ae:	0f 90       	pop	r0
    10b0:	0f 90       	pop	r0
    10b2:	0f 90       	pop	r0
    10b4:	0f 90       	pop	r0
    10b6:	cf 91       	pop	r28
    10b8:	df 91       	pop	r29
    10ba:	08 95       	ret

000010bc <DIO_voidSetSpecificPortValue>:

void DIO_voidSetSpecificPortValue(u8 Copy_u8PortName,u8 Copy_PortState)
{
    10bc:	df 93       	push	r29
    10be:	cf 93       	push	r28
    10c0:	00 d0       	rcall	.+0      	; 0x10c2 <DIO_voidSetSpecificPortValue+0x6>
    10c2:	00 d0       	rcall	.+0      	; 0x10c4 <DIO_voidSetSpecificPortValue+0x8>
    10c4:	cd b7       	in	r28, 0x3d	; 61
    10c6:	de b7       	in	r29, 0x3e	; 62
    10c8:	89 83       	std	Y+1, r24	; 0x01
    10ca:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortName)
    10cc:	89 81       	ldd	r24, Y+1	; 0x01
    10ce:	28 2f       	mov	r18, r24
    10d0:	30 e0       	ldi	r19, 0x00	; 0
    10d2:	3c 83       	std	Y+4, r19	; 0x04
    10d4:	2b 83       	std	Y+3, r18	; 0x03
    10d6:	8b 81       	ldd	r24, Y+3	; 0x03
    10d8:	9c 81       	ldd	r25, Y+4	; 0x04
    10da:	81 30       	cpi	r24, 0x01	; 1
    10dc:	91 05       	cpc	r25, r1
    10de:	d1 f0       	breq	.+52     	; 0x1114 <DIO_voidSetSpecificPortValue+0x58>
    10e0:	2b 81       	ldd	r18, Y+3	; 0x03
    10e2:	3c 81       	ldd	r19, Y+4	; 0x04
    10e4:	22 30       	cpi	r18, 0x02	; 2
    10e6:	31 05       	cpc	r19, r1
    10e8:	2c f4       	brge	.+10     	; 0x10f4 <DIO_voidSetSpecificPortValue+0x38>
    10ea:	8b 81       	ldd	r24, Y+3	; 0x03
    10ec:	9c 81       	ldd	r25, Y+4	; 0x04
    10ee:	00 97       	sbiw	r24, 0x00	; 0
    10f0:	61 f0       	breq	.+24     	; 0x110a <DIO_voidSetSpecificPortValue+0x4e>
    10f2:	1e c0       	rjmp	.+60     	; 0x1130 <DIO_voidSetSpecificPortValue+0x74>
    10f4:	2b 81       	ldd	r18, Y+3	; 0x03
    10f6:	3c 81       	ldd	r19, Y+4	; 0x04
    10f8:	22 30       	cpi	r18, 0x02	; 2
    10fa:	31 05       	cpc	r19, r1
    10fc:	81 f0       	breq	.+32     	; 0x111e <DIO_voidSetSpecificPortValue+0x62>
    10fe:	8b 81       	ldd	r24, Y+3	; 0x03
    1100:	9c 81       	ldd	r25, Y+4	; 0x04
    1102:	83 30       	cpi	r24, 0x03	; 3
    1104:	91 05       	cpc	r25, r1
    1106:	81 f0       	breq	.+32     	; 0x1128 <DIO_voidSetSpecificPortValue+0x6c>
    1108:	13 c0       	rjmp	.+38     	; 0x1130 <DIO_voidSetSpecificPortValue+0x74>
		{
		case DIO_PORTA:
			PORTA = Copy_PortState;
    110a:	eb e3       	ldi	r30, 0x3B	; 59
    110c:	f0 e0       	ldi	r31, 0x00	; 0
    110e:	8a 81       	ldd	r24, Y+2	; 0x02
    1110:	80 83       	st	Z, r24
    1112:	0e c0       	rjmp	.+28     	; 0x1130 <DIO_voidSetSpecificPortValue+0x74>
			break;
		case DIO_PORTB:
			PORTB = Copy_PortState;
    1114:	e8 e3       	ldi	r30, 0x38	; 56
    1116:	f0 e0       	ldi	r31, 0x00	; 0
    1118:	8a 81       	ldd	r24, Y+2	; 0x02
    111a:	80 83       	st	Z, r24
    111c:	09 c0       	rjmp	.+18     	; 0x1130 <DIO_voidSetSpecificPortValue+0x74>
			break;
		case DIO_PORTC:
			PORTC = Copy_PortState;
    111e:	e5 e3       	ldi	r30, 0x35	; 53
    1120:	f0 e0       	ldi	r31, 0x00	; 0
    1122:	8a 81       	ldd	r24, Y+2	; 0x02
    1124:	80 83       	st	Z, r24
    1126:	04 c0       	rjmp	.+8      	; 0x1130 <DIO_voidSetSpecificPortValue+0x74>
			break;
		case DIO_PORTD:
			PORTD = Copy_PortState;
    1128:	e2 e3       	ldi	r30, 0x32	; 50
    112a:	f0 e0       	ldi	r31, 0x00	; 0
    112c:	8a 81       	ldd	r24, Y+2	; 0x02
    112e:	80 83       	st	Z, r24
			break;
		}
}
    1130:	0f 90       	pop	r0
    1132:	0f 90       	pop	r0
    1134:	0f 90       	pop	r0
    1136:	0f 90       	pop	r0
    1138:	cf 91       	pop	r28
    113a:	df 91       	pop	r29
    113c:	08 95       	ret

0000113e <LCD_voidSendData>:

#include "LCD_interface.h"


void LCD_voidSendData(u8 Copy_u8Data)
{
    113e:	df 93       	push	r29
    1140:	cf 93       	push	r28
    1142:	cd b7       	in	r28, 0x3d	; 61
    1144:	de b7       	in	r29, 0x3e	; 62
    1146:	2f 97       	sbiw	r28, 0x0f	; 15
    1148:	0f b6       	in	r0, 0x3f	; 63
    114a:	f8 94       	cli
    114c:	de bf       	out	0x3e, r29	; 62
    114e:	0f be       	out	0x3f, r0	; 63
    1150:	cd bf       	out	0x3d, r28	; 61
    1152:	8f 87       	std	Y+15, r24	; 0x0f
	DIO_voidSetpinvalue(LCD_RS_PORT, LCD_RS_PIN, HIGH);
    1154:	81 e0       	ldi	r24, 0x01	; 1
    1156:	60 e0       	ldi	r22, 0x00	; 0
    1158:	41 e0       	ldi	r20, 0x01	; 1
    115a:	e0 dd       	rcall	.-1088   	; 0xd1c <DIO_voidSetpinvalue>
    115c:	81 e0       	ldi	r24, 0x01	; 1
	DIO_voidSetpinvalue(LCD_RW_PORT, LCD_RW_PIN, LOW);
    115e:	61 e0       	ldi	r22, 0x01	; 1
    1160:	40 e0       	ldi	r20, 0x00	; 0
    1162:	dc dd       	rcall	.-1096   	; 0xd1c <DIO_voidSetpinvalue>
    1164:	83 e0       	ldi	r24, 0x03	; 3
    1166:	6f 85       	ldd	r22, Y+15	; 0x0f

	DIO_voidSetSpecificPortValue(LCD_PORT_DATA, Copy_u8Data);
    1168:	a9 df       	rcall	.-174    	; 0x10bc <DIO_voidSetSpecificPortValue>
    116a:	81 e0       	ldi	r24, 0x01	; 1
    116c:	62 e0       	ldi	r22, 0x02	; 2
    116e:	41 e0       	ldi	r20, 0x01	; 1

	DIO_voidSetpinvalue(LCD_EN_PORT,LCD_EN_PIN,HIGH);
    1170:	d5 dd       	rcall	.-1110   	; 0xd1c <DIO_voidSetpinvalue>
    1172:	80 e0       	ldi	r24, 0x00	; 0
    1174:	90 e0       	ldi	r25, 0x00	; 0
    1176:	a0 e0       	ldi	r26, 0x00	; 0
    1178:	b0 e4       	ldi	r27, 0x40	; 64
    117a:	8b 87       	std	Y+11, r24	; 0x0b
    117c:	9c 87       	std	Y+12, r25	; 0x0c
    117e:	ad 87       	std	Y+13, r26	; 0x0d
    1180:	be 87       	std	Y+14, r27	; 0x0e
    1182:	6b 85       	ldd	r22, Y+11	; 0x0b
    1184:	7c 85       	ldd	r23, Y+12	; 0x0c
    1186:	8d 85       	ldd	r24, Y+13	; 0x0d
    1188:	9e 85       	ldd	r25, Y+14	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    118a:	20 e0       	ldi	r18, 0x00	; 0
    118c:	30 e0       	ldi	r19, 0x00	; 0
    118e:	4a ef       	ldi	r20, 0xFA	; 250
    1190:	54 e4       	ldi	r21, 0x44	; 68
    1192:	40 d9       	rcall	.-3456   	; 0x414 <__mulsf3>
    1194:	dc 01       	movw	r26, r24
    1196:	cb 01       	movw	r24, r22
    1198:	8f 83       	std	Y+7, r24	; 0x07
    119a:	98 87       	std	Y+8, r25	; 0x08
    119c:	a9 87       	std	Y+9, r26	; 0x09
    119e:	ba 87       	std	Y+10, r27	; 0x0a
    11a0:	6f 81       	ldd	r22, Y+7	; 0x07
    11a2:	78 85       	ldd	r23, Y+8	; 0x08
    11a4:	89 85       	ldd	r24, Y+9	; 0x09
    11a6:	9a 85       	ldd	r25, Y+10	; 0x0a
    11a8:	20 e0       	ldi	r18, 0x00	; 0
	if (__tmp < 1.0)
    11aa:	30 e0       	ldi	r19, 0x00	; 0
    11ac:	40 e8       	ldi	r20, 0x80	; 128
    11ae:	5f e3       	ldi	r21, 0x3F	; 63
    11b0:	7d da       	rcall	.-2822   	; 0x6ac <__ltsf2>
    11b2:	88 23       	and	r24, r24
    11b4:	2c f4       	brge	.+10     	; 0x11c0 <LCD_voidSendData+0x82>
    11b6:	81 e0       	ldi	r24, 0x01	; 1
    11b8:	90 e0       	ldi	r25, 0x00	; 0
    11ba:	9e 83       	std	Y+6, r25	; 0x06
    11bc:	8d 83       	std	Y+5, r24	; 0x05
    11be:	3d c0       	rjmp	.+122    	; 0x123a <LCD_voidSendData+0xfc>
    11c0:	6f 81       	ldd	r22, Y+7	; 0x07
		__ticks = 1;
    11c2:	78 85       	ldd	r23, Y+8	; 0x08
    11c4:	89 85       	ldd	r24, Y+9	; 0x09
    11c6:	9a 85       	ldd	r25, Y+10	; 0x0a
    11c8:	20 e0       	ldi	r18, 0x00	; 0
    11ca:	3f ef       	ldi	r19, 0xFF	; 255
	else if (__tmp > 65535)
    11cc:	4f e7       	ldi	r20, 0x7F	; 127
    11ce:	57 e4       	ldi	r21, 0x47	; 71
    11d0:	17 da       	rcall	.-3026   	; 0x600 <__gtsf2>
    11d2:	18 16       	cp	r1, r24
    11d4:	44 f5       	brge	.+80     	; 0x1226 <LCD_voidSendData+0xe8>
    11d6:	6b 85       	ldd	r22, Y+11	; 0x0b
    11d8:	7c 85       	ldd	r23, Y+12	; 0x0c
    11da:	8d 85       	ldd	r24, Y+13	; 0x0d
    11dc:	9e 85       	ldd	r25, Y+14	; 0x0e
    11de:	20 e0       	ldi	r18, 0x00	; 0
    11e0:	30 e0       	ldi	r19, 0x00	; 0
    11e2:	40 e2       	ldi	r20, 0x20	; 32
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11e4:	51 e4       	ldi	r21, 0x41	; 65
    11e6:	16 d9       	rcall	.-3540   	; 0x414 <__mulsf3>
    11e8:	dc 01       	movw	r26, r24
    11ea:	cb 01       	movw	r24, r22
    11ec:	bc 01       	movw	r22, r24
    11ee:	cd 01       	movw	r24, r26
    11f0:	0e 94 40 00 	call	0x80	; 0x80 <__fixunssfsi>
    11f4:	dc 01       	movw	r26, r24
    11f6:	cb 01       	movw	r24, r22
    11f8:	9e 83       	std	Y+6, r25	; 0x06
    11fa:	8d 83       	std	Y+5, r24	; 0x05
    11fc:	0f c0       	rjmp	.+30     	; 0x121c <LCD_voidSendData+0xde>
    11fe:	88 ec       	ldi	r24, 0xC8	; 200
    1200:	90 e0       	ldi	r25, 0x00	; 0
    1202:	9c 83       	std	Y+4, r25	; 0x04
    1204:	8b 83       	std	Y+3, r24	; 0x03
    1206:	8b 81       	ldd	r24, Y+3	; 0x03
    1208:	9c 81       	ldd	r25, Y+4	; 0x04
    120a:	01 97       	sbiw	r24, 0x01	; 1
    120c:	f1 f7       	brne	.-4      	; 0x120a <LCD_voidSendData+0xcc>
    120e:	9c 83       	std	Y+4, r25	; 0x04
    1210:	8b 83       	std	Y+3, r24	; 0x03
    1212:	8d 81       	ldd	r24, Y+5	; 0x05
    1214:	9e 81       	ldd	r25, Y+6	; 0x06
    1216:	01 97       	sbiw	r24, 0x01	; 1
    1218:	9e 83       	std	Y+6, r25	; 0x06
    121a:	8d 83       	std	Y+5, r24	; 0x05
    121c:	8d 81       	ldd	r24, Y+5	; 0x05
    121e:	9e 81       	ldd	r25, Y+6	; 0x06
    1220:	00 97       	sbiw	r24, 0x00	; 0
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1222:	69 f7       	brne	.-38     	; 0x11fe <LCD_voidSendData+0xc0>
    1224:	14 c0       	rjmp	.+40     	; 0x124e <LCD_voidSendData+0x110>
    1226:	6f 81       	ldd	r22, Y+7	; 0x07
    1228:	78 85       	ldd	r23, Y+8	; 0x08
    122a:	89 85       	ldd	r24, Y+9	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    122c:	9a 85       	ldd	r25, Y+10	; 0x0a
    122e:	0e 94 40 00 	call	0x80	; 0x80 <__fixunssfsi>
    1232:	dc 01       	movw	r26, r24
    1234:	cb 01       	movw	r24, r22
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1236:	9e 83       	std	Y+6, r25	; 0x06
    1238:	8d 83       	std	Y+5, r24	; 0x05
    123a:	8d 81       	ldd	r24, Y+5	; 0x05
    123c:	9e 81       	ldd	r25, Y+6	; 0x06
    123e:	9a 83       	std	Y+2, r25	; 0x02
    1240:	89 83       	std	Y+1, r24	; 0x01
    1242:	89 81       	ldd	r24, Y+1	; 0x01
    1244:	9a 81       	ldd	r25, Y+2	; 0x02
    1246:	01 97       	sbiw	r24, 0x01	; 1
    1248:	f1 f7       	brne	.-4      	; 0x1246 <LCD_voidSendData+0x108>
    124a:	9a 83       	std	Y+2, r25	; 0x02
    124c:	89 83       	std	Y+1, r24	; 0x01
    124e:	81 e0       	ldi	r24, 0x01	; 1
    1250:	62 e0       	ldi	r22, 0x02	; 2
    1252:	40 e0       	ldi	r20, 0x00	; 0
    1254:	63 dd       	rcall	.-1338   	; 0xd1c <DIO_voidSetpinvalue>
    1256:	2f 96       	adiw	r28, 0x0f	; 15
    1258:	0f b6       	in	r0, 0x3f	; 63
    125a:	f8 94       	cli
    125c:	de bf       	out	0x3e, r29	; 62
	_delay_ms(2);
	DIO_voidSetpinvalue(LCD_EN_PORT,LCD_EN_PIN,LOW);
    125e:	0f be       	out	0x3f, r0	; 63
    1260:	cd bf       	out	0x3d, r28	; 61
    1262:	cf 91       	pop	r28
    1264:	df 91       	pop	r29
    1266:	08 95       	ret

00001268 <LCD_voidSentCommand>:

}

void LCD_voidSentCommand(u8 Copy_u8Data)
{
    1268:	df 93       	push	r29
    126a:	cf 93       	push	r28
    126c:	cd b7       	in	r28, 0x3d	; 61
    126e:	de b7       	in	r29, 0x3e	; 62
    1270:	2f 97       	sbiw	r28, 0x0f	; 15
    1272:	0f b6       	in	r0, 0x3f	; 63
    1274:	f8 94       	cli
    1276:	de bf       	out	0x3e, r29	; 62
    1278:	0f be       	out	0x3f, r0	; 63
    127a:	cd bf       	out	0x3d, r28	; 61
    127c:	8f 87       	std	Y+15, r24	; 0x0f

	DIO_voidSetpinvalue(LCD_RS_PORT, LCD_RS_PIN, LOW);
    127e:	81 e0       	ldi	r24, 0x01	; 1
    1280:	60 e0       	ldi	r22, 0x00	; 0
    1282:	40 e0       	ldi	r20, 0x00	; 0
    1284:	4b dd       	rcall	.-1386   	; 0xd1c <DIO_voidSetpinvalue>
    1286:	81 e0       	ldi	r24, 0x01	; 1
		DIO_voidSetpinvalue(LCD_RW_PORT, LCD_RW_PIN, LOW);
    1288:	61 e0       	ldi	r22, 0x01	; 1
    128a:	40 e0       	ldi	r20, 0x00	; 0
    128c:	47 dd       	rcall	.-1394   	; 0xd1c <DIO_voidSetpinvalue>
    128e:	83 e0       	ldi	r24, 0x03	; 3
    1290:	6f 85       	ldd	r22, Y+15	; 0x0f
		DIO_voidSetSpecificPortValue(LCD_PORT_DATA, Copy_u8Data);
    1292:	14 df       	rcall	.-472    	; 0x10bc <DIO_voidSetSpecificPortValue>
    1294:	81 e0       	ldi	r24, 0x01	; 1
    1296:	62 e0       	ldi	r22, 0x02	; 2
    1298:	41 e0       	ldi	r20, 0x01	; 1
		DIO_voidSetpinvalue(LCD_EN_PORT,LCD_EN_PIN,HIGH);
    129a:	40 dd       	rcall	.-1408   	; 0xd1c <DIO_voidSetpinvalue>
    129c:	80 e0       	ldi	r24, 0x00	; 0
    129e:	90 e0       	ldi	r25, 0x00	; 0
    12a0:	a0 e0       	ldi	r26, 0x00	; 0
    12a2:	b0 e4       	ldi	r27, 0x40	; 64
    12a4:	8b 87       	std	Y+11, r24	; 0x0b
    12a6:	9c 87       	std	Y+12, r25	; 0x0c
    12a8:	ad 87       	std	Y+13, r26	; 0x0d
    12aa:	be 87       	std	Y+14, r27	; 0x0e
    12ac:	6b 85       	ldd	r22, Y+11	; 0x0b
    12ae:	7c 85       	ldd	r23, Y+12	; 0x0c
    12b0:	8d 85       	ldd	r24, Y+13	; 0x0d
    12b2:	9e 85       	ldd	r25, Y+14	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12b4:	20 e0       	ldi	r18, 0x00	; 0
    12b6:	30 e0       	ldi	r19, 0x00	; 0
    12b8:	4a ef       	ldi	r20, 0xFA	; 250
    12ba:	54 e4       	ldi	r21, 0x44	; 68
    12bc:	ab d8       	rcall	.-3754   	; 0x414 <__mulsf3>
    12be:	dc 01       	movw	r26, r24
    12c0:	cb 01       	movw	r24, r22
    12c2:	8f 83       	std	Y+7, r24	; 0x07
    12c4:	98 87       	std	Y+8, r25	; 0x08
    12c6:	a9 87       	std	Y+9, r26	; 0x09
    12c8:	ba 87       	std	Y+10, r27	; 0x0a
    12ca:	6f 81       	ldd	r22, Y+7	; 0x07
    12cc:	78 85       	ldd	r23, Y+8	; 0x08
    12ce:	89 85       	ldd	r24, Y+9	; 0x09
    12d0:	9a 85       	ldd	r25, Y+10	; 0x0a
    12d2:	20 e0       	ldi	r18, 0x00	; 0
	if (__tmp < 1.0)
    12d4:	30 e0       	ldi	r19, 0x00	; 0
    12d6:	40 e8       	ldi	r20, 0x80	; 128
    12d8:	5f e3       	ldi	r21, 0x3F	; 63
    12da:	e8 d9       	rcall	.-3120   	; 0x6ac <__ltsf2>
    12dc:	88 23       	and	r24, r24
    12de:	2c f4       	brge	.+10     	; 0x12ea <LCD_voidSentCommand+0x82>
    12e0:	81 e0       	ldi	r24, 0x01	; 1
    12e2:	90 e0       	ldi	r25, 0x00	; 0
    12e4:	9e 83       	std	Y+6, r25	; 0x06
    12e6:	8d 83       	std	Y+5, r24	; 0x05
    12e8:	3d c0       	rjmp	.+122    	; 0x1364 <LCD_voidSentCommand+0xfc>
    12ea:	6f 81       	ldd	r22, Y+7	; 0x07
		__ticks = 1;
    12ec:	78 85       	ldd	r23, Y+8	; 0x08
    12ee:	89 85       	ldd	r24, Y+9	; 0x09
    12f0:	9a 85       	ldd	r25, Y+10	; 0x0a
    12f2:	20 e0       	ldi	r18, 0x00	; 0
    12f4:	3f ef       	ldi	r19, 0xFF	; 255
	else if (__tmp > 65535)
    12f6:	4f e7       	ldi	r20, 0x7F	; 127
    12f8:	57 e4       	ldi	r21, 0x47	; 71
    12fa:	82 d9       	rcall	.-3324   	; 0x600 <__gtsf2>
    12fc:	18 16       	cp	r1, r24
    12fe:	44 f5       	brge	.+80     	; 0x1350 <LCD_voidSentCommand+0xe8>
    1300:	6b 85       	ldd	r22, Y+11	; 0x0b
    1302:	7c 85       	ldd	r23, Y+12	; 0x0c
    1304:	8d 85       	ldd	r24, Y+13	; 0x0d
    1306:	9e 85       	ldd	r25, Y+14	; 0x0e
    1308:	20 e0       	ldi	r18, 0x00	; 0
    130a:	30 e0       	ldi	r19, 0x00	; 0
    130c:	40 e2       	ldi	r20, 0x20	; 32
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    130e:	51 e4       	ldi	r21, 0x41	; 65
    1310:	81 d8       	rcall	.-3838   	; 0x414 <__mulsf3>
    1312:	dc 01       	movw	r26, r24
    1314:	cb 01       	movw	r24, r22
    1316:	bc 01       	movw	r22, r24
    1318:	cd 01       	movw	r24, r26
    131a:	0e 94 40 00 	call	0x80	; 0x80 <__fixunssfsi>
    131e:	dc 01       	movw	r26, r24
    1320:	cb 01       	movw	r24, r22
    1322:	9e 83       	std	Y+6, r25	; 0x06
    1324:	8d 83       	std	Y+5, r24	; 0x05
    1326:	0f c0       	rjmp	.+30     	; 0x1346 <LCD_voidSentCommand+0xde>
    1328:	88 ec       	ldi	r24, 0xC8	; 200
    132a:	90 e0       	ldi	r25, 0x00	; 0
    132c:	9c 83       	std	Y+4, r25	; 0x04
    132e:	8b 83       	std	Y+3, r24	; 0x03
    1330:	8b 81       	ldd	r24, Y+3	; 0x03
    1332:	9c 81       	ldd	r25, Y+4	; 0x04
    1334:	01 97       	sbiw	r24, 0x01	; 1
    1336:	f1 f7       	brne	.-4      	; 0x1334 <LCD_voidSentCommand+0xcc>
    1338:	9c 83       	std	Y+4, r25	; 0x04
    133a:	8b 83       	std	Y+3, r24	; 0x03
    133c:	8d 81       	ldd	r24, Y+5	; 0x05
    133e:	9e 81       	ldd	r25, Y+6	; 0x06
    1340:	01 97       	sbiw	r24, 0x01	; 1
    1342:	9e 83       	std	Y+6, r25	; 0x06
    1344:	8d 83       	std	Y+5, r24	; 0x05
    1346:	8d 81       	ldd	r24, Y+5	; 0x05
    1348:	9e 81       	ldd	r25, Y+6	; 0x06
    134a:	00 97       	sbiw	r24, 0x00	; 0
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    134c:	69 f7       	brne	.-38     	; 0x1328 <LCD_voidSentCommand+0xc0>
    134e:	14 c0       	rjmp	.+40     	; 0x1378 <LCD_voidSentCommand+0x110>
    1350:	6f 81       	ldd	r22, Y+7	; 0x07
    1352:	78 85       	ldd	r23, Y+8	; 0x08
    1354:	89 85       	ldd	r24, Y+9	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1356:	9a 85       	ldd	r25, Y+10	; 0x0a
    1358:	0e 94 40 00 	call	0x80	; 0x80 <__fixunssfsi>
    135c:	dc 01       	movw	r26, r24
    135e:	cb 01       	movw	r24, r22
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1360:	9e 83       	std	Y+6, r25	; 0x06
    1362:	8d 83       	std	Y+5, r24	; 0x05
    1364:	8d 81       	ldd	r24, Y+5	; 0x05
    1366:	9e 81       	ldd	r25, Y+6	; 0x06
    1368:	9a 83       	std	Y+2, r25	; 0x02
    136a:	89 83       	std	Y+1, r24	; 0x01
    136c:	89 81       	ldd	r24, Y+1	; 0x01
    136e:	9a 81       	ldd	r25, Y+2	; 0x02
    1370:	01 97       	sbiw	r24, 0x01	; 1
    1372:	f1 f7       	brne	.-4      	; 0x1370 <LCD_voidSentCommand+0x108>
    1374:	9a 83       	std	Y+2, r25	; 0x02
    1376:	89 83       	std	Y+1, r24	; 0x01
    1378:	81 e0       	ldi	r24, 0x01	; 1
    137a:	62 e0       	ldi	r22, 0x02	; 2
    137c:	40 e0       	ldi	r20, 0x00	; 0
    137e:	ce dc       	rcall	.-1636   	; 0xd1c <DIO_voidSetpinvalue>
    1380:	2f 96       	adiw	r28, 0x0f	; 15
    1382:	0f b6       	in	r0, 0x3f	; 63
    1384:	f8 94       	cli
    1386:	de bf       	out	0x3e, r29	; 62
		_delay_ms(2);
		DIO_voidSetpinvalue(LCD_EN_PORT,LCD_EN_PIN,LOW);
    1388:	0f be       	out	0x3f, r0	; 63
    138a:	cd bf       	out	0x3d, r28	; 61
    138c:	cf 91       	pop	r28
    138e:	df 91       	pop	r29
    1390:	08 95       	ret

00001392 <LCD_voidInit>:


}

void LCD_voidInit(void)
{
    1392:	df 93       	push	r29
    1394:	cf 93       	push	r28
    1396:	cd b7       	in	r28, 0x3d	; 61
    1398:	de b7       	in	r29, 0x3e	; 62
    139a:	2e 97       	sbiw	r28, 0x0e	; 14
    139c:	0f b6       	in	r0, 0x3f	; 63
    139e:	f8 94       	cli
    13a0:	de bf       	out	0x3e, r29	; 62
    13a2:	0f be       	out	0x3f, r0	; 63
    13a4:	cd bf       	out	0x3d, r28	; 61

	DIO_voidSetSpecificPortDirection(LCD_PORT_DATA,0XFF );
    13a6:	83 e0       	ldi	r24, 0x03	; 3
    13a8:	6f ef       	ldi	r22, 0xFF	; 255
    13aa:	47 de       	rcall	.-882    	; 0x103a <DIO_voidSetSpecificPortDirection>
    13ac:	81 e0       	ldi	r24, 0x01	; 1

	DIO_voidSetpindirection(LCD_RS_PORT, LCD_RS_PIN, OUTPUT);
    13ae:	60 e0       	ldi	r22, 0x00	; 0
    13b0:	41 e0       	ldi	r20, 0x01	; 1
    13b2:	9e db       	rcall	.-2244   	; 0xaf0 <DIO_voidSetpindirection>
    13b4:	81 e0       	ldi	r24, 0x01	; 1
    13b6:	61 e0       	ldi	r22, 0x01	; 1
	DIO_voidSetpindirection(LCD_RW_PORT, LCD_RW_PIN, OUTPUT);
    13b8:	41 e0       	ldi	r20, 0x01	; 1
    13ba:	9a db       	rcall	.-2252   	; 0xaf0 <DIO_voidSetpindirection>
    13bc:	81 e0       	ldi	r24, 0x01	; 1
    13be:	62 e0       	ldi	r22, 0x02	; 2
    13c0:	41 e0       	ldi	r20, 0x01	; 1
	DIO_voidSetpindirection(LCD_EN_PORT, LCD_EN_PIN, OUTPUT);
    13c2:	96 db       	rcall	.-2260   	; 0xaf0 <DIO_voidSetpindirection>
    13c4:	80 e0       	ldi	r24, 0x00	; 0
    13c6:	90 e0       	ldi	r25, 0x00	; 0
    13c8:	a0 e2       	ldi	r26, 0x20	; 32
    13ca:	b2 e4       	ldi	r27, 0x42	; 66
    13cc:	8b 87       	std	Y+11, r24	; 0x0b
    13ce:	9c 87       	std	Y+12, r25	; 0x0c
    13d0:	ad 87       	std	Y+13, r26	; 0x0d
    13d2:	be 87       	std	Y+14, r27	; 0x0e
    13d4:	6b 85       	ldd	r22, Y+11	; 0x0b
    13d6:	7c 85       	ldd	r23, Y+12	; 0x0c
    13d8:	8d 85       	ldd	r24, Y+13	; 0x0d
    13da:	9e 85       	ldd	r25, Y+14	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    13dc:	20 e0       	ldi	r18, 0x00	; 0
    13de:	30 e0       	ldi	r19, 0x00	; 0
    13e0:	4a ef       	ldi	r20, 0xFA	; 250
    13e2:	54 e4       	ldi	r21, 0x44	; 68
    13e4:	17 d8       	rcall	.-4050   	; 0x414 <__mulsf3>
    13e6:	dc 01       	movw	r26, r24
    13e8:	cb 01       	movw	r24, r22
    13ea:	8f 83       	std	Y+7, r24	; 0x07
    13ec:	98 87       	std	Y+8, r25	; 0x08
    13ee:	a9 87       	std	Y+9, r26	; 0x09
    13f0:	ba 87       	std	Y+10, r27	; 0x0a
    13f2:	6f 81       	ldd	r22, Y+7	; 0x07
    13f4:	78 85       	ldd	r23, Y+8	; 0x08
    13f6:	89 85       	ldd	r24, Y+9	; 0x09
    13f8:	9a 85       	ldd	r25, Y+10	; 0x0a
    13fa:	20 e0       	ldi	r18, 0x00	; 0
	if (__tmp < 1.0)
    13fc:	30 e0       	ldi	r19, 0x00	; 0
    13fe:	40 e8       	ldi	r20, 0x80	; 128
    1400:	5f e3       	ldi	r21, 0x3F	; 63
    1402:	54 d9       	rcall	.-3416   	; 0x6ac <__ltsf2>
    1404:	88 23       	and	r24, r24
    1406:	2c f4       	brge	.+10     	; 0x1412 <LCD_voidInit+0x80>
    1408:	81 e0       	ldi	r24, 0x01	; 1
    140a:	90 e0       	ldi	r25, 0x00	; 0
    140c:	9e 83       	std	Y+6, r25	; 0x06
    140e:	8d 83       	std	Y+5, r24	; 0x05
    1410:	3e c0       	rjmp	.+124    	; 0x148e <LCD_voidInit+0xfc>
    1412:	6f 81       	ldd	r22, Y+7	; 0x07
		__ticks = 1;
    1414:	78 85       	ldd	r23, Y+8	; 0x08
    1416:	89 85       	ldd	r24, Y+9	; 0x09
    1418:	9a 85       	ldd	r25, Y+10	; 0x0a
    141a:	20 e0       	ldi	r18, 0x00	; 0
    141c:	3f ef       	ldi	r19, 0xFF	; 255
	else if (__tmp > 65535)
    141e:	4f e7       	ldi	r20, 0x7F	; 127
    1420:	57 e4       	ldi	r21, 0x47	; 71
    1422:	ee d8       	rcall	.-3620   	; 0x600 <__gtsf2>
    1424:	18 16       	cp	r1, r24
    1426:	4c f5       	brge	.+82     	; 0x147a <LCD_voidInit+0xe8>
    1428:	6b 85       	ldd	r22, Y+11	; 0x0b
    142a:	7c 85       	ldd	r23, Y+12	; 0x0c
    142c:	8d 85       	ldd	r24, Y+13	; 0x0d
    142e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1430:	20 e0       	ldi	r18, 0x00	; 0
    1432:	30 e0       	ldi	r19, 0x00	; 0
    1434:	40 e2       	ldi	r20, 0x20	; 32
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1436:	51 e4       	ldi	r21, 0x41	; 65
    1438:	0e 94 0a 02 	call	0x414	; 0x414 <__mulsf3>
    143c:	dc 01       	movw	r26, r24
    143e:	cb 01       	movw	r24, r22
    1440:	bc 01       	movw	r22, r24
    1442:	cd 01       	movw	r24, r26
    1444:	0e 94 40 00 	call	0x80	; 0x80 <__fixunssfsi>
    1448:	dc 01       	movw	r26, r24
    144a:	cb 01       	movw	r24, r22
    144c:	9e 83       	std	Y+6, r25	; 0x06
    144e:	8d 83       	std	Y+5, r24	; 0x05
    1450:	0f c0       	rjmp	.+30     	; 0x1470 <LCD_voidInit+0xde>
    1452:	88 ec       	ldi	r24, 0xC8	; 200
    1454:	90 e0       	ldi	r25, 0x00	; 0
    1456:	9c 83       	std	Y+4, r25	; 0x04
    1458:	8b 83       	std	Y+3, r24	; 0x03
    145a:	8b 81       	ldd	r24, Y+3	; 0x03
    145c:	9c 81       	ldd	r25, Y+4	; 0x04
    145e:	01 97       	sbiw	r24, 0x01	; 1
    1460:	f1 f7       	brne	.-4      	; 0x145e <LCD_voidInit+0xcc>
    1462:	9c 83       	std	Y+4, r25	; 0x04
    1464:	8b 83       	std	Y+3, r24	; 0x03
    1466:	8d 81       	ldd	r24, Y+5	; 0x05
    1468:	9e 81       	ldd	r25, Y+6	; 0x06
    146a:	01 97       	sbiw	r24, 0x01	; 1
    146c:	9e 83       	std	Y+6, r25	; 0x06
    146e:	8d 83       	std	Y+5, r24	; 0x05
    1470:	8d 81       	ldd	r24, Y+5	; 0x05
    1472:	9e 81       	ldd	r25, Y+6	; 0x06
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1474:	00 97       	sbiw	r24, 0x00	; 0
    1476:	69 f7       	brne	.-38     	; 0x1452 <LCD_voidInit+0xc0>
    1478:	14 c0       	rjmp	.+40     	; 0x14a2 <LCD_voidInit+0x110>
    147a:	6f 81       	ldd	r22, Y+7	; 0x07
    147c:	78 85       	ldd	r23, Y+8	; 0x08
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    147e:	89 85       	ldd	r24, Y+9	; 0x09
    1480:	9a 85       	ldd	r25, Y+10	; 0x0a
    1482:	0e 94 40 00 	call	0x80	; 0x80 <__fixunssfsi>
    1486:	dc 01       	movw	r26, r24
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1488:	cb 01       	movw	r24, r22
    148a:	9e 83       	std	Y+6, r25	; 0x06
    148c:	8d 83       	std	Y+5, r24	; 0x05
    148e:	8d 81       	ldd	r24, Y+5	; 0x05
    1490:	9e 81       	ldd	r25, Y+6	; 0x06
    1492:	9a 83       	std	Y+2, r25	; 0x02
    1494:	89 83       	std	Y+1, r24	; 0x01
    1496:	89 81       	ldd	r24, Y+1	; 0x01
    1498:	9a 81       	ldd	r25, Y+2	; 0x02
    149a:	01 97       	sbiw	r24, 0x01	; 1
    149c:	f1 f7       	brne	.-4      	; 0x149a <LCD_voidInit+0x108>
    149e:	9a 83       	std	Y+2, r25	; 0x02
    14a0:	89 83       	std	Y+1, r24	; 0x01
    14a2:	88 e3       	ldi	r24, 0x38	; 56
    14a4:	e1 de       	rcall	.-574    	; 0x1268 <LCD_voidSentCommand>
    14a6:	8c e0       	ldi	r24, 0x0C	; 12
    14a8:	df de       	rcall	.-578    	; 0x1268 <LCD_voidSentCommand>
    14aa:	81 e0       	ldi	r24, 0x01	; 1
    14ac:	dd de       	rcall	.-582    	; 0x1268 <LCD_voidSentCommand>
    14ae:	2e 96       	adiw	r28, 0x0e	; 14
	_delay_ms(40);
	LCD_voidSentCommand(0b00111000);
    14b0:	0f b6       	in	r0, 0x3f	; 63
    14b2:	f8 94       	cli
    14b4:	de bf       	out	0x3e, r29	; 62
	LCD_voidSentCommand(0b00001100);
    14b6:	0f be       	out	0x3f, r0	; 63
    14b8:	cd bf       	out	0x3d, r28	; 61
    14ba:	cf 91       	pop	r28

	LCD_voidSentCommand(0b00000001);
    14bc:	df 91       	pop	r29
    14be:	08 95       	ret

000014c0 <LCD_voidClearDisplay>:

}

void LCD_voidClearDisplay(void)
{
    14c0:	df 93       	push	r29
    14c2:	cf 93       	push	r28
    14c4:	cd b7       	in	r28, 0x3d	; 61
    14c6:	de b7       	in	r29, 0x3e	; 62

	LCD_voidSentCommand(0b00000001);
    14c8:	81 e0       	ldi	r24, 0x01	; 1
    14ca:	ce de       	rcall	.-612    	; 0x1268 <LCD_voidSentCommand>
    14cc:	cf 91       	pop	r28

}
    14ce:	df 91       	pop	r29
    14d0:	08 95       	ret

000014d2 <main>:
#define F_CPU 8000000UL
#include<avr/delay.h>



int main(void){
    14d2:	df 93       	push	r29
    14d4:	cf 93       	push	r28
    14d6:	cd b7       	in	r28, 0x3d	; 61
    14d8:	de b7       	in	r29, 0x3e	; 62

	LCD_voidInit();
    14da:	5b df       	rcall	.-330    	; 0x1392 <LCD_voidInit>
    14dc:	82 e0       	ldi	r24, 0x02	; 2
	DIO_voidSetpindirection(DIO_PORTC,DIO_PIN0, OUTPUT);
    14de:	60 e0       	ldi	r22, 0x00	; 0
    14e0:	41 e0       	ldi	r20, 0x01	; 1
    14e2:	06 db       	rcall	.-2548   	; 0xaf0 <DIO_voidSetpindirection>
    14e4:	82 e0       	ldi	r24, 0x02	; 2
    14e6:	61 e0       	ldi	r22, 0x01	; 1
	DIO_voidSetpindirection(DIO_PORTC,DIO_PIN1, OUTPUT);
    14e8:	41 e0       	ldi	r20, 0x01	; 1
    14ea:	02 db       	rcall	.-2556   	; 0xaf0 <DIO_voidSetpindirection>
    14ec:	80 e0       	ldi	r24, 0x00	; 0
    14ee:	60 e0       	ldi	r22, 0x00	; 0
    14f0:	40 e0       	ldi	r20, 0x00	; 0
	DIO_voidSetpindirection(DIO_PORTA,DIO_PIN0, INPUT);
    14f2:	fe da       	rcall	.-2564   	; 0xaf0 <DIO_voidSetpindirection>
    14f4:	80 e0       	ldi	r24, 0x00	; 0
    14f6:	61 e0       	ldi	r22, 0x01	; 1
    14f8:	40 e0       	ldi	r20, 0x00	; 0
    14fa:	fa da       	rcall	.-2572   	; 0xaf0 <DIO_voidSetpindirection>
	DIO_voidSetpindirection(DIO_PORTA,DIO_PIN1, INPUT);
    14fc:	80 e0       	ldi	r24, 0x00	; 0
    14fe:	60 e0       	ldi	r22, 0x00	; 0
    1500:	41 e0       	ldi	r20, 0x01	; 1
    1502:	0c dc       	rcall	.-2024   	; 0xd1c <DIO_voidSetpinvalue>
    1504:	80 e0       	ldi	r24, 0x00	; 0

	DIO_voidSetpinvalue(DIO_PORTA,DIO_PIN0, HIGH);
    1506:	61 e0       	ldi	r22, 0x01	; 1
    1508:	41 e0       	ldi	r20, 0x01	; 1
    150a:	08 dc       	rcall	.-2032   	; 0xd1c <DIO_voidSetpinvalue>
    150c:	82 e0       	ldi	r24, 0x02	; 2
    150e:	60 e0       	ldi	r22, 0x00	; 0
	DIO_voidSetpinvalue(DIO_PORTA,DIO_PIN1, HIGH);
    1510:	40 e0       	ldi	r20, 0x00	; 0
    1512:	04 dc       	rcall	.-2040   	; 0xd1c <DIO_voidSetpinvalue>
    1514:	82 e0       	ldi	r24, 0x02	; 2
    1516:	61 e0       	ldi	r22, 0x01	; 1
    1518:	40 e0       	ldi	r20, 0x00	; 0

	DIO_voidSetpinvalue(DIO_PORTC,DIO_PIN0, LOW);
    151a:	00 dc       	rcall	.-2048   	; 0xd1c <DIO_voidSetpinvalue>
    151c:	80 e0       	ldi	r24, 0x00	; 0
    151e:	60 e0       	ldi	r22, 0x00	; 0
    1520:	13 dd       	rcall	.-1498   	; 0xf48 <DIO_u8GetPinValue>
    1522:	88 23       	and	r24, r24
	DIO_voidSetpinvalue(DIO_PORTC,DIO_PIN1, LOW);
    1524:	f1 f4       	brne	.+60     	; 0x1562 <main+0x90>
    1526:	82 e0       	ldi	r24, 0x02	; 2
    1528:	60 e0       	ldi	r22, 0x00	; 0
    152a:	41 e0       	ldi	r20, 0x01	; 1
    152c:	f7 db       	rcall	.-2066   	; 0xd1c <DIO_voidSetpinvalue>



	while(1)
	{
		if(DIO_u8GetPinValue(DIO_PORTA,DIO_PIN0)==0){
    152e:	82 e0       	ldi	r24, 0x02	; 2
    1530:	61 e0       	ldi	r22, 0x01	; 1
    1532:	40 e0       	ldi	r20, 0x00	; 0
    1534:	f3 db       	rcall	.-2074   	; 0xd1c <DIO_voidSetpinvalue>
    1536:	c4 df       	rcall	.-120    	; 0x14c0 <LCD_voidClearDisplay>
    1538:	83 e4       	ldi	r24, 0x43	; 67
			DIO_voidSetpinvalue(DIO_PORTC,DIO_PIN0, HIGH);
    153a:	01 de       	rcall	.-1022   	; 0x113e <LCD_voidSendData>
    153c:	8f e6       	ldi	r24, 0x6F	; 111
    153e:	ff dd       	rcall	.-1026   	; 0x113e <LCD_voidSendData>
    1540:	85 e7       	ldi	r24, 0x75	; 117
    1542:	fd dd       	rcall	.-1030   	; 0x113e <LCD_voidSendData>
			DIO_voidSetpinvalue(DIO_PORTC,DIO_PIN1, LOW);
    1544:	8e e6       	ldi	r24, 0x6E	; 110
    1546:	fb dd       	rcall	.-1034   	; 0x113e <LCD_voidSendData>
    1548:	84 e7       	ldi	r24, 0x74	; 116
    154a:	f9 dd       	rcall	.-1038   	; 0x113e <LCD_voidSendData>
    154c:	85 e6       	ldi	r24, 0x65	; 101
			LCD_voidClearDisplay();
    154e:	f7 dd       	rcall	.-1042   	; 0x113e <LCD_voidSendData>
    1550:	82 e7       	ldi	r24, 0x72	; 114
			LCD_voidSendData('C');
    1552:	f5 dd       	rcall	.-1046   	; 0x113e <LCD_voidSendData>
    1554:	80 e2       	ldi	r24, 0x20	; 32
    1556:	f3 dd       	rcall	.-1050   	; 0x113e <LCD_voidSendData>
			LCD_voidSendData('o');
    1558:	83 e4       	ldi	r24, 0x43	; 67
    155a:	f1 dd       	rcall	.-1054   	; 0x113e <LCD_voidSendData>
    155c:	87 e5       	ldi	r24, 0x57	; 87
			LCD_voidSendData('u');
    155e:	ef dd       	rcall	.-1058   	; 0x113e <LCD_voidSendData>
    1560:	dd cf       	rjmp	.-70     	; 0x151c <main+0x4a>
    1562:	80 e0       	ldi	r24, 0x00	; 0
			LCD_voidSendData('n');
    1564:	61 e0       	ldi	r22, 0x01	; 1
    1566:	f0 dc       	rcall	.-1568   	; 0xf48 <DIO_u8GetPinValue>
    1568:	88 23       	and	r24, r24
			LCD_voidSendData('t');
    156a:	c1 f6       	brne	.-80     	; 0x151c <main+0x4a>
    156c:	82 e0       	ldi	r24, 0x02	; 2
    156e:	60 e0       	ldi	r22, 0x00	; 0
			LCD_voidSendData('e');
    1570:	40 e0       	ldi	r20, 0x00	; 0
    1572:	d4 db       	rcall	.-2136   	; 0xd1c <DIO_voidSetpinvalue>
    1574:	82 e0       	ldi	r24, 0x02	; 2
	        LCD_voidSendData('r');
    1576:	61 e0       	ldi	r22, 0x01	; 1
    1578:	41 e0       	ldi	r20, 0x01	; 1
    157a:	d0 db       	rcall	.-2144   	; 0xd1c <DIO_voidSetpinvalue>
	        LCD_voidSendData(' ');
    157c:	a1 df       	rcall	.-190    	; 0x14c0 <LCD_voidClearDisplay>
    157e:	83 e4       	ldi	r24, 0x43	; 67
    1580:	de dd       	rcall	.-1092   	; 0x113e <LCD_voidSendData>
			LCD_voidSendData('C');
    1582:	87 e5       	ldi	r24, 0x57	; 87
    1584:	dc dd       	rcall	.-1096   	; 0x113e <LCD_voidSendData>
    1586:	ca cf       	rjmp	.-108    	; 0x151c <main+0x4a>

00001588 <__prologue_saves__>:
			LCD_voidSendData('W');
    1588:	2f 92       	push	r2
    158a:	3f 92       	push	r3
    158c:	4f 92       	push	r4
    158e:	5f 92       	push	r5
		}

		else if(DIO_u8GetPinValue(DIO_PORTA,DIO_PIN1)==0){
    1590:	6f 92       	push	r6
    1592:	7f 92       	push	r7
    1594:	8f 92       	push	r8
    1596:	9f 92       	push	r9
    1598:	af 92       	push	r10
    159a:	bf 92       	push	r11
			DIO_voidSetpinvalue(DIO_PORTC,DIO_PIN0, LOW);
    159c:	cf 92       	push	r12
    159e:	df 92       	push	r13
    15a0:	ef 92       	push	r14
    15a2:	ff 92       	push	r15
    15a4:	0f 93       	push	r16
			DIO_voidSetpinvalue(DIO_PORTC,DIO_PIN1, HIGH);
    15a6:	1f 93       	push	r17
    15a8:	cf 93       	push	r28
    15aa:	df 93       	push	r29
    15ac:	cd b7       	in	r28, 0x3d	; 61
    15ae:	de b7       	in	r29, 0x3e	; 62
			LCD_voidClearDisplay();
    15b0:	ca 1b       	sub	r28, r26
    15b2:	db 0b       	sbc	r29, r27
			LCD_voidSendData('C');
    15b4:	0f b6       	in	r0, 0x3f	; 63
    15b6:	f8 94       	cli
    15b8:	de bf       	out	0x3e, r29	; 62
			LCD_voidSendData('W');
    15ba:	0f be       	out	0x3f, r0	; 63
    15bc:	cd bf       	out	0x3d, r28	; 61
    15be:	09 94       	ijmp

000015c0 <__epilogue_restores__>:
    15c0:	2a 88       	ldd	r2, Y+18	; 0x12
    15c2:	39 88       	ldd	r3, Y+17	; 0x11
    15c4:	48 88       	ldd	r4, Y+16	; 0x10
    15c6:	5f 84       	ldd	r5, Y+15	; 0x0f
    15c8:	6e 84       	ldd	r6, Y+14	; 0x0e
    15ca:	7d 84       	ldd	r7, Y+13	; 0x0d
    15cc:	8c 84       	ldd	r8, Y+12	; 0x0c
    15ce:	9b 84       	ldd	r9, Y+11	; 0x0b
    15d0:	aa 84       	ldd	r10, Y+10	; 0x0a
    15d2:	b9 84       	ldd	r11, Y+9	; 0x09
    15d4:	c8 84       	ldd	r12, Y+8	; 0x08
    15d6:	df 80       	ldd	r13, Y+7	; 0x07
    15d8:	ee 80       	ldd	r14, Y+6	; 0x06
    15da:	fd 80       	ldd	r15, Y+5	; 0x05
    15dc:	0c 81       	ldd	r16, Y+4	; 0x04
    15de:	1b 81       	ldd	r17, Y+3	; 0x03
    15e0:	aa 81       	ldd	r26, Y+2	; 0x02
    15e2:	b9 81       	ldd	r27, Y+1	; 0x01
    15e4:	ce 0f       	add	r28, r30
    15e6:	d1 1d       	adc	r29, r1
    15e8:	0f b6       	in	r0, 0x3f	; 63
    15ea:	f8 94       	cli
    15ec:	de bf       	out	0x3e, r29	; 62
    15ee:	0f be       	out	0x3f, r0	; 63
    15f0:	cd bf       	out	0x3d, r28	; 61
    15f2:	ed 01       	movw	r28, r26
    15f4:	08 95       	ret

000015f6 <_exit>:
    15f6:	f8 94       	cli

000015f8 <__stop_program>:
    15f8:	ff cf       	rjmp	.-2      	; 0x15f8 <__stop_program>
